Terminals unused in grammar

   T_IF
   T_ELSE
   T_WHILE
   T_VOID
   T_AUTO
   T_BREAK
   T_CASE
   T_CHAR
   T_CONTINUE
   T_DEFUALT
   T_DO
   T_ENUM
   T_EXTERN
   T_FOR
   T_GOTO
   T_LONG
   T_REGISTER
   T_SHORT
   T_SIGNED
   T_SIZEOF
   T_STRUCT
   T_SWITCH
   T_TYPEDEF
   T_UNION
   T_INLINE
   T_DEFINE
   T_SOON
   T_ADD
   T_SUB
   T_MUL
   T_DIV
   T_MOD
   T_INC
   T_DEC
   T_GE
   T_LE
   T_GR
   T_LS
   T_ADD_ASSIGN
   T_SUB_ASSIGN
   T_MUL_ASSIGN
   T_DIV_ASSIGN
   T_LSQUARE
   T_RSQUARE
   T_BOR
   T_BAND
   T_BXOR
   T_NOT
   T_LSHIFT
   T_RSHIFT
   T_POINTER
   T_QUESTION
   T_SEMICOLON
   T_SPOT
   T_COMMA
   T_COLON
   T_UINT
   T_LONGINT
   T_ULONG
   T_CHARACTOR


State 11 conflicts: 7 shift/reduce
State 14 conflicts: 7 shift/reduce
State 29 conflicts: 1 shift/reduce


Grammar

    0 $accept: ROOT $end

    1 ROOT: PROGRAM

    2 PROGRAM: EX_DECLARATION FUNCTION_NODE
    3        | EX_DECLARATION
    4        | FUNCTION_NODE

    5 EX_DECLARATION: EX_NON_FUNCTION_DECLARATION EX_FUNCTION_DECLARATION
    6               | EX_NON_FUNCTION_DECLARATION
    7               | EX_FUNCTION_DECLARATION

    8 EX_NON_FUNCTION_DECLARATION: EX_VAR_DECLATATION EX_VAR_DEFINITION
    9                            | EX_VAR_DECLATATION
   10                            | EX_VAR_DEFINITION

   11 EX_FUNCTION_DECLARATION: TYPE ID T_LPARENTHESIS ARG_LIST T_RPARENTHESIS ';'
   12                        | SPECIAL TYPE ID T_LPARENTHESIS ARG_LIST T_RPARENTHESIS
   13                        | TYPE ID T_LPARENTHESIS ARG_LIST T_RPARENTHESIS

   14 ARG_LIST: EX_VAR_DECLATATION
   15         | ARG_LIST ',' EX_VAR_DECLATATION

   16 FUNCTION_NODE: EX_FUNCTION_DECLARATION T_LBRACE EXPR T_RBRACE
   17              | EX_FUNCTION_DECLARATION T_LBRACE T_RBRACE

   18 EXPR: ID T_EQ VALUE

   19 EX_VAR_DECLATATION: TYPE ID

   20 EX_VAR_DEFINITION: TYPE ID T_EQ VALUE

   21 VALUE: T_INTEGER
   22      | T_V_FLOAT
   23      | T_V_STRING

   24 TYPE: SPECIAL TYPE
   25     | T_INT
   26     | T_FLOAT
   27     | T_DOUBLE
   28     | T_UNSIGNED

   29 SPECIAL: T_CONST
   30        | T_STATIC
   31        | T_VOLATILE

   32 ID: T_ID


Terminals, with rules where they appear

$end (0) 0
',' (44) 15
';' (59) 11
error (256)
T_INT (258) 25
T_IF (259)
T_ELSE (260)
T_WHILE (261)
T_VOID (262)
T_FLOAT (263) 26
T_DOUBLE (264) 27
T_AUTO (265)
T_BREAK (266)
T_CASE (267)
T_CHAR (268)
T_CONST (269) 29
T_CONTINUE (270)
T_DEFUALT (271)
T_DO (272)
T_ENUM (273)
T_EXTERN (274)
T_FOR (275)
T_GOTO (276)
T_LONG (277)
T_REGISTER (278)
T_SHORT (279)
T_SIGNED (280)
T_SIZEOF (281)
T_STATIC (282) 30
T_STRUCT (283)
T_SWITCH (284)
T_TYPEDEF (285)
T_UNION (286)
T_UNSIGNED (287) 28
T_VOLATILE (288) 31
T_INLINE (289)
T_DEFINE (290)
T_SOON (291)
T_ADD (292)
T_SUB (293)
T_MUL (294)
T_DIV (295)
T_MOD (296)
T_INC (297)
T_DEC (298)
T_EQ (299) 18 20
T_GE (300)
T_LE (301)
T_GR (302)
T_LS (303)
T_ADD_ASSIGN (304)
T_SUB_ASSIGN (305)
T_MUL_ASSIGN (306)
T_DIV_ASSIGN (307)
T_LPARENTHESIS (308) 11 12 13
T_RPARENTHESIS (309) 11 12 13
T_LBRACE (310) 16 17
T_RBRACE (311) 16 17
T_LSQUARE (312)
T_RSQUARE (313)
T_BOR (314)
T_BAND (315)
T_BXOR (316)
T_NOT (317)
T_LSHIFT (318)
T_RSHIFT (319)
T_POINTER (320)
T_QUESTION (321)
T_SEMICOLON (322)
T_SPOT (323)
T_COMMA (324)
T_COLON (325)
T_V_FLOAT (326) 22
T_INTEGER (327) 21
T_UINT (328)
T_LONGINT (329)
T_ULONG (330)
T_CHARACTOR (331)
T_V_STRING (332) 23
T_ID (333) 32


Nonterminals, with rules where they appear

$accept (81)
    on left: 0
ROOT (82)
    on left: 1, on right: 0
PROGRAM (83)
    on left: 2 3 4, on right: 1
EX_DECLARATION (84)
    on left: 5 6 7, on right: 2 3
EX_NON_FUNCTION_DECLARATION (85)
    on left: 8 9 10, on right: 5 6
EX_FUNCTION_DECLARATION (86)
    on left: 11 12 13, on right: 5 7 16 17
ARG_LIST (87)
    on left: 14 15, on right: 11 12 13 15
FUNCTION_NODE (88)
    on left: 16 17, on right: 2 4
EXPR (89)
    on left: 18, on right: 16
EX_VAR_DECLATATION (90)
    on left: 19, on right: 8 9 14 15
EX_VAR_DEFINITION (91)
    on left: 20, on right: 8 10
VALUE (92)
    on left: 21 22 23, on right: 18 20
TYPE (93)
    on left: 24 25 26 27 28, on right: 11 12 13 19 20 24
SPECIAL (94)
    on left: 29 30 31, on right: 12 24
ID (95)
    on left: 32, on right: 11 12 13 18 19 20


State 0

    0 $accept: . ROOT $end

    T_INT       shift, and go to state 1
    T_FLOAT     shift, and go to state 2
    T_DOUBLE    shift, and go to state 3
    T_CONST     shift, and go to state 4
    T_STATIC    shift, and go to state 5
    T_UNSIGNED  shift, and go to state 6
    T_VOLATILE  shift, and go to state 7

    ROOT                         go to state 8
    PROGRAM                      go to state 9
    EX_DECLARATION               go to state 10
    EX_NON_FUNCTION_DECLARATION  go to state 11
    EX_FUNCTION_DECLARATION      go to state 12
    FUNCTION_NODE                go to state 13
    EX_VAR_DECLATATION           go to state 14
    EX_VAR_DEFINITION            go to state 15
    TYPE                         go to state 16
    SPECIAL                      go to state 17


State 1

   25 TYPE: T_INT .

    $default  reduce using rule 25 (TYPE)


State 2

   26 TYPE: T_FLOAT .

    $default  reduce using rule 26 (TYPE)


State 3

   27 TYPE: T_DOUBLE .

    $default  reduce using rule 27 (TYPE)


State 4

   29 SPECIAL: T_CONST .

    $default  reduce using rule 29 (SPECIAL)


State 5

   30 SPECIAL: T_STATIC .

    $default  reduce using rule 30 (SPECIAL)


State 6

   28 TYPE: T_UNSIGNED .

    $default  reduce using rule 28 (TYPE)


State 7

   31 SPECIAL: T_VOLATILE .

    $default  reduce using rule 31 (SPECIAL)


State 8

    0 $accept: ROOT . $end

    $end  shift, and go to state 18


State 9

    1 ROOT: PROGRAM .

    $default  reduce using rule 1 (ROOT)


State 10

    2 PROGRAM: EX_DECLARATION . FUNCTION_NODE
    3        | EX_DECLARATION .

    T_INT       shift, and go to state 1
    T_FLOAT     shift, and go to state 2
    T_DOUBLE    shift, and go to state 3
    T_CONST     shift, and go to state 4
    T_STATIC    shift, and go to state 5
    T_UNSIGNED  shift, and go to state 6
    T_VOLATILE  shift, and go to state 7

    $default  reduce using rule 3 (PROGRAM)

    EX_FUNCTION_DECLARATION  go to state 19
    FUNCTION_NODE            go to state 20
    TYPE                     go to state 21
    SPECIAL                  go to state 17


State 11

    5 EX_DECLARATION: EX_NON_FUNCTION_DECLARATION . EX_FUNCTION_DECLARATION
    6               | EX_NON_FUNCTION_DECLARATION .

    T_INT       shift, and go to state 1
    T_FLOAT     shift, and go to state 2
    T_DOUBLE    shift, and go to state 3
    T_CONST     shift, and go to state 4
    T_STATIC    shift, and go to state 5
    T_UNSIGNED  shift, and go to state 6
    T_VOLATILE  shift, and go to state 7

    T_INT       [reduce using rule 6 (EX_DECLARATION)]
    T_FLOAT     [reduce using rule 6 (EX_DECLARATION)]
    T_DOUBLE    [reduce using rule 6 (EX_DECLARATION)]
    T_CONST     [reduce using rule 6 (EX_DECLARATION)]
    T_STATIC    [reduce using rule 6 (EX_DECLARATION)]
    T_UNSIGNED  [reduce using rule 6 (EX_DECLARATION)]
    T_VOLATILE  [reduce using rule 6 (EX_DECLARATION)]
    $default    reduce using rule 6 (EX_DECLARATION)

    EX_FUNCTION_DECLARATION  go to state 22
    TYPE                     go to state 21
    SPECIAL                  go to state 17


State 12

    7 EX_DECLARATION: EX_FUNCTION_DECLARATION .
   16 FUNCTION_NODE: EX_FUNCTION_DECLARATION . T_LBRACE EXPR T_RBRACE
   17              | EX_FUNCTION_DECLARATION . T_LBRACE T_RBRACE

    T_LBRACE  shift, and go to state 23

    $default  reduce using rule 7 (EX_DECLARATION)


State 13

    4 PROGRAM: FUNCTION_NODE .

    $default  reduce using rule 4 (PROGRAM)


State 14

    8 EX_NON_FUNCTION_DECLARATION: EX_VAR_DECLATATION . EX_VAR_DEFINITION
    9                            | EX_VAR_DECLATATION .

    T_INT       shift, and go to state 1
    T_FLOAT     shift, and go to state 2
    T_DOUBLE    shift, and go to state 3
    T_CONST     shift, and go to state 4
    T_STATIC    shift, and go to state 5
    T_UNSIGNED  shift, and go to state 6
    T_VOLATILE  shift, and go to state 7

    T_INT       [reduce using rule 9 (EX_NON_FUNCTION_DECLARATION)]
    T_FLOAT     [reduce using rule 9 (EX_NON_FUNCTION_DECLARATION)]
    T_DOUBLE    [reduce using rule 9 (EX_NON_FUNCTION_DECLARATION)]
    T_CONST     [reduce using rule 9 (EX_NON_FUNCTION_DECLARATION)]
    T_STATIC    [reduce using rule 9 (EX_NON_FUNCTION_DECLARATION)]
    T_UNSIGNED  [reduce using rule 9 (EX_NON_FUNCTION_DECLARATION)]
    T_VOLATILE  [reduce using rule 9 (EX_NON_FUNCTION_DECLARATION)]
    $default    reduce using rule 9 (EX_NON_FUNCTION_DECLARATION)

    EX_VAR_DEFINITION  go to state 24
    TYPE               go to state 25
    SPECIAL            go to state 26


State 15

   10 EX_NON_FUNCTION_DECLARATION: EX_VAR_DEFINITION .

    $default  reduce using rule 10 (EX_NON_FUNCTION_DECLARATION)


State 16

   11 EX_FUNCTION_DECLARATION: TYPE . ID T_LPARENTHESIS ARG_LIST T_RPARENTHESIS ';'
   13                        | TYPE . ID T_LPARENTHESIS ARG_LIST T_RPARENTHESIS
   19 EX_VAR_DECLATATION: TYPE . ID
   20 EX_VAR_DEFINITION: TYPE . ID T_EQ VALUE

    T_ID  shift, and go to state 27

    ID  go to state 28


State 17

   12 EX_FUNCTION_DECLARATION: SPECIAL . TYPE ID T_LPARENTHESIS ARG_LIST T_RPARENTHESIS
   24 TYPE: SPECIAL . TYPE

    T_INT       shift, and go to state 1
    T_FLOAT     shift, and go to state 2
    T_DOUBLE    shift, and go to state 3
    T_CONST     shift, and go to state 4
    T_STATIC    shift, and go to state 5
    T_UNSIGNED  shift, and go to state 6
    T_VOLATILE  shift, and go to state 7

    TYPE     go to state 29
    SPECIAL  go to state 26


State 18

    0 $accept: ROOT $end .

    $default  accept


State 19

   16 FUNCTION_NODE: EX_FUNCTION_DECLARATION . T_LBRACE EXPR T_RBRACE
   17              | EX_FUNCTION_DECLARATION . T_LBRACE T_RBRACE

    T_LBRACE  shift, and go to state 23


State 20

    2 PROGRAM: EX_DECLARATION FUNCTION_NODE .

    $default  reduce using rule 2 (PROGRAM)


State 21

   11 EX_FUNCTION_DECLARATION: TYPE . ID T_LPARENTHESIS ARG_LIST T_RPARENTHESIS ';'
   13                        | TYPE . ID T_LPARENTHESIS ARG_LIST T_RPARENTHESIS

    T_ID  shift, and go to state 27

    ID  go to state 30


State 22

    5 EX_DECLARATION: EX_NON_FUNCTION_DECLARATION EX_FUNCTION_DECLARATION .

    $default  reduce using rule 5 (EX_DECLARATION)


State 23

   16 FUNCTION_NODE: EX_FUNCTION_DECLARATION T_LBRACE . EXPR T_RBRACE
   17              | EX_FUNCTION_DECLARATION T_LBRACE . T_RBRACE

    T_RBRACE  shift, and go to state 31
    T_ID      shift, and go to state 27

    EXPR  go to state 32
    ID    go to state 33


State 24

    8 EX_NON_FUNCTION_DECLARATION: EX_VAR_DECLATATION EX_VAR_DEFINITION .

    $default  reduce using rule 8 (EX_NON_FUNCTION_DECLARATION)


State 25

   20 EX_VAR_DEFINITION: TYPE . ID T_EQ VALUE

    T_ID  shift, and go to state 27

    ID  go to state 34


State 26

   24 TYPE: SPECIAL . TYPE

    T_INT       shift, and go to state 1
    T_FLOAT     shift, and go to state 2
    T_DOUBLE    shift, and go to state 3
    T_CONST     shift, and go to state 4
    T_STATIC    shift, and go to state 5
    T_UNSIGNED  shift, and go to state 6
    T_VOLATILE  shift, and go to state 7

    TYPE     go to state 35
    SPECIAL  go to state 26


State 27

   32 ID: T_ID .

    $default  reduce using rule 32 (ID)


State 28

   11 EX_FUNCTION_DECLARATION: TYPE ID . T_LPARENTHESIS ARG_LIST T_RPARENTHESIS ';'
   13                        | TYPE ID . T_LPARENTHESIS ARG_LIST T_RPARENTHESIS
   19 EX_VAR_DECLATATION: TYPE ID .
   20 EX_VAR_DEFINITION: TYPE ID . T_EQ VALUE

    T_EQ            shift, and go to state 36
    T_LPARENTHESIS  shift, and go to state 37

    $default  reduce using rule 19 (EX_VAR_DECLATATION)


State 29

   12 EX_FUNCTION_DECLARATION: SPECIAL TYPE . ID T_LPARENTHESIS ARG_LIST T_RPARENTHESIS
   24 TYPE: SPECIAL TYPE .

    T_ID  shift, and go to state 27

    T_ID  [reduce using rule 24 (TYPE)]

    ID  go to state 38


State 30

   11 EX_FUNCTION_DECLARATION: TYPE ID . T_LPARENTHESIS ARG_LIST T_RPARENTHESIS ';'
   13                        | TYPE ID . T_LPARENTHESIS ARG_LIST T_RPARENTHESIS

    T_LPARENTHESIS  shift, and go to state 37


State 31

   17 FUNCTION_NODE: EX_FUNCTION_DECLARATION T_LBRACE T_RBRACE .

    $default  reduce using rule 17 (FUNCTION_NODE)


State 32

   16 FUNCTION_NODE: EX_FUNCTION_DECLARATION T_LBRACE EXPR . T_RBRACE

    T_RBRACE  shift, and go to state 39


State 33

   18 EXPR: ID . T_EQ VALUE

    T_EQ  shift, and go to state 40


State 34

   20 EX_VAR_DEFINITION: TYPE ID . T_EQ VALUE

    T_EQ  shift, and go to state 36


State 35

   24 TYPE: SPECIAL TYPE .

    $default  reduce using rule 24 (TYPE)


State 36

   20 EX_VAR_DEFINITION: TYPE ID T_EQ . VALUE

    T_V_FLOAT   shift, and go to state 41
    T_INTEGER   shift, and go to state 42
    T_V_STRING  shift, and go to state 43

    VALUE  go to state 44


State 37

   11 EX_FUNCTION_DECLARATION: TYPE ID T_LPARENTHESIS . ARG_LIST T_RPARENTHESIS ';'
   13                        | TYPE ID T_LPARENTHESIS . ARG_LIST T_RPARENTHESIS

    T_INT       shift, and go to state 1
    T_FLOAT     shift, and go to state 2
    T_DOUBLE    shift, and go to state 3
    T_CONST     shift, and go to state 4
    T_STATIC    shift, and go to state 5
    T_UNSIGNED  shift, and go to state 6
    T_VOLATILE  shift, and go to state 7

    ARG_LIST            go to state 45
    EX_VAR_DECLATATION  go to state 46
    TYPE                go to state 47
    SPECIAL             go to state 26


State 38

   12 EX_FUNCTION_DECLARATION: SPECIAL TYPE ID . T_LPARENTHESIS ARG_LIST T_RPARENTHESIS

    T_LPARENTHESIS  shift, and go to state 48


State 39

   16 FUNCTION_NODE: EX_FUNCTION_DECLARATION T_LBRACE EXPR T_RBRACE .

    $default  reduce using rule 16 (FUNCTION_NODE)


State 40

   18 EXPR: ID T_EQ . VALUE

    T_V_FLOAT   shift, and go to state 41
    T_INTEGER   shift, and go to state 42
    T_V_STRING  shift, and go to state 43

    VALUE  go to state 49


State 41

   22 VALUE: T_V_FLOAT .

    $default  reduce using rule 22 (VALUE)


State 42

   21 VALUE: T_INTEGER .

    $default  reduce using rule 21 (VALUE)


State 43

   23 VALUE: T_V_STRING .

    $default  reduce using rule 23 (VALUE)


State 44

   20 EX_VAR_DEFINITION: TYPE ID T_EQ VALUE .

    $default  reduce using rule 20 (EX_VAR_DEFINITION)


State 45

   11 EX_FUNCTION_DECLARATION: TYPE ID T_LPARENTHESIS ARG_LIST . T_RPARENTHESIS ';'
   13                        | TYPE ID T_LPARENTHESIS ARG_LIST . T_RPARENTHESIS
   15 ARG_LIST: ARG_LIST . ',' EX_VAR_DECLATATION

    T_RPARENTHESIS  shift, and go to state 50
    ','             shift, and go to state 51


State 46

   14 ARG_LIST: EX_VAR_DECLATATION .

    $default  reduce using rule 14 (ARG_LIST)


State 47

   19 EX_VAR_DECLATATION: TYPE . ID

    T_ID  shift, and go to state 27

    ID  go to state 52


State 48

   12 EX_FUNCTION_DECLARATION: SPECIAL TYPE ID T_LPARENTHESIS . ARG_LIST T_RPARENTHESIS

    T_INT       shift, and go to state 1
    T_FLOAT     shift, and go to state 2
    T_DOUBLE    shift, and go to state 3
    T_CONST     shift, and go to state 4
    T_STATIC    shift, and go to state 5
    T_UNSIGNED  shift, and go to state 6
    T_VOLATILE  shift, and go to state 7

    ARG_LIST            go to state 53
    EX_VAR_DECLATATION  go to state 46
    TYPE                go to state 47
    SPECIAL             go to state 26


State 49

   18 EXPR: ID T_EQ VALUE .

    $default  reduce using rule 18 (EXPR)


State 50

   11 EX_FUNCTION_DECLARATION: TYPE ID T_LPARENTHESIS ARG_LIST T_RPARENTHESIS . ';'
   13                        | TYPE ID T_LPARENTHESIS ARG_LIST T_RPARENTHESIS .

    ';'  shift, and go to state 54

    $default  reduce using rule 13 (EX_FUNCTION_DECLARATION)


State 51

   15 ARG_LIST: ARG_LIST ',' . EX_VAR_DECLATATION

    T_INT       shift, and go to state 1
    T_FLOAT     shift, and go to state 2
    T_DOUBLE    shift, and go to state 3
    T_CONST     shift, and go to state 4
    T_STATIC    shift, and go to state 5
    T_UNSIGNED  shift, and go to state 6
    T_VOLATILE  shift, and go to state 7

    EX_VAR_DECLATATION  go to state 55
    TYPE                go to state 47
    SPECIAL             go to state 26


State 52

   19 EX_VAR_DECLATATION: TYPE ID .

    $default  reduce using rule 19 (EX_VAR_DECLATATION)


State 53

   12 EX_FUNCTION_DECLARATION: SPECIAL TYPE ID T_LPARENTHESIS ARG_LIST . T_RPARENTHESIS
   15 ARG_LIST: ARG_LIST . ',' EX_VAR_DECLATATION

    T_RPARENTHESIS  shift, and go to state 56
    ','             shift, and go to state 51


State 54

   11 EX_FUNCTION_DECLARATION: TYPE ID T_LPARENTHESIS ARG_LIST T_RPARENTHESIS ';' .

    $default  reduce using rule 11 (EX_FUNCTION_DECLARATION)


State 55

   15 ARG_LIST: ARG_LIST ',' EX_VAR_DECLATATION .

    $default  reduce using rule 15 (ARG_LIST)


State 56

   12 EX_FUNCTION_DECLARATION: SPECIAL TYPE ID T_LPARENTHESIS ARG_LIST T_RPARENTHESIS .

    $default  reduce using rule 12 (EX_FUNCTION_DECLARATION)
