Terminals unused in grammar

   T_AUTO
   T_LONG
   T_ELIPSIS
   T_REGISTER
   T_CHAR
   T_EXTERN
   T_UNION
   T_CONST
   T_SHORT
   T_UNSIGNED
   T_CONTINUE
   T_SIGNED
   T_VOID
   T_DEFAULT
   T_GOTO
   T_VOLATILE
   T_DO
   T_STATIC
   T_UNSIGNED_LONG_CONSTANT
   T_LONG_CONSTANT
   T_UNSIGNED_CONSTANT
   T_OP_DIV
   T_OP_MOD
   T_OP_GE
   T_OP_GT
   T_OP_B_ONESC
   T_OP_BRIGHT
   T_OP_BLEFT
   T_OP_PTR
   T_RIGHT_ASSIGN
   T_LEFT_ASSIGN
   T_AND_ASSIGN
   T_OR_ASSIGN
   T_XOR_ASSIGN


Rules useless in parser due to conflicts

   49 CASE_STATEMENT: T_CASE EXPR ':' T_L_BRACE STATEMENT T_R_BRACE
   50               | T_CASE EXPR ':' STATEMENT

   59 INCREASE_STATEMENT: T_OP_INC STATEMENT
   60                   | T_OP_DEC STATEMENT

   69 OP_EXPR: EXPR T_OP_EQ EXPR
   70        | EXPR T_OP_PLUS EXPR
   71        | EXPR T_OP_MINUS EXPR
   72        | EXPR T_OP_MUL EXPR
   73        | OP_EXPR
   74        | EXPR T_OP_BAND EXPR
   75        | EXPR T_OP_BOR EXPR
   76        | EXPR T_OP_BXOR EXPR
   77        | EXPR T_OP_NE EXPR
   78        | EXPR T_OP_LE EXPR
   79        | EXPR T_OP_LT EXPR
   80        | EXPR T_OP_LAND EXPR
   81        | EXPR T_OP_LOR EXPR

   86 SINGLE_EXPR: POINTER EXPR
   87            | T_OP_BAND EXPR

   90 LOGIC_EXPR: T_OP_LNOT EXPR

   98 DOT: EXPR '.' EXPR

  105 TYPE: TYPE

  110 ARG_LIST: ARG_LIST STATEMENT
  111         | STATEMENT
  112         | ARG_LIST EXPR
  113         | EXPR

  114 FOR_LIST: FOR_LIST STATEMENT
  115         | STATEMENT


State 15 conflicts: 1 shift/reduce, 1 reduce/reduce
State 32 conflicts: 28 reduce/reduce
State 39 conflicts: 5 shift/reduce
State 54 conflicts: 20 shift/reduce
State 55 conflicts: 50 reduce/reduce
State 64 conflicts: 1 shift/reduce
State 65 conflicts: 1 shift/reduce
State 66 conflicts: 1 shift/reduce
State 67 conflicts: 21 shift/reduce
State 71 conflicts: 1 shift/reduce
State 72 conflicts: 15 shift/reduce
State 75 conflicts: 5 shift/reduce
State 76 conflicts: 1 shift/reduce
State 77 conflicts: 15 shift/reduce
State 84 conflicts: 1 shift/reduce
State 85 conflicts: 1 shift/reduce
State 86 conflicts: 15 shift/reduce
State 88 conflicts: 30 reduce/reduce
State 89 conflicts: 30 reduce/reduce
State 90 conflicts: 14 shift/reduce, 50 reduce/reduce
State 91 conflicts: 14 shift/reduce, 50 reduce/reduce
State 95 conflicts: 1 shift/reduce
State 116 conflicts: 1 shift/reduce
State 118 conflicts: 30 reduce/reduce
State 119 conflicts: 14 shift/reduce, 50 reduce/reduce
State 122 conflicts: 10 shift/reduce
State 125 conflicts: 15 shift/reduce
State 126 conflicts: 15 shift/reduce
State 129 conflicts: 30 reduce/reduce
State 130 conflicts: 5 shift/reduce
State 134 conflicts: 29 reduce/reduce
State 135 conflicts: 20 shift/reduce, 29 reduce/reduce
State 139 conflicts: 15 shift/reduce
State 140 conflicts: 15 shift/reduce
State 141 conflicts: 15 shift/reduce
State 143 conflicts: 15 shift/reduce
State 148 conflicts: 14 shift/reduce, 50 reduce/reduce
State 149 conflicts: 14 shift/reduce, 50 reduce/reduce
State 150 conflicts: 14 shift/reduce, 50 reduce/reduce
State 151 conflicts: 14 shift/reduce, 50 reduce/reduce
State 152 conflicts: 14 shift/reduce, 50 reduce/reduce
State 153 conflicts: 14 shift/reduce, 50 reduce/reduce
State 154 conflicts: 15 shift/reduce, 46 reduce/reduce
State 155 conflicts: 14 shift/reduce, 50 reduce/reduce
State 156 conflicts: 14 shift/reduce, 50 reduce/reduce
State 157 conflicts: 14 shift/reduce, 50 reduce/reduce
State 158 conflicts: 14 shift/reduce, 50 reduce/reduce
State 159 conflicts: 14 shift/reduce, 50 reduce/reduce
State 160 conflicts: 15 shift/reduce, 30 reduce/reduce
State 161 conflicts: 15 shift/reduce
State 162 conflicts: 15 shift/reduce
State 163 conflicts: 15 shift/reduce
State 164 conflicts: 15 shift/reduce
State 165 conflicts: 15 shift/reduce
State 166 conflicts: 14 shift/reduce, 50 reduce/reduce
State 173 conflicts: 1 shift/reduce
State 174 conflicts: 14 reduce/reduce
State 175 conflicts: 14 shift/reduce, 50 reduce/reduce
State 176 conflicts: 14 shift/reduce, 22 reduce/reduce
State 180 conflicts: 30 reduce/reduce
State 181 conflicts: 1 shift/reduce
State 182 conflicts: 30 reduce/reduce
State 184 conflicts: 29 reduce/reduce
State 185 conflicts: 20 shift/reduce, 29 reduce/reduce
State 186 conflicts: 29 reduce/reduce
State 194 conflicts: 30 reduce/reduce
State 200 conflicts: 15 shift/reduce
State 201 conflicts: 14 shift/reduce, 30 reduce/reduce
State 202 conflicts: 1 shift/reduce
State 205 conflicts: 1 shift/reduce
State 215 conflicts: 30 reduce/reduce
State 217 conflicts: 1 shift/reduce
State 218 conflicts: 1 shift/reduce
State 219 conflicts: 1 shift/reduce
State 227 conflicts: 1 shift/reduce


Grammar

    0 $accept: ROOT $end

    1 ROOT: PROGRAM

    2 PROGRAM: EXTERNAL_OBJECT
    3        | PROGRAM EXTERNAL_OBJECT

    4 EXTERNAL_OBJECT: STATEMENT
    5                | FUNCTION

    6 FUNCTION: TYPE FUNCTION_CALL T_L_BRACE STATEMENT T_R_BRACE

    7 STATEMENT: STATEMENT
    8          | RETURN_STATEMENT
    9          | DECLARATION_STATEMENT
   10          | ASSIGNMENT_STATEMENT
   11          | FOR_STATEMENT
   12          | COMPARE_STATEMENT
   13          | IF_ELSE_STATEMENT
   14          | WHILE_STATEMENT
   15          | T_L_BRACE STATEMENT T_R_BRACE
   16          | ENUM_STATEMENT
   17          | SWITCH_STATEMENT
   18          | CASE_STATEMENT
   19          | BREAK_STATEMENT
   20          | TYPEDEF_STATEMENT
   21          | TWO_OP_STATEMENT
   22          | INCREASE_STATEMENT
   23          | STRUCT_STATEMENT
   24          | SIZEOF_STATEMENT

   25 RETURN_STATEMENT: T_RETURN EXPR ';'

   26 DECLARATION_STATEMENT: ARRAY_DECLARATION
   27                      | FUNCTION_DECLARATION
   28                      | REGULAR_DECLARATION
   29                      | STRUCT_DECLARATION

   30 ARRAY_DECLARATION: TYPE T_IDENTIFIER T_L_SQUARE EXPR T_R_SQUARE ';'

   31 FUNCTION_DECLARATION: TYPE FUNCTION_CALL ';'

   32 REGULAR_DECLARATION: TYPE T_IDENTIFIER ';'
   33                    | TYPE T_IDENTIFIER ','
   34                    | TYPE T_IDENTIFIER

   35 STRUCT_DECLARATION: T_STRUCT EXPR EXPR ';'

   36 ASSIGNMENT_STATEMENT: EXPR T_ASSIGN EXPR ';'
   37                     | EXPR T_ASSIGN EXPR ','
   38                     | EXPR T_ASSIGN EXPR
   39                     | ASSIGNMENT_STATEMENT ASSIGNMENT_DEFINITION
   40                     | ASSIGNMENT_DEFINITION

   41 ASSIGNMENT_DEFINITION: TYPE T_IDENTIFIER T_ASSIGN EXPR

   42 COMPARE_STATEMENT: EXPR T_OP_LT EXPR ';'

   43 IF_ELSE_STATEMENT: T_IF T_L_BRACKET EXPR T_R_BRACKET T_L_BRACE STATEMENT T_R_BRACE T_ELSE T_L_BRACE STATEMENT T_R_BRACE
   44                  | T_IF T_L_BRACKET EXPR T_R_BRACKET T_L_BRACE STATEMENT T_R_BRACE

   45 WHILE_STATEMENT: T_WHILE T_L_BRACKET EXPR T_R_BRACKET T_L_BRACE STATEMENT T_R_BRACE

   46 FOR_STATEMENT: T_FOR T_L_BRACE LIST T_R_BRACE T_L_BRACKET STATEMENT T_R_BRACKET

   47 ENUM_STATEMENT: T_ENUM T_IDENTIFIER T_L_BRACE STATEMENT T_R_BRACE ';'

   48 SWITCH_STATEMENT: T_SWITCH T_L_BRACKET EXPR T_R_BRACKET T_L_BRACE CASE_STATEMENT T_R_BRACE

   49 CASE_STATEMENT: T_CASE EXPR ':' T_L_BRACE STATEMENT T_R_BRACE
   50               | T_CASE EXPR ':' STATEMENT

   51 BREAK_STATEMENT: T_BREAK ";"

   52 TYPEDEF_STATEMENT: T_TYPEDEF TYPE TYPE
   53                  | T_TYPEDEF TYPE POINTER TYPE

   54 TWO_OP_STATEMENT: EXPR T_ADD_ASSIGN EXPR ';'
   55                 | EXPR T_MOD_ASSIGN EXPR ';'
   56                 | EXPR T_MUL_ASSIGN EXPR ';'
   57                 | EXPR T_SUB_ASSIGN EXPR ';'
   58                 | EXPR T_DIV_ASSIGN EXPR ';'

   59 INCREASE_STATEMENT: T_OP_INC STATEMENT
   60                   | T_OP_DEC STATEMENT

   61 STRUCT_STATEMENT: T_STRUCT T_IDENTIFIER T_L_BRACE STATEMENT T_R_BRACE ';'

   62 SIZEOF_STATEMENT: T_SIZEOF T_L_BRACKET EXPR T_R_BRACKET ';'

   63 EXPR: SINGLE_EXPR
   64     | LOGIC_EXPR
   65     | OP_EXPR
   66     | T_L_BRACKET EXPR T_R_BRACKET
   67     | EXPR
   68     | EXPR ','

   69 OP_EXPR: EXPR T_OP_EQ EXPR
   70        | EXPR T_OP_PLUS EXPR
   71        | EXPR T_OP_MINUS EXPR
   72        | EXPR T_OP_MUL EXPR
   73        | OP_EXPR
   74        | EXPR T_OP_BAND EXPR
   75        | EXPR T_OP_BOR EXPR
   76        | EXPR T_OP_BXOR EXPR
   77        | EXPR T_OP_NE EXPR
   78        | EXPR T_OP_LE EXPR
   79        | EXPR T_OP_LT EXPR
   80        | EXPR T_OP_LAND EXPR
   81        | EXPR T_OP_LOR EXPR

   82 SINGLE_EXPR: NUMBER
   83            | FUNCTION_CALL
   84            | T_IDENTIFIER T_L_SQUARE EXPR T_R_SQUARE
   85            | T_IDENTIFIER
   86            | POINTER EXPR
   87            | T_OP_BAND EXPR
   88            | CHARACTOR
   89            | DOT

   90 LOGIC_EXPR: T_OP_LNOT EXPR

   91 NUMBER: INTEGER
   92       | T_OP_MINUS INTEGER
   93       | FLOAT

   94 CHARACTOR: T_CHARACTER_CONSTANT
   95          | T_STRING_LITERAL

   96 INTEGER: T_INT_CONSTANT

   97 FLOAT: T_FLOAT_CONSTANT

   98 DOT: EXPR '.' EXPR

   99 FUNCTION_CALL: T_IDENTIFIER T_L_BRACKET LIST T_R_BRACKET

  100 TYPE: T_INT
  101     | T_DOUBLE
  102     | T_FLOAT
  103     | T_IDENTIFIER
  104     | POINTER
  105     | TYPE

  106 POINTER: POINTER T_OP_MUL
  107        | T_OP_MUL

  108 LIST: ARG_LIST
  109     | FOR_LIST

  110 ARG_LIST: ARG_LIST STATEMENT
  111         | STATEMENT
  112         | ARG_LIST EXPR
  113         | EXPR

  114 FOR_LIST: FOR_LIST STATEMENT
  115         | STATEMENT
  116         | T_ENDLESS_LOOP


Terminals, with rules where they appear

$end (0) 0
',' (44) 33 37 68
'.' (46) 98
':' (58) 49 50
';' (59) 25 30 31 32 35 36 42 47 54 55 56 57 58 61 62
error (256)
T_AUTO (258)
T_DOUBLE (259) 101
T_INT (260) 100
T_STRUCT (261) 35 61
T_BREAK (262) 51
T_ELSE (263) 43
T_LONG (264)
T_SWITCH (265) 48
T_CASE (266) 49 50
T_ENUM (267) 47
T_ELIPSIS (268)
T_REGISTER (269)
T_TYPEDEF (270) 52 53
T_CHAR (271)
T_EXTERN (272)
T_RETURN (273) 25
T_UNION (274)
T_CONST (275)
T_FLOAT (276) 102
T_SHORT (277)
T_UNSIGNED (278)
T_CONTINUE (279)
T_FOR (280) 46
T_SIGNED (281)
T_VOID (282)
T_DEFAULT (283)
T_GOTO (284)
T_SIZEOF (285) 62
T_VOLATILE (286)
T_DO (287)
T_IF (288) 43 44
T_STATIC (289)
T_WHILE (290) 45
T_IDENTIFIER (291) 30 32 33 34 41 47 61 84 85 99 103
T_STRING_LITERAL (292) 95
T_UNSIGNED_LONG_CONSTANT (293)
T_LONG_CONSTANT (294)
T_UNSIGNED_CONSTANT (295)
T_INT_CONSTANT (296) 96
T_FLOAT_CONSTANT (297) 97
T_CHARACTER_CONSTANT (298) 94
T_L_BRACE (299) 6 15 43 44 45 46 47 48 49 61
T_R_BRACE (300) 6 15 43 44 45 46 47 48 49 61
T_L_BRACKET (301) 43 44 45 46 48 62 66 99
T_R_BRACKET (302) 43 44 45 46 48 62 66 99
T_L_SQUARE (303) 30 84
T_R_SQUARE (304) 30 84
T_OP_PLUS (305) 70
T_OP_MINUS (306) 71 92
T_OP_MUL (307) 72 106 107
T_OP_DIV (308)
T_OP_MOD (309)
T_OP_INC (310) 59
T_OP_DEC (311) 60
T_OP_LE (312) 78
T_OP_GE (313)
T_OP_EQ (314) 69
T_OP_NE (315) 77
T_OP_LT (316) 42 79
T_OP_GT (317)
T_OP_LAND (318) 80
T_OP_LOR (319) 81
T_OP_LNOT (320) 90
T_OP_BAND (321) 74 87
T_OP_BOR (322) 75
T_OP_BXOR (323) 76
T_OP_B_ONESC (324)
T_OP_BRIGHT (325)
T_OP_BLEFT (326)
T_OP_PTR (327)
T_ASSIGN (328) 36 37 38 41
T_RIGHT_ASSIGN (329)
T_LEFT_ASSIGN (330)
T_ADD_ASSIGN (331) 54
T_SUB_ASSIGN (332) 57
T_MUL_ASSIGN (333) 56
T_DIV_ASSIGN (334) 58
T_MOD_ASSIGN (335) 55
T_AND_ASSIGN (336)
T_OR_ASSIGN (337)
T_XOR_ASSIGN (338)
T_ENDLESS_LOOP (339) 116
";" (340) 51


Nonterminals, with rules where they appear

$accept (90)
    on left: 0
ROOT (91)
    on left: 1, on right: 0
PROGRAM (92)
    on left: 2 3, on right: 1 3
EXTERNAL_OBJECT (93)
    on left: 4 5, on right: 2 3
FUNCTION (94)
    on left: 6, on right: 5
STATEMENT (95)
    on left: 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24, on right:
    4 6 7 15 43 44 45 46 47 49 50 59 60 61 110 111 114 115
RETURN_STATEMENT (96)
    on left: 25, on right: 8
DECLARATION_STATEMENT (97)
    on left: 26 27 28 29, on right: 9
ARRAY_DECLARATION (98)
    on left: 30, on right: 26
FUNCTION_DECLARATION (99)
    on left: 31, on right: 27
REGULAR_DECLARATION (100)
    on left: 32 33 34, on right: 28
STRUCT_DECLARATION (101)
    on left: 35, on right: 29
ASSIGNMENT_STATEMENT (102)
    on left: 36 37 38 39 40, on right: 10 39
ASSIGNMENT_DEFINITION (103)
    on left: 41, on right: 39 40
COMPARE_STATEMENT (104)
    on left: 42, on right: 12
IF_ELSE_STATEMENT (105)
    on left: 43 44, on right: 13
WHILE_STATEMENT (106)
    on left: 45, on right: 14
FOR_STATEMENT (107)
    on left: 46, on right: 11
ENUM_STATEMENT (108)
    on left: 47, on right: 16
SWITCH_STATEMENT (109)
    on left: 48, on right: 17
CASE_STATEMENT (110)
    on left: 49 50, on right: 18 48
BREAK_STATEMENT (111)
    on left: 51, on right: 19
TYPEDEF_STATEMENT (112)
    on left: 52 53, on right: 20
TWO_OP_STATEMENT (113)
    on left: 54 55 56 57 58, on right: 21
INCREASE_STATEMENT (114)
    on left: 59 60, on right: 22
STRUCT_STATEMENT (115)
    on left: 61, on right: 23
SIZEOF_STATEMENT (116)
    on left: 62, on right: 24
EXPR (117)
    on left: 63 64 65 66 67 68, on right: 25 30 35 36 37 38 41 42 43
    44 45 48 49 50 54 55 56 57 58 62 66 67 68 69 70 71 72 74 75 76
    77 78 79 80 81 84 86 87 90 98 112 113
OP_EXPR (118)
    on left: 69 70 71 72 73 74 75 76 77 78 79 80 81, on right: 65 73
SINGLE_EXPR (119)
    on left: 82 83 84 85 86 87 88 89, on right: 63
LOGIC_EXPR (120)
    on left: 90, on right: 64
NUMBER (121)
    on left: 91 92 93, on right: 82
CHARACTOR (122)
    on left: 94 95, on right: 88
INTEGER (123)
    on left: 96, on right: 91 92
FLOAT (124)
    on left: 97, on right: 93
DOT (125)
    on left: 98, on right: 89
FUNCTION_CALL (126)
    on left: 99, on right: 6 31 83
TYPE (127)
    on left: 100 101 102 103 104 105, on right: 6 30 31 32 33 34 41
    52 53 105
POINTER (128)
    on left: 106 107, on right: 53 86 104 106
LIST (129)
    on left: 108 109, on right: 46 99
ARG_LIST (130)
    on left: 110 111 112 113, on right: 108 110 112
FOR_LIST (131)
    on left: 114 115 116, on right: 109 114


State 0

    0 $accept: . ROOT $end

    T_DOUBLE              shift, and go to state 1
    T_INT                 shift, and go to state 2
    T_STRUCT              shift, and go to state 3
    T_BREAK               shift, and go to state 4
    T_SWITCH              shift, and go to state 5
    T_CASE                shift, and go to state 6
    T_ENUM                shift, and go to state 7
    T_TYPEDEF             shift, and go to state 8
    T_RETURN              shift, and go to state 9
    T_FLOAT               shift, and go to state 10
    T_FOR                 shift, and go to state 11
    T_SIZEOF              shift, and go to state 12
    T_IF                  shift, and go to state 13
    T_WHILE               shift, and go to state 14
    T_IDENTIFIER          shift, and go to state 15
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACE             shift, and go to state 20
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_INC              shift, and go to state 24
    T_OP_DEC              shift, and go to state 25
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    ROOT                   go to state 28
    PROGRAM                go to state 29
    EXTERNAL_OBJECT        go to state 30
    FUNCTION               go to state 31
    STATEMENT              go to state 32
    RETURN_STATEMENT       go to state 33
    DECLARATION_STATEMENT  go to state 34
    ARRAY_DECLARATION      go to state 35
    FUNCTION_DECLARATION   go to state 36
    REGULAR_DECLARATION    go to state 37
    STRUCT_DECLARATION     go to state 38
    ASSIGNMENT_STATEMENT   go to state 39
    ASSIGNMENT_DEFINITION  go to state 40
    COMPARE_STATEMENT      go to state 41
    IF_ELSE_STATEMENT      go to state 42
    WHILE_STATEMENT        go to state 43
    FOR_STATEMENT          go to state 44
    ENUM_STATEMENT         go to state 45
    SWITCH_STATEMENT       go to state 46
    CASE_STATEMENT         go to state 47
    BREAK_STATEMENT        go to state 48
    TYPEDEF_STATEMENT      go to state 49
    TWO_OP_STATEMENT       go to state 50
    INCREASE_STATEMENT     go to state 51
    STRUCT_STATEMENT       go to state 52
    SIZEOF_STATEMENT       go to state 53
    EXPR                   go to state 54
    OP_EXPR                go to state 55
    SINGLE_EXPR            go to state 56
    LOGIC_EXPR             go to state 57
    NUMBER                 go to state 58
    CHARACTOR              go to state 59
    INTEGER                go to state 60
    FLOAT                  go to state 61
    DOT                    go to state 62
    FUNCTION_CALL          go to state 63
    TYPE                   go to state 64
    POINTER                go to state 65


State 1

  101 TYPE: T_DOUBLE .

    $default  reduce using rule 101 (TYPE)


State 2

  100 TYPE: T_INT .

    $default  reduce using rule 100 (TYPE)


State 3

   35 STRUCT_DECLARATION: T_STRUCT . EXPR EXPR ';'
   61 STRUCT_STATEMENT: T_STRUCT . T_IDENTIFIER T_L_BRACE STATEMENT T_R_BRACE ';'

    T_IDENTIFIER          shift, and go to state 66
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    EXPR           go to state 67
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 60
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 4

   51 BREAK_STATEMENT: T_BREAK . ";"

    ";"  shift, and go to state 69


State 5

   48 SWITCH_STATEMENT: T_SWITCH . T_L_BRACKET EXPR T_R_BRACKET T_L_BRACE CASE_STATEMENT T_R_BRACE

    T_L_BRACKET  shift, and go to state 70


State 6

   49 CASE_STATEMENT: T_CASE . EXPR ':' T_L_BRACE STATEMENT T_R_BRACE
   50               | T_CASE . EXPR ':' STATEMENT

    T_IDENTIFIER          shift, and go to state 71
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    EXPR           go to state 72
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 60
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 7

   47 ENUM_STATEMENT: T_ENUM . T_IDENTIFIER T_L_BRACE STATEMENT T_R_BRACE ';'

    T_IDENTIFIER  shift, and go to state 73


State 8

   52 TYPEDEF_STATEMENT: T_TYPEDEF . TYPE TYPE
   53                  | T_TYPEDEF . TYPE POINTER TYPE

    T_DOUBLE      shift, and go to state 1
    T_INT         shift, and go to state 2
    T_FLOAT       shift, and go to state 10
    T_IDENTIFIER  shift, and go to state 74
    T_OP_MUL      shift, and go to state 23

    TYPE     go to state 75
    POINTER  go to state 76


State 9

   25 RETURN_STATEMENT: T_RETURN . EXPR ';'

    T_IDENTIFIER          shift, and go to state 71
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    EXPR           go to state 77
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 60
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 10

  102 TYPE: T_FLOAT .

    $default  reduce using rule 102 (TYPE)


State 11

   46 FOR_STATEMENT: T_FOR . T_L_BRACE LIST T_R_BRACE T_L_BRACKET STATEMENT T_R_BRACKET

    T_L_BRACE  shift, and go to state 78


State 12

   62 SIZEOF_STATEMENT: T_SIZEOF . T_L_BRACKET EXPR T_R_BRACKET ';'

    T_L_BRACKET  shift, and go to state 79


State 13

   43 IF_ELSE_STATEMENT: T_IF . T_L_BRACKET EXPR T_R_BRACKET T_L_BRACE STATEMENT T_R_BRACE T_ELSE T_L_BRACE STATEMENT T_R_BRACE
   44                  | T_IF . T_L_BRACKET EXPR T_R_BRACKET T_L_BRACE STATEMENT T_R_BRACE

    T_L_BRACKET  shift, and go to state 80


State 14

   45 WHILE_STATEMENT: T_WHILE . T_L_BRACKET EXPR T_R_BRACKET T_L_BRACE STATEMENT T_R_BRACE

    T_L_BRACKET  shift, and go to state 81


State 15

   84 SINGLE_EXPR: T_IDENTIFIER . T_L_SQUARE EXPR T_R_SQUARE
   85            | T_IDENTIFIER .
   99 FUNCTION_CALL: T_IDENTIFIER . T_L_BRACKET LIST T_R_BRACKET
  103 TYPE: T_IDENTIFIER .

    T_L_BRACKET  shift, and go to state 82
    T_L_SQUARE   shift, and go to state 83

    T_IDENTIFIER  reduce using rule 85 (SINGLE_EXPR)
    T_IDENTIFIER  [reduce using rule 103 (TYPE)]
    T_L_BRACKET   [reduce using rule 85 (SINGLE_EXPR)]
    $default      reduce using rule 85 (SINGLE_EXPR)


State 16

   95 CHARACTOR: T_STRING_LITERAL .

    $default  reduce using rule 95 (CHARACTOR)


State 17

   96 INTEGER: T_INT_CONSTANT .

    $default  reduce using rule 96 (INTEGER)


State 18

   97 FLOAT: T_FLOAT_CONSTANT .

    $default  reduce using rule 97 (FLOAT)


State 19

   94 CHARACTOR: T_CHARACTER_CONSTANT .

    $default  reduce using rule 94 (CHARACTOR)


State 20

   15 STATEMENT: T_L_BRACE . STATEMENT T_R_BRACE

    T_DOUBLE              shift, and go to state 1
    T_INT                 shift, and go to state 2
    T_STRUCT              shift, and go to state 3
    T_BREAK               shift, and go to state 4
    T_SWITCH              shift, and go to state 5
    T_CASE                shift, and go to state 6
    T_ENUM                shift, and go to state 7
    T_TYPEDEF             shift, and go to state 8
    T_RETURN              shift, and go to state 9
    T_FLOAT               shift, and go to state 10
    T_FOR                 shift, and go to state 11
    T_SIZEOF              shift, and go to state 12
    T_IF                  shift, and go to state 13
    T_WHILE               shift, and go to state 14
    T_IDENTIFIER          shift, and go to state 15
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACE             shift, and go to state 20
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_INC              shift, and go to state 24
    T_OP_DEC              shift, and go to state 25
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    STATEMENT              go to state 84
    RETURN_STATEMENT       go to state 33
    DECLARATION_STATEMENT  go to state 34
    ARRAY_DECLARATION      go to state 35
    FUNCTION_DECLARATION   go to state 36
    REGULAR_DECLARATION    go to state 37
    STRUCT_DECLARATION     go to state 38
    ASSIGNMENT_STATEMENT   go to state 39
    ASSIGNMENT_DEFINITION  go to state 40
    COMPARE_STATEMENT      go to state 41
    IF_ELSE_STATEMENT      go to state 42
    WHILE_STATEMENT        go to state 43
    FOR_STATEMENT          go to state 44
    ENUM_STATEMENT         go to state 45
    SWITCH_STATEMENT       go to state 46
    CASE_STATEMENT         go to state 47
    BREAK_STATEMENT        go to state 48
    TYPEDEF_STATEMENT      go to state 49
    TWO_OP_STATEMENT       go to state 50
    INCREASE_STATEMENT     go to state 51
    STRUCT_STATEMENT       go to state 52
    SIZEOF_STATEMENT       go to state 53
    EXPR                   go to state 54
    OP_EXPR                go to state 55
    SINGLE_EXPR            go to state 56
    LOGIC_EXPR             go to state 57
    NUMBER                 go to state 58
    CHARACTOR              go to state 59
    INTEGER                go to state 60
    FLOAT                  go to state 61
    DOT                    go to state 62
    FUNCTION_CALL          go to state 63
    TYPE                   go to state 85
    POINTER                go to state 65


State 21

   66 EXPR: T_L_BRACKET . EXPR T_R_BRACKET

    T_IDENTIFIER          shift, and go to state 71
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    EXPR           go to state 86
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 60
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 22

   92 NUMBER: T_OP_MINUS . INTEGER

    T_INT_CONSTANT  shift, and go to state 17

    INTEGER  go to state 87


State 23

  107 POINTER: T_OP_MUL .

    $default  reduce using rule 107 (POINTER)


State 24

   59 INCREASE_STATEMENT: T_OP_INC . STATEMENT

    T_DOUBLE              shift, and go to state 1
    T_INT                 shift, and go to state 2
    T_STRUCT              shift, and go to state 3
    T_BREAK               shift, and go to state 4
    T_SWITCH              shift, and go to state 5
    T_CASE                shift, and go to state 6
    T_ENUM                shift, and go to state 7
    T_TYPEDEF             shift, and go to state 8
    T_RETURN              shift, and go to state 9
    T_FLOAT               shift, and go to state 10
    T_FOR                 shift, and go to state 11
    T_SIZEOF              shift, and go to state 12
    T_IF                  shift, and go to state 13
    T_WHILE               shift, and go to state 14
    T_IDENTIFIER          shift, and go to state 15
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACE             shift, and go to state 20
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_INC              shift, and go to state 24
    T_OP_DEC              shift, and go to state 25
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    STATEMENT              go to state 88
    RETURN_STATEMENT       go to state 33
    DECLARATION_STATEMENT  go to state 34
    ARRAY_DECLARATION      go to state 35
    FUNCTION_DECLARATION   go to state 36
    REGULAR_DECLARATION    go to state 37
    STRUCT_DECLARATION     go to state 38
    ASSIGNMENT_STATEMENT   go to state 39
    ASSIGNMENT_DEFINITION  go to state 40
    COMPARE_STATEMENT      go to state 41
    IF_ELSE_STATEMENT      go to state 42
    WHILE_STATEMENT        go to state 43
    FOR_STATEMENT          go to state 44
    ENUM_STATEMENT         go to state 45
    SWITCH_STATEMENT       go to state 46
    CASE_STATEMENT         go to state 47
    BREAK_STATEMENT        go to state 48
    TYPEDEF_STATEMENT      go to state 49
    TWO_OP_STATEMENT       go to state 50
    INCREASE_STATEMENT     go to state 51
    STRUCT_STATEMENT       go to state 52
    SIZEOF_STATEMENT       go to state 53
    EXPR                   go to state 54
    OP_EXPR                go to state 55
    SINGLE_EXPR            go to state 56
    LOGIC_EXPR             go to state 57
    NUMBER                 go to state 58
    CHARACTOR              go to state 59
    INTEGER                go to state 60
    FLOAT                  go to state 61
    DOT                    go to state 62
    FUNCTION_CALL          go to state 63
    TYPE                   go to state 85
    POINTER                go to state 65


State 25

   60 INCREASE_STATEMENT: T_OP_DEC . STATEMENT

    T_DOUBLE              shift, and go to state 1
    T_INT                 shift, and go to state 2
    T_STRUCT              shift, and go to state 3
    T_BREAK               shift, and go to state 4
    T_SWITCH              shift, and go to state 5
    T_CASE                shift, and go to state 6
    T_ENUM                shift, and go to state 7
    T_TYPEDEF             shift, and go to state 8
    T_RETURN              shift, and go to state 9
    T_FLOAT               shift, and go to state 10
    T_FOR                 shift, and go to state 11
    T_SIZEOF              shift, and go to state 12
    T_IF                  shift, and go to state 13
    T_WHILE               shift, and go to state 14
    T_IDENTIFIER          shift, and go to state 15
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACE             shift, and go to state 20
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_INC              shift, and go to state 24
    T_OP_DEC              shift, and go to state 25
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    STATEMENT              go to state 89
    RETURN_STATEMENT       go to state 33
    DECLARATION_STATEMENT  go to state 34
    ARRAY_DECLARATION      go to state 35
    FUNCTION_DECLARATION   go to state 36
    REGULAR_DECLARATION    go to state 37
    STRUCT_DECLARATION     go to state 38
    ASSIGNMENT_STATEMENT   go to state 39
    ASSIGNMENT_DEFINITION  go to state 40
    COMPARE_STATEMENT      go to state 41
    IF_ELSE_STATEMENT      go to state 42
    WHILE_STATEMENT        go to state 43
    FOR_STATEMENT          go to state 44
    ENUM_STATEMENT         go to state 45
    SWITCH_STATEMENT       go to state 46
    CASE_STATEMENT         go to state 47
    BREAK_STATEMENT        go to state 48
    TYPEDEF_STATEMENT      go to state 49
    TWO_OP_STATEMENT       go to state 50
    INCREASE_STATEMENT     go to state 51
    STRUCT_STATEMENT       go to state 52
    SIZEOF_STATEMENT       go to state 53
    EXPR                   go to state 54
    OP_EXPR                go to state 55
    SINGLE_EXPR            go to state 56
    LOGIC_EXPR             go to state 57
    NUMBER                 go to state 58
    CHARACTOR              go to state 59
    INTEGER                go to state 60
    FLOAT                  go to state 61
    DOT                    go to state 62
    FUNCTION_CALL          go to state 63
    TYPE                   go to state 85
    POINTER                go to state 65


State 26

   90 LOGIC_EXPR: T_OP_LNOT . EXPR

    T_IDENTIFIER          shift, and go to state 71
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    EXPR           go to state 90
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 60
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 27

   87 SINGLE_EXPR: T_OP_BAND . EXPR

    T_IDENTIFIER          shift, and go to state 71
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    EXPR           go to state 91
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 60
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 28

    0 $accept: ROOT . $end

    $end  shift, and go to state 92


State 29

    1 ROOT: PROGRAM .
    3 PROGRAM: PROGRAM . EXTERNAL_OBJECT

    T_DOUBLE              shift, and go to state 1
    T_INT                 shift, and go to state 2
    T_STRUCT              shift, and go to state 3
    T_BREAK               shift, and go to state 4
    T_SWITCH              shift, and go to state 5
    T_CASE                shift, and go to state 6
    T_ENUM                shift, and go to state 7
    T_TYPEDEF             shift, and go to state 8
    T_RETURN              shift, and go to state 9
    T_FLOAT               shift, and go to state 10
    T_FOR                 shift, and go to state 11
    T_SIZEOF              shift, and go to state 12
    T_IF                  shift, and go to state 13
    T_WHILE               shift, and go to state 14
    T_IDENTIFIER          shift, and go to state 15
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACE             shift, and go to state 20
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_INC              shift, and go to state 24
    T_OP_DEC              shift, and go to state 25
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    $default  reduce using rule 1 (ROOT)

    EXTERNAL_OBJECT        go to state 93
    FUNCTION               go to state 31
    STATEMENT              go to state 32
    RETURN_STATEMENT       go to state 33
    DECLARATION_STATEMENT  go to state 34
    ARRAY_DECLARATION      go to state 35
    FUNCTION_DECLARATION   go to state 36
    REGULAR_DECLARATION    go to state 37
    STRUCT_DECLARATION     go to state 38
    ASSIGNMENT_STATEMENT   go to state 39
    ASSIGNMENT_DEFINITION  go to state 40
    COMPARE_STATEMENT      go to state 41
    IF_ELSE_STATEMENT      go to state 42
    WHILE_STATEMENT        go to state 43
    FOR_STATEMENT          go to state 44
    ENUM_STATEMENT         go to state 45
    SWITCH_STATEMENT       go to state 46
    CASE_STATEMENT         go to state 47
    BREAK_STATEMENT        go to state 48
    TYPEDEF_STATEMENT      go to state 49
    TWO_OP_STATEMENT       go to state 50
    INCREASE_STATEMENT     go to state 51
    STRUCT_STATEMENT       go to state 52
    SIZEOF_STATEMENT       go to state 53
    EXPR                   go to state 54
    OP_EXPR                go to state 55
    SINGLE_EXPR            go to state 56
    LOGIC_EXPR             go to state 57
    NUMBER                 go to state 58
    CHARACTOR              go to state 59
    INTEGER                go to state 60
    FLOAT                  go to state 61
    DOT                    go to state 62
    FUNCTION_CALL          go to state 63
    TYPE                   go to state 64
    POINTER                go to state 65


State 30

    2 PROGRAM: EXTERNAL_OBJECT .

    $default  reduce using rule 2 (PROGRAM)


State 31

    5 EXTERNAL_OBJECT: FUNCTION .

    $default  reduce using rule 5 (EXTERNAL_OBJECT)


State 32

    4 EXTERNAL_OBJECT: STATEMENT .
    7 STATEMENT: STATEMENT .

    $end                  reduce using rule 4 (EXTERNAL_OBJECT)
    $end                  [reduce using rule 7 (STATEMENT)]
    T_DOUBLE              reduce using rule 4 (EXTERNAL_OBJECT)
    T_DOUBLE              [reduce using rule 7 (STATEMENT)]
    T_INT                 reduce using rule 4 (EXTERNAL_OBJECT)
    T_INT                 [reduce using rule 7 (STATEMENT)]
    T_STRUCT              reduce using rule 4 (EXTERNAL_OBJECT)
    T_STRUCT              [reduce using rule 7 (STATEMENT)]
    T_BREAK               reduce using rule 4 (EXTERNAL_OBJECT)
    T_BREAK               [reduce using rule 7 (STATEMENT)]
    T_SWITCH              reduce using rule 4 (EXTERNAL_OBJECT)
    T_SWITCH              [reduce using rule 7 (STATEMENT)]
    T_CASE                reduce using rule 4 (EXTERNAL_OBJECT)
    T_CASE                [reduce using rule 7 (STATEMENT)]
    T_ENUM                reduce using rule 4 (EXTERNAL_OBJECT)
    T_ENUM                [reduce using rule 7 (STATEMENT)]
    T_TYPEDEF             reduce using rule 4 (EXTERNAL_OBJECT)
    T_TYPEDEF             [reduce using rule 7 (STATEMENT)]
    T_RETURN              reduce using rule 4 (EXTERNAL_OBJECT)
    T_RETURN              [reduce using rule 7 (STATEMENT)]
    T_FLOAT               reduce using rule 4 (EXTERNAL_OBJECT)
    T_FLOAT               [reduce using rule 7 (STATEMENT)]
    T_FOR                 reduce using rule 4 (EXTERNAL_OBJECT)
    T_FOR                 [reduce using rule 7 (STATEMENT)]
    T_SIZEOF              reduce using rule 4 (EXTERNAL_OBJECT)
    T_SIZEOF              [reduce using rule 7 (STATEMENT)]
    T_IF                  reduce using rule 4 (EXTERNAL_OBJECT)
    T_IF                  [reduce using rule 7 (STATEMENT)]
    T_WHILE               reduce using rule 4 (EXTERNAL_OBJECT)
    T_WHILE               [reduce using rule 7 (STATEMENT)]
    T_IDENTIFIER          reduce using rule 4 (EXTERNAL_OBJECT)
    T_IDENTIFIER          [reduce using rule 7 (STATEMENT)]
    T_STRING_LITERAL      reduce using rule 4 (EXTERNAL_OBJECT)
    T_STRING_LITERAL      [reduce using rule 7 (STATEMENT)]
    T_INT_CONSTANT        reduce using rule 4 (EXTERNAL_OBJECT)
    T_INT_CONSTANT        [reduce using rule 7 (STATEMENT)]
    T_FLOAT_CONSTANT      reduce using rule 4 (EXTERNAL_OBJECT)
    T_FLOAT_CONSTANT      [reduce using rule 7 (STATEMENT)]
    T_CHARACTER_CONSTANT  reduce using rule 4 (EXTERNAL_OBJECT)
    T_CHARACTER_CONSTANT  [reduce using rule 7 (STATEMENT)]
    T_L_BRACE             reduce using rule 4 (EXTERNAL_OBJECT)
    T_L_BRACE             [reduce using rule 7 (STATEMENT)]
    T_L_BRACKET           reduce using rule 4 (EXTERNAL_OBJECT)
    T_L_BRACKET           [reduce using rule 7 (STATEMENT)]
    T_OP_MINUS            reduce using rule 4 (EXTERNAL_OBJECT)
    T_OP_MINUS            [reduce using rule 7 (STATEMENT)]
    T_OP_MUL              reduce using rule 4 (EXTERNAL_OBJECT)
    T_OP_MUL              [reduce using rule 7 (STATEMENT)]
    T_OP_INC              reduce using rule 4 (EXTERNAL_OBJECT)
    T_OP_INC              [reduce using rule 7 (STATEMENT)]
    T_OP_DEC              reduce using rule 4 (EXTERNAL_OBJECT)
    T_OP_DEC              [reduce using rule 7 (STATEMENT)]
    T_OP_LNOT             reduce using rule 4 (EXTERNAL_OBJECT)
    T_OP_LNOT             [reduce using rule 7 (STATEMENT)]
    T_OP_BAND             reduce using rule 4 (EXTERNAL_OBJECT)
    T_OP_BAND             [reduce using rule 7 (STATEMENT)]
    $default              reduce using rule 4 (EXTERNAL_OBJECT)


State 33

    8 STATEMENT: RETURN_STATEMENT .

    $default  reduce using rule 8 (STATEMENT)


State 34

    9 STATEMENT: DECLARATION_STATEMENT .

    $default  reduce using rule 9 (STATEMENT)


State 35

   26 DECLARATION_STATEMENT: ARRAY_DECLARATION .

    $default  reduce using rule 26 (DECLARATION_STATEMENT)


State 36

   27 DECLARATION_STATEMENT: FUNCTION_DECLARATION .

    $default  reduce using rule 27 (DECLARATION_STATEMENT)


State 37

   28 DECLARATION_STATEMENT: REGULAR_DECLARATION .

    $default  reduce using rule 28 (DECLARATION_STATEMENT)


State 38

   29 DECLARATION_STATEMENT: STRUCT_DECLARATION .

    $default  reduce using rule 29 (DECLARATION_STATEMENT)


State 39

   10 STATEMENT: ASSIGNMENT_STATEMENT .
   39 ASSIGNMENT_STATEMENT: ASSIGNMENT_STATEMENT . ASSIGNMENT_DEFINITION

    T_DOUBLE      shift, and go to state 1
    T_INT         shift, and go to state 2
    T_FLOAT       shift, and go to state 10
    T_IDENTIFIER  shift, and go to state 74
    T_OP_MUL      shift, and go to state 23

    T_DOUBLE      [reduce using rule 10 (STATEMENT)]
    T_INT         [reduce using rule 10 (STATEMENT)]
    T_FLOAT       [reduce using rule 10 (STATEMENT)]
    T_IDENTIFIER  [reduce using rule 10 (STATEMENT)]
    T_OP_MUL      [reduce using rule 10 (STATEMENT)]
    $default      reduce using rule 10 (STATEMENT)

    ASSIGNMENT_DEFINITION  go to state 94
    TYPE                   go to state 95
    POINTER                go to state 76


State 40

   40 ASSIGNMENT_STATEMENT: ASSIGNMENT_DEFINITION .

    $default  reduce using rule 40 (ASSIGNMENT_STATEMENT)


State 41

   12 STATEMENT: COMPARE_STATEMENT .

    $default  reduce using rule 12 (STATEMENT)


State 42

   13 STATEMENT: IF_ELSE_STATEMENT .

    $default  reduce using rule 13 (STATEMENT)


State 43

   14 STATEMENT: WHILE_STATEMENT .

    $default  reduce using rule 14 (STATEMENT)


State 44

   11 STATEMENT: FOR_STATEMENT .

    $default  reduce using rule 11 (STATEMENT)


State 45

   16 STATEMENT: ENUM_STATEMENT .

    $default  reduce using rule 16 (STATEMENT)


State 46

   17 STATEMENT: SWITCH_STATEMENT .

    $default  reduce using rule 17 (STATEMENT)


State 47

   18 STATEMENT: CASE_STATEMENT .

    $default  reduce using rule 18 (STATEMENT)


State 48

   19 STATEMENT: BREAK_STATEMENT .

    $default  reduce using rule 19 (STATEMENT)


State 49

   20 STATEMENT: TYPEDEF_STATEMENT .

    $default  reduce using rule 20 (STATEMENT)


State 50

   21 STATEMENT: TWO_OP_STATEMENT .

    $default  reduce using rule 21 (STATEMENT)


State 51

   22 STATEMENT: INCREASE_STATEMENT .

    $default  reduce using rule 22 (STATEMENT)


State 52

   23 STATEMENT: STRUCT_STATEMENT .

    $default  reduce using rule 23 (STATEMENT)


State 53

   24 STATEMENT: SIZEOF_STATEMENT .

    $default  reduce using rule 24 (STATEMENT)


State 54

   36 ASSIGNMENT_STATEMENT: EXPR . T_ASSIGN EXPR ';'
   37                     | EXPR . T_ASSIGN EXPR ','
   38                     | EXPR . T_ASSIGN EXPR
   42 COMPARE_STATEMENT: EXPR . T_OP_LT EXPR ';'
   54 TWO_OP_STATEMENT: EXPR . T_ADD_ASSIGN EXPR ';'
   55                 | EXPR . T_MOD_ASSIGN EXPR ';'
   56                 | EXPR . T_MUL_ASSIGN EXPR ';'
   57                 | EXPR . T_SUB_ASSIGN EXPR ';'
   58                 | EXPR . T_DIV_ASSIGN EXPR ';'
   67 EXPR: EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   70        | EXPR . T_OP_PLUS EXPR
   71        | EXPR . T_OP_MINUS EXPR
   72        | EXPR . T_OP_MUL EXPR
   74        | EXPR . T_OP_BAND EXPR
   75        | EXPR . T_OP_BOR EXPR
   76        | EXPR . T_OP_BXOR EXPR
   77        | EXPR . T_OP_NE EXPR
   78        | EXPR . T_OP_LE EXPR
   79        | EXPR . T_OP_LT EXPR
   80        | EXPR . T_OP_LAND EXPR
   81        | EXPR . T_OP_LOR EXPR
   98 DOT: EXPR . '.' EXPR

    T_OP_PLUS     shift, and go to state 96
    T_OP_MINUS    shift, and go to state 97
    T_OP_MUL      shift, and go to state 98
    T_OP_LE       shift, and go to state 99
    T_OP_EQ       shift, and go to state 100
    T_OP_NE       shift, and go to state 101
    T_OP_LT       shift, and go to state 102
    T_OP_LAND     shift, and go to state 103
    T_OP_LOR      shift, and go to state 104
    T_OP_BAND     shift, and go to state 105
    T_OP_BOR      shift, and go to state 106
    T_OP_BXOR     shift, and go to state 107
    T_ASSIGN      shift, and go to state 108
    T_ADD_ASSIGN  shift, and go to state 109
    T_SUB_ASSIGN  shift, and go to state 110
    T_MUL_ASSIGN  shift, and go to state 111
    T_DIV_ASSIGN  shift, and go to state 112
    T_MOD_ASSIGN  shift, and go to state 113
    ','           shift, and go to state 114
    '.'           shift, and go to state 115

    T_OP_PLUS     [reduce using rule 67 (EXPR)]
    T_OP_MINUS    [reduce using rule 67 (EXPR)]
    T_OP_MUL      [reduce using rule 67 (EXPR)]
    T_OP_LE       [reduce using rule 67 (EXPR)]
    T_OP_EQ       [reduce using rule 67 (EXPR)]
    T_OP_NE       [reduce using rule 67 (EXPR)]
    T_OP_LT       [reduce using rule 67 (EXPR)]
    T_OP_LAND     [reduce using rule 67 (EXPR)]
    T_OP_LOR      [reduce using rule 67 (EXPR)]
    T_OP_BAND     [reduce using rule 67 (EXPR)]
    T_OP_BOR      [reduce using rule 67 (EXPR)]
    T_OP_BXOR     [reduce using rule 67 (EXPR)]
    T_ASSIGN      [reduce using rule 67 (EXPR)]
    T_ADD_ASSIGN  [reduce using rule 67 (EXPR)]
    T_SUB_ASSIGN  [reduce using rule 67 (EXPR)]
    T_MUL_ASSIGN  [reduce using rule 67 (EXPR)]
    T_DIV_ASSIGN  [reduce using rule 67 (EXPR)]
    T_MOD_ASSIGN  [reduce using rule 67 (EXPR)]
    ','           [reduce using rule 67 (EXPR)]
    '.'           [reduce using rule 67 (EXPR)]


State 55

   65 EXPR: OP_EXPR .
   73 OP_EXPR: OP_EXPR .

    $end                  reduce using rule 65 (EXPR)
    $end                  [reduce using rule 73 (OP_EXPR)]
    T_DOUBLE              reduce using rule 65 (EXPR)
    T_DOUBLE              [reduce using rule 73 (OP_EXPR)]
    T_INT                 reduce using rule 65 (EXPR)
    T_INT                 [reduce using rule 73 (OP_EXPR)]
    T_STRUCT              reduce using rule 65 (EXPR)
    T_STRUCT              [reduce using rule 73 (OP_EXPR)]
    T_BREAK               reduce using rule 65 (EXPR)
    T_BREAK               [reduce using rule 73 (OP_EXPR)]
    T_SWITCH              reduce using rule 65 (EXPR)
    T_SWITCH              [reduce using rule 73 (OP_EXPR)]
    T_CASE                reduce using rule 65 (EXPR)
    T_CASE                [reduce using rule 73 (OP_EXPR)]
    T_ENUM                reduce using rule 65 (EXPR)
    T_ENUM                [reduce using rule 73 (OP_EXPR)]
    T_TYPEDEF             reduce using rule 65 (EXPR)
    T_TYPEDEF             [reduce using rule 73 (OP_EXPR)]
    T_RETURN              reduce using rule 65 (EXPR)
    T_RETURN              [reduce using rule 73 (OP_EXPR)]
    T_FLOAT               reduce using rule 65 (EXPR)
    T_FLOAT               [reduce using rule 73 (OP_EXPR)]
    T_FOR                 reduce using rule 65 (EXPR)
    T_FOR                 [reduce using rule 73 (OP_EXPR)]
    T_SIZEOF              reduce using rule 65 (EXPR)
    T_SIZEOF              [reduce using rule 73 (OP_EXPR)]
    T_IF                  reduce using rule 65 (EXPR)
    T_IF                  [reduce using rule 73 (OP_EXPR)]
    T_WHILE               reduce using rule 65 (EXPR)
    T_WHILE               [reduce using rule 73 (OP_EXPR)]
    T_IDENTIFIER          reduce using rule 65 (EXPR)
    T_IDENTIFIER          [reduce using rule 73 (OP_EXPR)]
    T_STRING_LITERAL      reduce using rule 65 (EXPR)
    T_STRING_LITERAL      [reduce using rule 73 (OP_EXPR)]
    T_INT_CONSTANT        reduce using rule 65 (EXPR)
    T_INT_CONSTANT        [reduce using rule 73 (OP_EXPR)]
    T_FLOAT_CONSTANT      reduce using rule 65 (EXPR)
    T_FLOAT_CONSTANT      [reduce using rule 73 (OP_EXPR)]
    T_CHARACTER_CONSTANT  reduce using rule 65 (EXPR)
    T_CHARACTER_CONSTANT  [reduce using rule 73 (OP_EXPR)]
    T_L_BRACE             reduce using rule 65 (EXPR)
    T_L_BRACE             [reduce using rule 73 (OP_EXPR)]
    T_R_BRACE             reduce using rule 65 (EXPR)
    T_R_BRACE             [reduce using rule 73 (OP_EXPR)]
    T_L_BRACKET           reduce using rule 65 (EXPR)
    T_L_BRACKET           [reduce using rule 73 (OP_EXPR)]
    T_R_BRACKET           reduce using rule 65 (EXPR)
    T_R_BRACKET           [reduce using rule 73 (OP_EXPR)]
    T_R_SQUARE            reduce using rule 65 (EXPR)
    T_R_SQUARE            [reduce using rule 73 (OP_EXPR)]
    T_OP_PLUS             reduce using rule 65 (EXPR)
    T_OP_PLUS             [reduce using rule 73 (OP_EXPR)]
    T_OP_MINUS            reduce using rule 65 (EXPR)
    T_OP_MINUS            [reduce using rule 73 (OP_EXPR)]
    T_OP_MUL              reduce using rule 65 (EXPR)
    T_OP_MUL              [reduce using rule 73 (OP_EXPR)]
    T_OP_INC              reduce using rule 65 (EXPR)
    T_OP_INC              [reduce using rule 73 (OP_EXPR)]
    T_OP_DEC              reduce using rule 65 (EXPR)
    T_OP_DEC              [reduce using rule 73 (OP_EXPR)]
    T_OP_LE               reduce using rule 65 (EXPR)
    T_OP_LE               [reduce using rule 73 (OP_EXPR)]
    T_OP_EQ               reduce using rule 65 (EXPR)
    T_OP_EQ               [reduce using rule 73 (OP_EXPR)]
    T_OP_NE               reduce using rule 65 (EXPR)
    T_OP_NE               [reduce using rule 73 (OP_EXPR)]
    T_OP_LT               reduce using rule 65 (EXPR)
    T_OP_LT               [reduce using rule 73 (OP_EXPR)]
    T_OP_LAND             reduce using rule 65 (EXPR)
    T_OP_LAND             [reduce using rule 73 (OP_EXPR)]
    T_OP_LOR              reduce using rule 65 (EXPR)
    T_OP_LOR              [reduce using rule 73 (OP_EXPR)]
    T_OP_LNOT             reduce using rule 65 (EXPR)
    T_OP_LNOT             [reduce using rule 73 (OP_EXPR)]
    T_OP_BAND             reduce using rule 65 (EXPR)
    T_OP_BAND             [reduce using rule 73 (OP_EXPR)]
    T_OP_BOR              reduce using rule 65 (EXPR)
    T_OP_BOR              [reduce using rule 73 (OP_EXPR)]
    T_OP_BXOR             reduce using rule 65 (EXPR)
    T_OP_BXOR             [reduce using rule 73 (OP_EXPR)]
    T_ASSIGN              reduce using rule 65 (EXPR)
    T_ASSIGN              [reduce using rule 73 (OP_EXPR)]
    T_ADD_ASSIGN          reduce using rule 65 (EXPR)
    T_ADD_ASSIGN          [reduce using rule 73 (OP_EXPR)]
    T_SUB_ASSIGN          reduce using rule 65 (EXPR)
    T_SUB_ASSIGN          [reduce using rule 73 (OP_EXPR)]
    T_MUL_ASSIGN          reduce using rule 65 (EXPR)
    T_MUL_ASSIGN          [reduce using rule 73 (OP_EXPR)]
    T_DIV_ASSIGN          reduce using rule 65 (EXPR)
    T_DIV_ASSIGN          [reduce using rule 73 (OP_EXPR)]
    T_MOD_ASSIGN          reduce using rule 65 (EXPR)
    T_MOD_ASSIGN          [reduce using rule 73 (OP_EXPR)]
    ';'                   reduce using rule 65 (EXPR)
    ';'                   [reduce using rule 73 (OP_EXPR)]
    ','                   reduce using rule 65 (EXPR)
    ','                   [reduce using rule 73 (OP_EXPR)]
    ':'                   reduce using rule 65 (EXPR)
    ':'                   [reduce using rule 73 (OP_EXPR)]
    '.'                   reduce using rule 65 (EXPR)
    '.'                   [reduce using rule 73 (OP_EXPR)]
    $default              reduce using rule 65 (EXPR)


State 56

   63 EXPR: SINGLE_EXPR .

    $default  reduce using rule 63 (EXPR)


State 57

   64 EXPR: LOGIC_EXPR .

    $default  reduce using rule 64 (EXPR)


State 58

   82 SINGLE_EXPR: NUMBER .

    $default  reduce using rule 82 (SINGLE_EXPR)


State 59

   88 SINGLE_EXPR: CHARACTOR .

    $default  reduce using rule 88 (SINGLE_EXPR)


State 60

   91 NUMBER: INTEGER .

    $default  reduce using rule 91 (NUMBER)


State 61

   93 NUMBER: FLOAT .

    $default  reduce using rule 93 (NUMBER)


State 62

   89 SINGLE_EXPR: DOT .

    $default  reduce using rule 89 (SINGLE_EXPR)


State 63

   83 SINGLE_EXPR: FUNCTION_CALL .

    $default  reduce using rule 83 (SINGLE_EXPR)


State 64

    6 FUNCTION: TYPE . FUNCTION_CALL T_L_BRACE STATEMENT T_R_BRACE
   30 ARRAY_DECLARATION: TYPE . T_IDENTIFIER T_L_SQUARE EXPR T_R_SQUARE ';'
   31 FUNCTION_DECLARATION: TYPE . FUNCTION_CALL ';'
   32 REGULAR_DECLARATION: TYPE . T_IDENTIFIER ';'
   33                    | TYPE . T_IDENTIFIER ','
   34                    | TYPE . T_IDENTIFIER
   41 ASSIGNMENT_DEFINITION: TYPE . T_IDENTIFIER T_ASSIGN EXPR
  105 TYPE: TYPE .

    T_IDENTIFIER  shift, and go to state 116

    T_IDENTIFIER  [reduce using rule 105 (TYPE)]

    FUNCTION_CALL  go to state 117


State 65

   86 SINGLE_EXPR: POINTER . EXPR
  104 TYPE: POINTER .
  106 POINTER: POINTER . T_OP_MUL

    T_IDENTIFIER          shift, and go to state 71
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 118
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    T_IDENTIFIER  [reduce using rule 104 (TYPE)]

    EXPR           go to state 119
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 60
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 66

   61 STRUCT_STATEMENT: T_STRUCT T_IDENTIFIER . T_L_BRACE STATEMENT T_R_BRACE ';'
   84 SINGLE_EXPR: T_IDENTIFIER . T_L_SQUARE EXPR T_R_SQUARE
   85            | T_IDENTIFIER .
   99 FUNCTION_CALL: T_IDENTIFIER . T_L_BRACKET LIST T_R_BRACKET

    T_L_BRACE    shift, and go to state 120
    T_L_BRACKET  shift, and go to state 82
    T_L_SQUARE   shift, and go to state 83

    T_L_BRACKET  [reduce using rule 85 (SINGLE_EXPR)]
    $default     reduce using rule 85 (SINGLE_EXPR)


State 67

   35 STRUCT_DECLARATION: T_STRUCT EXPR . EXPR ';'
   67 EXPR: EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   70        | EXPR . T_OP_PLUS EXPR
   71        | EXPR . T_OP_MINUS EXPR
   72        | EXPR . T_OP_MUL EXPR
   74        | EXPR . T_OP_BAND EXPR
   75        | EXPR . T_OP_BOR EXPR
   76        | EXPR . T_OP_BXOR EXPR
   77        | EXPR . T_OP_NE EXPR
   78        | EXPR . T_OP_LE EXPR
   79        | EXPR . T_OP_LT EXPR
   80        | EXPR . T_OP_LAND EXPR
   81        | EXPR . T_OP_LOR EXPR
   98 DOT: EXPR . '.' EXPR

    T_IDENTIFIER          shift, and go to state 71
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_PLUS             shift, and go to state 96
    T_OP_MINUS            shift, and go to state 121
    T_OP_MUL              shift, and go to state 122
    T_OP_LE               shift, and go to state 99
    T_OP_EQ               shift, and go to state 100
    T_OP_NE               shift, and go to state 101
    T_OP_LT               shift, and go to state 123
    T_OP_LAND             shift, and go to state 103
    T_OP_LOR              shift, and go to state 104
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 124
    T_OP_BOR              shift, and go to state 106
    T_OP_BXOR             shift, and go to state 107
    ','                   shift, and go to state 114
    '.'                   shift, and go to state 115

    T_IDENTIFIER          [reduce using rule 67 (EXPR)]
    T_STRING_LITERAL      [reduce using rule 67 (EXPR)]
    T_INT_CONSTANT        [reduce using rule 67 (EXPR)]
    T_FLOAT_CONSTANT      [reduce using rule 67 (EXPR)]
    T_CHARACTER_CONSTANT  [reduce using rule 67 (EXPR)]
    T_L_BRACKET           [reduce using rule 67 (EXPR)]
    T_OP_PLUS             [reduce using rule 67 (EXPR)]
    T_OP_MINUS            [reduce using rule 67 (EXPR)]
    T_OP_MUL              [reduce using rule 67 (EXPR)]
    T_OP_LE               [reduce using rule 67 (EXPR)]
    T_OP_EQ               [reduce using rule 67 (EXPR)]
    T_OP_NE               [reduce using rule 67 (EXPR)]
    T_OP_LT               [reduce using rule 67 (EXPR)]
    T_OP_LAND             [reduce using rule 67 (EXPR)]
    T_OP_LOR              [reduce using rule 67 (EXPR)]
    T_OP_LNOT             [reduce using rule 67 (EXPR)]
    T_OP_BAND             [reduce using rule 67 (EXPR)]
    T_OP_BOR              [reduce using rule 67 (EXPR)]
    T_OP_BXOR             [reduce using rule 67 (EXPR)]
    ','                   [reduce using rule 67 (EXPR)]
    '.'                   [reduce using rule 67 (EXPR)]

    EXPR           go to state 125
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 60
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 68

   86 SINGLE_EXPR: POINTER . EXPR
  106 POINTER: POINTER . T_OP_MUL

    T_IDENTIFIER          shift, and go to state 71
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 118
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    EXPR           go to state 119
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 60
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 69

   51 BREAK_STATEMENT: T_BREAK ";" .

    $default  reduce using rule 51 (BREAK_STATEMENT)


State 70

   48 SWITCH_STATEMENT: T_SWITCH T_L_BRACKET . EXPR T_R_BRACKET T_L_BRACE CASE_STATEMENT T_R_BRACE

    T_IDENTIFIER          shift, and go to state 71
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    EXPR           go to state 126
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 60
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 71

   84 SINGLE_EXPR: T_IDENTIFIER . T_L_SQUARE EXPR T_R_SQUARE
   85            | T_IDENTIFIER .
   99 FUNCTION_CALL: T_IDENTIFIER . T_L_BRACKET LIST T_R_BRACKET

    T_L_BRACKET  shift, and go to state 82
    T_L_SQUARE   shift, and go to state 83

    T_L_BRACKET  [reduce using rule 85 (SINGLE_EXPR)]
    $default     reduce using rule 85 (SINGLE_EXPR)


State 72

   49 CASE_STATEMENT: T_CASE EXPR . ':' T_L_BRACE STATEMENT T_R_BRACE
   50               | T_CASE EXPR . ':' STATEMENT
   67 EXPR: EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   70        | EXPR . T_OP_PLUS EXPR
   71        | EXPR . T_OP_MINUS EXPR
   72        | EXPR . T_OP_MUL EXPR
   74        | EXPR . T_OP_BAND EXPR
   75        | EXPR . T_OP_BOR EXPR
   76        | EXPR . T_OP_BXOR EXPR
   77        | EXPR . T_OP_NE EXPR
   78        | EXPR . T_OP_LE EXPR
   79        | EXPR . T_OP_LT EXPR
   80        | EXPR . T_OP_LAND EXPR
   81        | EXPR . T_OP_LOR EXPR
   98 DOT: EXPR . '.' EXPR

    T_OP_PLUS   shift, and go to state 96
    T_OP_MINUS  shift, and go to state 97
    T_OP_MUL    shift, and go to state 98
    T_OP_LE     shift, and go to state 99
    T_OP_EQ     shift, and go to state 100
    T_OP_NE     shift, and go to state 101
    T_OP_LT     shift, and go to state 123
    T_OP_LAND   shift, and go to state 103
    T_OP_LOR    shift, and go to state 104
    T_OP_BAND   shift, and go to state 105
    T_OP_BOR    shift, and go to state 106
    T_OP_BXOR   shift, and go to state 107
    ','         shift, and go to state 114
    ':'         shift, and go to state 127
    '.'         shift, and go to state 115

    T_OP_PLUS   [reduce using rule 67 (EXPR)]
    T_OP_MINUS  [reduce using rule 67 (EXPR)]
    T_OP_MUL    [reduce using rule 67 (EXPR)]
    T_OP_LE     [reduce using rule 67 (EXPR)]
    T_OP_EQ     [reduce using rule 67 (EXPR)]
    T_OP_NE     [reduce using rule 67 (EXPR)]
    T_OP_LT     [reduce using rule 67 (EXPR)]
    T_OP_LAND   [reduce using rule 67 (EXPR)]
    T_OP_LOR    [reduce using rule 67 (EXPR)]
    T_OP_BAND   [reduce using rule 67 (EXPR)]
    T_OP_BOR    [reduce using rule 67 (EXPR)]
    T_OP_BXOR   [reduce using rule 67 (EXPR)]
    ','         [reduce using rule 67 (EXPR)]
    ':'         [reduce using rule 67 (EXPR)]
    '.'         [reduce using rule 67 (EXPR)]


State 73

   47 ENUM_STATEMENT: T_ENUM T_IDENTIFIER . T_L_BRACE STATEMENT T_R_BRACE ';'

    T_L_BRACE  shift, and go to state 128


State 74

  103 TYPE: T_IDENTIFIER .

    $default  reduce using rule 103 (TYPE)


State 75

   52 TYPEDEF_STATEMENT: T_TYPEDEF TYPE . TYPE
   53                  | T_TYPEDEF TYPE . POINTER TYPE
  105 TYPE: TYPE .

    T_DOUBLE      shift, and go to state 1
    T_INT         shift, and go to state 2
    T_FLOAT       shift, and go to state 10
    T_IDENTIFIER  shift, and go to state 74
    T_OP_MUL      shift, and go to state 23

    T_DOUBLE      [reduce using rule 105 (TYPE)]
    T_INT         [reduce using rule 105 (TYPE)]
    T_FLOAT       [reduce using rule 105 (TYPE)]
    T_IDENTIFIER  [reduce using rule 105 (TYPE)]
    T_OP_MUL      [reduce using rule 105 (TYPE)]

    TYPE     go to state 129
    POINTER  go to state 130


State 76

  104 TYPE: POINTER .
  106 POINTER: POINTER . T_OP_MUL

    T_OP_MUL  shift, and go to state 131

    T_OP_MUL  [reduce using rule 104 (TYPE)]
    $default  reduce using rule 104 (TYPE)


State 77

   25 RETURN_STATEMENT: T_RETURN EXPR . ';'
   67 EXPR: EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   70        | EXPR . T_OP_PLUS EXPR
   71        | EXPR . T_OP_MINUS EXPR
   72        | EXPR . T_OP_MUL EXPR
   74        | EXPR . T_OP_BAND EXPR
   75        | EXPR . T_OP_BOR EXPR
   76        | EXPR . T_OP_BXOR EXPR
   77        | EXPR . T_OP_NE EXPR
   78        | EXPR . T_OP_LE EXPR
   79        | EXPR . T_OP_LT EXPR
   80        | EXPR . T_OP_LAND EXPR
   81        | EXPR . T_OP_LOR EXPR
   98 DOT: EXPR . '.' EXPR

    T_OP_PLUS   shift, and go to state 96
    T_OP_MINUS  shift, and go to state 97
    T_OP_MUL    shift, and go to state 98
    T_OP_LE     shift, and go to state 99
    T_OP_EQ     shift, and go to state 100
    T_OP_NE     shift, and go to state 101
    T_OP_LT     shift, and go to state 123
    T_OP_LAND   shift, and go to state 103
    T_OP_LOR    shift, and go to state 104
    T_OP_BAND   shift, and go to state 105
    T_OP_BOR    shift, and go to state 106
    T_OP_BXOR   shift, and go to state 107
    ';'         shift, and go to state 132
    ','         shift, and go to state 114
    '.'         shift, and go to state 115

    T_OP_PLUS   [reduce using rule 67 (EXPR)]
    T_OP_MINUS  [reduce using rule 67 (EXPR)]
    T_OP_MUL    [reduce using rule 67 (EXPR)]
    T_OP_LE     [reduce using rule 67 (EXPR)]
    T_OP_EQ     [reduce using rule 67 (EXPR)]
    T_OP_NE     [reduce using rule 67 (EXPR)]
    T_OP_LT     [reduce using rule 67 (EXPR)]
    T_OP_LAND   [reduce using rule 67 (EXPR)]
    T_OP_LOR    [reduce using rule 67 (EXPR)]
    T_OP_BAND   [reduce using rule 67 (EXPR)]
    T_OP_BOR    [reduce using rule 67 (EXPR)]
    T_OP_BXOR   [reduce using rule 67 (EXPR)]
    ';'         [reduce using rule 67 (EXPR)]
    ','         [reduce using rule 67 (EXPR)]
    '.'         [reduce using rule 67 (EXPR)]


State 78

   46 FOR_STATEMENT: T_FOR T_L_BRACE . LIST T_R_BRACE T_L_BRACKET STATEMENT T_R_BRACKET

    T_DOUBLE              shift, and go to state 1
    T_INT                 shift, and go to state 2
    T_STRUCT              shift, and go to state 3
    T_BREAK               shift, and go to state 4
    T_SWITCH              shift, and go to state 5
    T_CASE                shift, and go to state 6
    T_ENUM                shift, and go to state 7
    T_TYPEDEF             shift, and go to state 8
    T_RETURN              shift, and go to state 9
    T_FLOAT               shift, and go to state 10
    T_FOR                 shift, and go to state 11
    T_SIZEOF              shift, and go to state 12
    T_IF                  shift, and go to state 13
    T_WHILE               shift, and go to state 14
    T_IDENTIFIER          shift, and go to state 15
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACE             shift, and go to state 20
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_INC              shift, and go to state 24
    T_OP_DEC              shift, and go to state 25
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27
    T_ENDLESS_LOOP        shift, and go to state 133

    STATEMENT              go to state 134
    RETURN_STATEMENT       go to state 33
    DECLARATION_STATEMENT  go to state 34
    ARRAY_DECLARATION      go to state 35
    FUNCTION_DECLARATION   go to state 36
    REGULAR_DECLARATION    go to state 37
    STRUCT_DECLARATION     go to state 38
    ASSIGNMENT_STATEMENT   go to state 39
    ASSIGNMENT_DEFINITION  go to state 40
    COMPARE_STATEMENT      go to state 41
    IF_ELSE_STATEMENT      go to state 42
    WHILE_STATEMENT        go to state 43
    FOR_STATEMENT          go to state 44
    ENUM_STATEMENT         go to state 45
    SWITCH_STATEMENT       go to state 46
    CASE_STATEMENT         go to state 47
    BREAK_STATEMENT        go to state 48
    TYPEDEF_STATEMENT      go to state 49
    TWO_OP_STATEMENT       go to state 50
    INCREASE_STATEMENT     go to state 51
    STRUCT_STATEMENT       go to state 52
    SIZEOF_STATEMENT       go to state 53
    EXPR                   go to state 135
    OP_EXPR                go to state 55
    SINGLE_EXPR            go to state 56
    LOGIC_EXPR             go to state 57
    NUMBER                 go to state 58
    CHARACTOR              go to state 59
    INTEGER                go to state 60
    FLOAT                  go to state 61
    DOT                    go to state 62
    FUNCTION_CALL          go to state 63
    TYPE                   go to state 85
    POINTER                go to state 65
    LIST                   go to state 136
    ARG_LIST               go to state 137
    FOR_LIST               go to state 138


State 79

   62 SIZEOF_STATEMENT: T_SIZEOF T_L_BRACKET . EXPR T_R_BRACKET ';'

    T_IDENTIFIER          shift, and go to state 71
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    EXPR           go to state 139
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 60
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 80

   43 IF_ELSE_STATEMENT: T_IF T_L_BRACKET . EXPR T_R_BRACKET T_L_BRACE STATEMENT T_R_BRACE T_ELSE T_L_BRACE STATEMENT T_R_BRACE
   44                  | T_IF T_L_BRACKET . EXPR T_R_BRACKET T_L_BRACE STATEMENT T_R_BRACE

    T_IDENTIFIER          shift, and go to state 71
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    EXPR           go to state 140
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 60
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 81

   45 WHILE_STATEMENT: T_WHILE T_L_BRACKET . EXPR T_R_BRACKET T_L_BRACE STATEMENT T_R_BRACE

    T_IDENTIFIER          shift, and go to state 71
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    EXPR           go to state 141
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 60
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 82

   99 FUNCTION_CALL: T_IDENTIFIER T_L_BRACKET . LIST T_R_BRACKET

    T_DOUBLE              shift, and go to state 1
    T_INT                 shift, and go to state 2
    T_STRUCT              shift, and go to state 3
    T_BREAK               shift, and go to state 4
    T_SWITCH              shift, and go to state 5
    T_CASE                shift, and go to state 6
    T_ENUM                shift, and go to state 7
    T_TYPEDEF             shift, and go to state 8
    T_RETURN              shift, and go to state 9
    T_FLOAT               shift, and go to state 10
    T_FOR                 shift, and go to state 11
    T_SIZEOF              shift, and go to state 12
    T_IF                  shift, and go to state 13
    T_WHILE               shift, and go to state 14
    T_IDENTIFIER          shift, and go to state 15
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACE             shift, and go to state 20
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_INC              shift, and go to state 24
    T_OP_DEC              shift, and go to state 25
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27
    T_ENDLESS_LOOP        shift, and go to state 133

    STATEMENT              go to state 134
    RETURN_STATEMENT       go to state 33
    DECLARATION_STATEMENT  go to state 34
    ARRAY_DECLARATION      go to state 35
    FUNCTION_DECLARATION   go to state 36
    REGULAR_DECLARATION    go to state 37
    STRUCT_DECLARATION     go to state 38
    ASSIGNMENT_STATEMENT   go to state 39
    ASSIGNMENT_DEFINITION  go to state 40
    COMPARE_STATEMENT      go to state 41
    IF_ELSE_STATEMENT      go to state 42
    WHILE_STATEMENT        go to state 43
    FOR_STATEMENT          go to state 44
    ENUM_STATEMENT         go to state 45
    SWITCH_STATEMENT       go to state 46
    CASE_STATEMENT         go to state 47
    BREAK_STATEMENT        go to state 48
    TYPEDEF_STATEMENT      go to state 49
    TWO_OP_STATEMENT       go to state 50
    INCREASE_STATEMENT     go to state 51
    STRUCT_STATEMENT       go to state 52
    SIZEOF_STATEMENT       go to state 53
    EXPR                   go to state 135
    OP_EXPR                go to state 55
    SINGLE_EXPR            go to state 56
    LOGIC_EXPR             go to state 57
    NUMBER                 go to state 58
    CHARACTOR              go to state 59
    INTEGER                go to state 60
    FLOAT                  go to state 61
    DOT                    go to state 62
    FUNCTION_CALL          go to state 63
    TYPE                   go to state 85
    POINTER                go to state 65
    LIST                   go to state 142
    ARG_LIST               go to state 137
    FOR_LIST               go to state 138


State 83

   84 SINGLE_EXPR: T_IDENTIFIER T_L_SQUARE . EXPR T_R_SQUARE

    T_IDENTIFIER          shift, and go to state 71
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    EXPR           go to state 143
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 60
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 84

    7 STATEMENT: STATEMENT .
   15          | T_L_BRACE STATEMENT . T_R_BRACE

    T_R_BRACE  shift, and go to state 144

    T_R_BRACE  [reduce using rule 7 (STATEMENT)]


State 85

   30 ARRAY_DECLARATION: TYPE . T_IDENTIFIER T_L_SQUARE EXPR T_R_SQUARE ';'
   31 FUNCTION_DECLARATION: TYPE . FUNCTION_CALL ';'
   32 REGULAR_DECLARATION: TYPE . T_IDENTIFIER ';'
   33                    | TYPE . T_IDENTIFIER ','
   34                    | TYPE . T_IDENTIFIER
   41 ASSIGNMENT_DEFINITION: TYPE . T_IDENTIFIER T_ASSIGN EXPR
  105 TYPE: TYPE .

    T_IDENTIFIER  shift, and go to state 116

    T_IDENTIFIER  [reduce using rule 105 (TYPE)]

    FUNCTION_CALL  go to state 145


State 86

   66 EXPR: T_L_BRACKET EXPR . T_R_BRACKET
   67     | EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   70        | EXPR . T_OP_PLUS EXPR
   71        | EXPR . T_OP_MINUS EXPR
   72        | EXPR . T_OP_MUL EXPR
   74        | EXPR . T_OP_BAND EXPR
   75        | EXPR . T_OP_BOR EXPR
   76        | EXPR . T_OP_BXOR EXPR
   77        | EXPR . T_OP_NE EXPR
   78        | EXPR . T_OP_LE EXPR
   79        | EXPR . T_OP_LT EXPR
   80        | EXPR . T_OP_LAND EXPR
   81        | EXPR . T_OP_LOR EXPR
   98 DOT: EXPR . '.' EXPR

    T_R_BRACKET  shift, and go to state 146
    T_OP_PLUS    shift, and go to state 96
    T_OP_MINUS   shift, and go to state 97
    T_OP_MUL     shift, and go to state 98
    T_OP_LE      shift, and go to state 99
    T_OP_EQ      shift, and go to state 100
    T_OP_NE      shift, and go to state 101
    T_OP_LT      shift, and go to state 123
    T_OP_LAND    shift, and go to state 103
    T_OP_LOR     shift, and go to state 104
    T_OP_BAND    shift, and go to state 105
    T_OP_BOR     shift, and go to state 106
    T_OP_BXOR    shift, and go to state 107
    ','          shift, and go to state 114
    '.'          shift, and go to state 115

    T_R_BRACKET  [reduce using rule 67 (EXPR)]
    T_OP_PLUS    [reduce using rule 67 (EXPR)]
    T_OP_MINUS   [reduce using rule 67 (EXPR)]
    T_OP_MUL     [reduce using rule 67 (EXPR)]
    T_OP_LE      [reduce using rule 67 (EXPR)]
    T_OP_EQ      [reduce using rule 67 (EXPR)]
    T_OP_NE      [reduce using rule 67 (EXPR)]
    T_OP_LT      [reduce using rule 67 (EXPR)]
    T_OP_LAND    [reduce using rule 67 (EXPR)]
    T_OP_LOR     [reduce using rule 67 (EXPR)]
    T_OP_BAND    [reduce using rule 67 (EXPR)]
    T_OP_BOR     [reduce using rule 67 (EXPR)]
    T_OP_BXOR    [reduce using rule 67 (EXPR)]
    ','          [reduce using rule 67 (EXPR)]
    '.'          [reduce using rule 67 (EXPR)]


State 87

   92 NUMBER: T_OP_MINUS INTEGER .

    $default  reduce using rule 92 (NUMBER)


State 88

    7 STATEMENT: STATEMENT .
   59 INCREASE_STATEMENT: T_OP_INC STATEMENT .

    $end                  reduce using rule 7 (STATEMENT)
    $end                  [reduce using rule 59 (INCREASE_STATEMENT)]
    T_DOUBLE              reduce using rule 7 (STATEMENT)
    T_DOUBLE              [reduce using rule 59 (INCREASE_STATEMENT)]
    T_INT                 reduce using rule 7 (STATEMENT)
    T_INT                 [reduce using rule 59 (INCREASE_STATEMENT)]
    T_STRUCT              reduce using rule 7 (STATEMENT)
    T_STRUCT              [reduce using rule 59 (INCREASE_STATEMENT)]
    T_BREAK               reduce using rule 7 (STATEMENT)
    T_BREAK               [reduce using rule 59 (INCREASE_STATEMENT)]
    T_SWITCH              reduce using rule 7 (STATEMENT)
    T_SWITCH              [reduce using rule 59 (INCREASE_STATEMENT)]
    T_CASE                reduce using rule 7 (STATEMENT)
    T_CASE                [reduce using rule 59 (INCREASE_STATEMENT)]
    T_ENUM                reduce using rule 7 (STATEMENT)
    T_ENUM                [reduce using rule 59 (INCREASE_STATEMENT)]
    T_TYPEDEF             reduce using rule 7 (STATEMENT)
    T_TYPEDEF             [reduce using rule 59 (INCREASE_STATEMENT)]
    T_RETURN              reduce using rule 7 (STATEMENT)
    T_RETURN              [reduce using rule 59 (INCREASE_STATEMENT)]
    T_FLOAT               reduce using rule 7 (STATEMENT)
    T_FLOAT               [reduce using rule 59 (INCREASE_STATEMENT)]
    T_FOR                 reduce using rule 7 (STATEMENT)
    T_FOR                 [reduce using rule 59 (INCREASE_STATEMENT)]
    T_SIZEOF              reduce using rule 7 (STATEMENT)
    T_SIZEOF              [reduce using rule 59 (INCREASE_STATEMENT)]
    T_IF                  reduce using rule 7 (STATEMENT)
    T_IF                  [reduce using rule 59 (INCREASE_STATEMENT)]
    T_WHILE               reduce using rule 7 (STATEMENT)
    T_WHILE               [reduce using rule 59 (INCREASE_STATEMENT)]
    T_IDENTIFIER          reduce using rule 7 (STATEMENT)
    T_IDENTIFIER          [reduce using rule 59 (INCREASE_STATEMENT)]
    T_STRING_LITERAL      reduce using rule 7 (STATEMENT)
    T_STRING_LITERAL      [reduce using rule 59 (INCREASE_STATEMENT)]
    T_INT_CONSTANT        reduce using rule 7 (STATEMENT)
    T_INT_CONSTANT        [reduce using rule 59 (INCREASE_STATEMENT)]
    T_FLOAT_CONSTANT      reduce using rule 7 (STATEMENT)
    T_FLOAT_CONSTANT      [reduce using rule 59 (INCREASE_STATEMENT)]
    T_CHARACTER_CONSTANT  reduce using rule 7 (STATEMENT)
    T_CHARACTER_CONSTANT  [reduce using rule 59 (INCREASE_STATEMENT)]
    T_L_BRACE             reduce using rule 7 (STATEMENT)
    T_L_BRACE             [reduce using rule 59 (INCREASE_STATEMENT)]
    T_R_BRACE             reduce using rule 7 (STATEMENT)
    T_R_BRACE             [reduce using rule 59 (INCREASE_STATEMENT)]
    T_L_BRACKET           reduce using rule 7 (STATEMENT)
    T_L_BRACKET           [reduce using rule 59 (INCREASE_STATEMENT)]
    T_R_BRACKET           reduce using rule 7 (STATEMENT)
    T_R_BRACKET           [reduce using rule 59 (INCREASE_STATEMENT)]
    T_OP_MINUS            reduce using rule 7 (STATEMENT)
    T_OP_MINUS            [reduce using rule 59 (INCREASE_STATEMENT)]
    T_OP_MUL              reduce using rule 7 (STATEMENT)
    T_OP_MUL              [reduce using rule 59 (INCREASE_STATEMENT)]
    T_OP_INC              reduce using rule 7 (STATEMENT)
    T_OP_INC              [reduce using rule 59 (INCREASE_STATEMENT)]
    T_OP_DEC              reduce using rule 7 (STATEMENT)
    T_OP_DEC              [reduce using rule 59 (INCREASE_STATEMENT)]
    T_OP_LNOT             reduce using rule 7 (STATEMENT)
    T_OP_LNOT             [reduce using rule 59 (INCREASE_STATEMENT)]
    T_OP_BAND             reduce using rule 7 (STATEMENT)
    T_OP_BAND             [reduce using rule 59 (INCREASE_STATEMENT)]
    $default              reduce using rule 7 (STATEMENT)


State 89

    7 STATEMENT: STATEMENT .
   60 INCREASE_STATEMENT: T_OP_DEC STATEMENT .

    $end                  reduce using rule 7 (STATEMENT)
    $end                  [reduce using rule 60 (INCREASE_STATEMENT)]
    T_DOUBLE              reduce using rule 7 (STATEMENT)
    T_DOUBLE              [reduce using rule 60 (INCREASE_STATEMENT)]
    T_INT                 reduce using rule 7 (STATEMENT)
    T_INT                 [reduce using rule 60 (INCREASE_STATEMENT)]
    T_STRUCT              reduce using rule 7 (STATEMENT)
    T_STRUCT              [reduce using rule 60 (INCREASE_STATEMENT)]
    T_BREAK               reduce using rule 7 (STATEMENT)
    T_BREAK               [reduce using rule 60 (INCREASE_STATEMENT)]
    T_SWITCH              reduce using rule 7 (STATEMENT)
    T_SWITCH              [reduce using rule 60 (INCREASE_STATEMENT)]
    T_CASE                reduce using rule 7 (STATEMENT)
    T_CASE                [reduce using rule 60 (INCREASE_STATEMENT)]
    T_ENUM                reduce using rule 7 (STATEMENT)
    T_ENUM                [reduce using rule 60 (INCREASE_STATEMENT)]
    T_TYPEDEF             reduce using rule 7 (STATEMENT)
    T_TYPEDEF             [reduce using rule 60 (INCREASE_STATEMENT)]
    T_RETURN              reduce using rule 7 (STATEMENT)
    T_RETURN              [reduce using rule 60 (INCREASE_STATEMENT)]
    T_FLOAT               reduce using rule 7 (STATEMENT)
    T_FLOAT               [reduce using rule 60 (INCREASE_STATEMENT)]
    T_FOR                 reduce using rule 7 (STATEMENT)
    T_FOR                 [reduce using rule 60 (INCREASE_STATEMENT)]
    T_SIZEOF              reduce using rule 7 (STATEMENT)
    T_SIZEOF              [reduce using rule 60 (INCREASE_STATEMENT)]
    T_IF                  reduce using rule 7 (STATEMENT)
    T_IF                  [reduce using rule 60 (INCREASE_STATEMENT)]
    T_WHILE               reduce using rule 7 (STATEMENT)
    T_WHILE               [reduce using rule 60 (INCREASE_STATEMENT)]
    T_IDENTIFIER          reduce using rule 7 (STATEMENT)
    T_IDENTIFIER          [reduce using rule 60 (INCREASE_STATEMENT)]
    T_STRING_LITERAL      reduce using rule 7 (STATEMENT)
    T_STRING_LITERAL      [reduce using rule 60 (INCREASE_STATEMENT)]
    T_INT_CONSTANT        reduce using rule 7 (STATEMENT)
    T_INT_CONSTANT        [reduce using rule 60 (INCREASE_STATEMENT)]
    T_FLOAT_CONSTANT      reduce using rule 7 (STATEMENT)
    T_FLOAT_CONSTANT      [reduce using rule 60 (INCREASE_STATEMENT)]
    T_CHARACTER_CONSTANT  reduce using rule 7 (STATEMENT)
    T_CHARACTER_CONSTANT  [reduce using rule 60 (INCREASE_STATEMENT)]
    T_L_BRACE             reduce using rule 7 (STATEMENT)
    T_L_BRACE             [reduce using rule 60 (INCREASE_STATEMENT)]
    T_R_BRACE             reduce using rule 7 (STATEMENT)
    T_R_BRACE             [reduce using rule 60 (INCREASE_STATEMENT)]
    T_L_BRACKET           reduce using rule 7 (STATEMENT)
    T_L_BRACKET           [reduce using rule 60 (INCREASE_STATEMENT)]
    T_R_BRACKET           reduce using rule 7 (STATEMENT)
    T_R_BRACKET           [reduce using rule 60 (INCREASE_STATEMENT)]
    T_OP_MINUS            reduce using rule 7 (STATEMENT)
    T_OP_MINUS            [reduce using rule 60 (INCREASE_STATEMENT)]
    T_OP_MUL              reduce using rule 7 (STATEMENT)
    T_OP_MUL              [reduce using rule 60 (INCREASE_STATEMENT)]
    T_OP_INC              reduce using rule 7 (STATEMENT)
    T_OP_INC              [reduce using rule 60 (INCREASE_STATEMENT)]
    T_OP_DEC              reduce using rule 7 (STATEMENT)
    T_OP_DEC              [reduce using rule 60 (INCREASE_STATEMENT)]
    T_OP_LNOT             reduce using rule 7 (STATEMENT)
    T_OP_LNOT             [reduce using rule 60 (INCREASE_STATEMENT)]
    T_OP_BAND             reduce using rule 7 (STATEMENT)
    T_OP_BAND             [reduce using rule 60 (INCREASE_STATEMENT)]
    $default              reduce using rule 7 (STATEMENT)


State 90

   67 EXPR: EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   70        | EXPR . T_OP_PLUS EXPR
   71        | EXPR . T_OP_MINUS EXPR
   72        | EXPR . T_OP_MUL EXPR
   74        | EXPR . T_OP_BAND EXPR
   75        | EXPR . T_OP_BOR EXPR
   76        | EXPR . T_OP_BXOR EXPR
   77        | EXPR . T_OP_NE EXPR
   78        | EXPR . T_OP_LE EXPR
   79        | EXPR . T_OP_LT EXPR
   80        | EXPR . T_OP_LAND EXPR
   81        | EXPR . T_OP_LOR EXPR
   90 LOGIC_EXPR: T_OP_LNOT EXPR .
   98 DOT: EXPR . '.' EXPR

    T_OP_PLUS   shift, and go to state 96
    T_OP_MINUS  shift, and go to state 97
    T_OP_MUL    shift, and go to state 98
    T_OP_LE     shift, and go to state 99
    T_OP_EQ     shift, and go to state 100
    T_OP_NE     shift, and go to state 101
    T_OP_LT     shift, and go to state 123
    T_OP_LAND   shift, and go to state 103
    T_OP_LOR    shift, and go to state 104
    T_OP_BAND   shift, and go to state 105
    T_OP_BOR    shift, and go to state 106
    T_OP_BXOR   shift, and go to state 107
    ','         shift, and go to state 114
    '.'         shift, and go to state 115

    $end                  reduce using rule 67 (EXPR)
    $end                  [reduce using rule 90 (LOGIC_EXPR)]
    T_DOUBLE              reduce using rule 67 (EXPR)
    T_DOUBLE              [reduce using rule 90 (LOGIC_EXPR)]
    T_INT                 reduce using rule 67 (EXPR)
    T_INT                 [reduce using rule 90 (LOGIC_EXPR)]
    T_STRUCT              reduce using rule 67 (EXPR)
    T_STRUCT              [reduce using rule 90 (LOGIC_EXPR)]
    T_BREAK               reduce using rule 67 (EXPR)
    T_BREAK               [reduce using rule 90 (LOGIC_EXPR)]
    T_SWITCH              reduce using rule 67 (EXPR)
    T_SWITCH              [reduce using rule 90 (LOGIC_EXPR)]
    T_CASE                reduce using rule 67 (EXPR)
    T_CASE                [reduce using rule 90 (LOGIC_EXPR)]
    T_ENUM                reduce using rule 67 (EXPR)
    T_ENUM                [reduce using rule 90 (LOGIC_EXPR)]
    T_TYPEDEF             reduce using rule 67 (EXPR)
    T_TYPEDEF             [reduce using rule 90 (LOGIC_EXPR)]
    T_RETURN              reduce using rule 67 (EXPR)
    T_RETURN              [reduce using rule 90 (LOGIC_EXPR)]
    T_FLOAT               reduce using rule 67 (EXPR)
    T_FLOAT               [reduce using rule 90 (LOGIC_EXPR)]
    T_FOR                 reduce using rule 67 (EXPR)
    T_FOR                 [reduce using rule 90 (LOGIC_EXPR)]
    T_SIZEOF              reduce using rule 67 (EXPR)
    T_SIZEOF              [reduce using rule 90 (LOGIC_EXPR)]
    T_IF                  reduce using rule 67 (EXPR)
    T_IF                  [reduce using rule 90 (LOGIC_EXPR)]
    T_WHILE               reduce using rule 67 (EXPR)
    T_WHILE               [reduce using rule 90 (LOGIC_EXPR)]
    T_IDENTIFIER          reduce using rule 67 (EXPR)
    T_IDENTIFIER          [reduce using rule 90 (LOGIC_EXPR)]
    T_STRING_LITERAL      reduce using rule 67 (EXPR)
    T_STRING_LITERAL      [reduce using rule 90 (LOGIC_EXPR)]
    T_INT_CONSTANT        reduce using rule 67 (EXPR)
    T_INT_CONSTANT        [reduce using rule 90 (LOGIC_EXPR)]
    T_FLOAT_CONSTANT      reduce using rule 67 (EXPR)
    T_FLOAT_CONSTANT      [reduce using rule 90 (LOGIC_EXPR)]
    T_CHARACTER_CONSTANT  reduce using rule 67 (EXPR)
    T_CHARACTER_CONSTANT  [reduce using rule 90 (LOGIC_EXPR)]
    T_L_BRACE             reduce using rule 67 (EXPR)
    T_L_BRACE             [reduce using rule 90 (LOGIC_EXPR)]
    T_R_BRACE             reduce using rule 67 (EXPR)
    T_R_BRACE             [reduce using rule 90 (LOGIC_EXPR)]
    T_L_BRACKET           reduce using rule 67 (EXPR)
    T_L_BRACKET           [reduce using rule 90 (LOGIC_EXPR)]
    T_R_BRACKET           reduce using rule 67 (EXPR)
    T_R_BRACKET           [reduce using rule 90 (LOGIC_EXPR)]
    T_R_SQUARE            reduce using rule 67 (EXPR)
    T_R_SQUARE            [reduce using rule 90 (LOGIC_EXPR)]
    T_OP_PLUS             [reduce using rule 67 (EXPR)]
    T_OP_PLUS             [reduce using rule 90 (LOGIC_EXPR)]
    T_OP_MINUS            [reduce using rule 67 (EXPR)]
    T_OP_MINUS            [reduce using rule 90 (LOGIC_EXPR)]
    T_OP_MUL              [reduce using rule 67 (EXPR)]
    T_OP_MUL              [reduce using rule 90 (LOGIC_EXPR)]
    T_OP_INC              reduce using rule 67 (EXPR)
    T_OP_INC              [reduce using rule 90 (LOGIC_EXPR)]
    T_OP_DEC              reduce using rule 67 (EXPR)
    T_OP_DEC              [reduce using rule 90 (LOGIC_EXPR)]
    T_OP_LE               [reduce using rule 67 (EXPR)]
    T_OP_LE               [reduce using rule 90 (LOGIC_EXPR)]
    T_OP_EQ               [reduce using rule 67 (EXPR)]
    T_OP_EQ               [reduce using rule 90 (LOGIC_EXPR)]
    T_OP_NE               [reduce using rule 67 (EXPR)]
    T_OP_NE               [reduce using rule 90 (LOGIC_EXPR)]
    T_OP_LT               [reduce using rule 67 (EXPR)]
    T_OP_LT               [reduce using rule 90 (LOGIC_EXPR)]
    T_OP_LAND             [reduce using rule 67 (EXPR)]
    T_OP_LAND             [reduce using rule 90 (LOGIC_EXPR)]
    T_OP_LOR              [reduce using rule 67 (EXPR)]
    T_OP_LOR              [reduce using rule 90 (LOGIC_EXPR)]
    T_OP_LNOT             reduce using rule 67 (EXPR)
    T_OP_LNOT             [reduce using rule 90 (LOGIC_EXPR)]
    T_OP_BAND             [reduce using rule 67 (EXPR)]
    T_OP_BAND             [reduce using rule 90 (LOGIC_EXPR)]
    T_OP_BOR              [reduce using rule 67 (EXPR)]
    T_OP_BOR              [reduce using rule 90 (LOGIC_EXPR)]
    T_OP_BXOR             [reduce using rule 67 (EXPR)]
    T_OP_BXOR             [reduce using rule 90 (LOGIC_EXPR)]
    T_ASSIGN              reduce using rule 67 (EXPR)
    T_ASSIGN              [reduce using rule 90 (LOGIC_EXPR)]
    T_ADD_ASSIGN          reduce using rule 67 (EXPR)
    T_ADD_ASSIGN          [reduce using rule 90 (LOGIC_EXPR)]
    T_SUB_ASSIGN          reduce using rule 67 (EXPR)
    T_SUB_ASSIGN          [reduce using rule 90 (LOGIC_EXPR)]
    T_MUL_ASSIGN          reduce using rule 67 (EXPR)
    T_MUL_ASSIGN          [reduce using rule 90 (LOGIC_EXPR)]
    T_DIV_ASSIGN          reduce using rule 67 (EXPR)
    T_DIV_ASSIGN          [reduce using rule 90 (LOGIC_EXPR)]
    T_MOD_ASSIGN          reduce using rule 67 (EXPR)
    T_MOD_ASSIGN          [reduce using rule 90 (LOGIC_EXPR)]
    ';'                   reduce using rule 67 (EXPR)
    ';'                   [reduce using rule 90 (LOGIC_EXPR)]
    ','                   [reduce using rule 67 (EXPR)]
    ','                   [reduce using rule 90 (LOGIC_EXPR)]
    ':'                   reduce using rule 67 (EXPR)
    ':'                   [reduce using rule 90 (LOGIC_EXPR)]
    '.'                   [reduce using rule 67 (EXPR)]
    '.'                   [reduce using rule 90 (LOGIC_EXPR)]
    $default              reduce using rule 67 (EXPR)


State 91

   67 EXPR: EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   70        | EXPR . T_OP_PLUS EXPR
   71        | EXPR . T_OP_MINUS EXPR
   72        | EXPR . T_OP_MUL EXPR
   74        | EXPR . T_OP_BAND EXPR
   75        | EXPR . T_OP_BOR EXPR
   76        | EXPR . T_OP_BXOR EXPR
   77        | EXPR . T_OP_NE EXPR
   78        | EXPR . T_OP_LE EXPR
   79        | EXPR . T_OP_LT EXPR
   80        | EXPR . T_OP_LAND EXPR
   81        | EXPR . T_OP_LOR EXPR
   87 SINGLE_EXPR: T_OP_BAND EXPR .
   98 DOT: EXPR . '.' EXPR

    T_OP_PLUS   shift, and go to state 96
    T_OP_MINUS  shift, and go to state 97
    T_OP_MUL    shift, and go to state 98
    T_OP_LE     shift, and go to state 99
    T_OP_EQ     shift, and go to state 100
    T_OP_NE     shift, and go to state 101
    T_OP_LT     shift, and go to state 123
    T_OP_LAND   shift, and go to state 103
    T_OP_LOR    shift, and go to state 104
    T_OP_BAND   shift, and go to state 105
    T_OP_BOR    shift, and go to state 106
    T_OP_BXOR   shift, and go to state 107
    ','         shift, and go to state 114
    '.'         shift, and go to state 115

    $end                  reduce using rule 67 (EXPR)
    $end                  [reduce using rule 87 (SINGLE_EXPR)]
    T_DOUBLE              reduce using rule 67 (EXPR)
    T_DOUBLE              [reduce using rule 87 (SINGLE_EXPR)]
    T_INT                 reduce using rule 67 (EXPR)
    T_INT                 [reduce using rule 87 (SINGLE_EXPR)]
    T_STRUCT              reduce using rule 67 (EXPR)
    T_STRUCT              [reduce using rule 87 (SINGLE_EXPR)]
    T_BREAK               reduce using rule 67 (EXPR)
    T_BREAK               [reduce using rule 87 (SINGLE_EXPR)]
    T_SWITCH              reduce using rule 67 (EXPR)
    T_SWITCH              [reduce using rule 87 (SINGLE_EXPR)]
    T_CASE                reduce using rule 67 (EXPR)
    T_CASE                [reduce using rule 87 (SINGLE_EXPR)]
    T_ENUM                reduce using rule 67 (EXPR)
    T_ENUM                [reduce using rule 87 (SINGLE_EXPR)]
    T_TYPEDEF             reduce using rule 67 (EXPR)
    T_TYPEDEF             [reduce using rule 87 (SINGLE_EXPR)]
    T_RETURN              reduce using rule 67 (EXPR)
    T_RETURN              [reduce using rule 87 (SINGLE_EXPR)]
    T_FLOAT               reduce using rule 67 (EXPR)
    T_FLOAT               [reduce using rule 87 (SINGLE_EXPR)]
    T_FOR                 reduce using rule 67 (EXPR)
    T_FOR                 [reduce using rule 87 (SINGLE_EXPR)]
    T_SIZEOF              reduce using rule 67 (EXPR)
    T_SIZEOF              [reduce using rule 87 (SINGLE_EXPR)]
    T_IF                  reduce using rule 67 (EXPR)
    T_IF                  [reduce using rule 87 (SINGLE_EXPR)]
    T_WHILE               reduce using rule 67 (EXPR)
    T_WHILE               [reduce using rule 87 (SINGLE_EXPR)]
    T_IDENTIFIER          reduce using rule 67 (EXPR)
    T_IDENTIFIER          [reduce using rule 87 (SINGLE_EXPR)]
    T_STRING_LITERAL      reduce using rule 67 (EXPR)
    T_STRING_LITERAL      [reduce using rule 87 (SINGLE_EXPR)]
    T_INT_CONSTANT        reduce using rule 67 (EXPR)
    T_INT_CONSTANT        [reduce using rule 87 (SINGLE_EXPR)]
    T_FLOAT_CONSTANT      reduce using rule 67 (EXPR)
    T_FLOAT_CONSTANT      [reduce using rule 87 (SINGLE_EXPR)]
    T_CHARACTER_CONSTANT  reduce using rule 67 (EXPR)
    T_CHARACTER_CONSTANT  [reduce using rule 87 (SINGLE_EXPR)]
    T_L_BRACE             reduce using rule 67 (EXPR)
    T_L_BRACE             [reduce using rule 87 (SINGLE_EXPR)]
    T_R_BRACE             reduce using rule 67 (EXPR)
    T_R_BRACE             [reduce using rule 87 (SINGLE_EXPR)]
    T_L_BRACKET           reduce using rule 67 (EXPR)
    T_L_BRACKET           [reduce using rule 87 (SINGLE_EXPR)]
    T_R_BRACKET           reduce using rule 67 (EXPR)
    T_R_BRACKET           [reduce using rule 87 (SINGLE_EXPR)]
    T_R_SQUARE            reduce using rule 67 (EXPR)
    T_R_SQUARE            [reduce using rule 87 (SINGLE_EXPR)]
    T_OP_PLUS             [reduce using rule 67 (EXPR)]
    T_OP_PLUS             [reduce using rule 87 (SINGLE_EXPR)]
    T_OP_MINUS            [reduce using rule 67 (EXPR)]
    T_OP_MINUS            [reduce using rule 87 (SINGLE_EXPR)]
    T_OP_MUL              [reduce using rule 67 (EXPR)]
    T_OP_MUL              [reduce using rule 87 (SINGLE_EXPR)]
    T_OP_INC              reduce using rule 67 (EXPR)
    T_OP_INC              [reduce using rule 87 (SINGLE_EXPR)]
    T_OP_DEC              reduce using rule 67 (EXPR)
    T_OP_DEC              [reduce using rule 87 (SINGLE_EXPR)]
    T_OP_LE               [reduce using rule 67 (EXPR)]
    T_OP_LE               [reduce using rule 87 (SINGLE_EXPR)]
    T_OP_EQ               [reduce using rule 67 (EXPR)]
    T_OP_EQ               [reduce using rule 87 (SINGLE_EXPR)]
    T_OP_NE               [reduce using rule 67 (EXPR)]
    T_OP_NE               [reduce using rule 87 (SINGLE_EXPR)]
    T_OP_LT               [reduce using rule 67 (EXPR)]
    T_OP_LT               [reduce using rule 87 (SINGLE_EXPR)]
    T_OP_LAND             [reduce using rule 67 (EXPR)]
    T_OP_LAND             [reduce using rule 87 (SINGLE_EXPR)]
    T_OP_LOR              [reduce using rule 67 (EXPR)]
    T_OP_LOR              [reduce using rule 87 (SINGLE_EXPR)]
    T_OP_LNOT             reduce using rule 67 (EXPR)
    T_OP_LNOT             [reduce using rule 87 (SINGLE_EXPR)]
    T_OP_BAND             [reduce using rule 67 (EXPR)]
    T_OP_BAND             [reduce using rule 87 (SINGLE_EXPR)]
    T_OP_BOR              [reduce using rule 67 (EXPR)]
    T_OP_BOR              [reduce using rule 87 (SINGLE_EXPR)]
    T_OP_BXOR             [reduce using rule 67 (EXPR)]
    T_OP_BXOR             [reduce using rule 87 (SINGLE_EXPR)]
    T_ASSIGN              reduce using rule 67 (EXPR)
    T_ASSIGN              [reduce using rule 87 (SINGLE_EXPR)]
    T_ADD_ASSIGN          reduce using rule 67 (EXPR)
    T_ADD_ASSIGN          [reduce using rule 87 (SINGLE_EXPR)]
    T_SUB_ASSIGN          reduce using rule 67 (EXPR)
    T_SUB_ASSIGN          [reduce using rule 87 (SINGLE_EXPR)]
    T_MUL_ASSIGN          reduce using rule 67 (EXPR)
    T_MUL_ASSIGN          [reduce using rule 87 (SINGLE_EXPR)]
    T_DIV_ASSIGN          reduce using rule 67 (EXPR)
    T_DIV_ASSIGN          [reduce using rule 87 (SINGLE_EXPR)]
    T_MOD_ASSIGN          reduce using rule 67 (EXPR)
    T_MOD_ASSIGN          [reduce using rule 87 (SINGLE_EXPR)]
    ';'                   reduce using rule 67 (EXPR)
    ';'                   [reduce using rule 87 (SINGLE_EXPR)]
    ','                   [reduce using rule 67 (EXPR)]
    ','                   [reduce using rule 87 (SINGLE_EXPR)]
    ':'                   reduce using rule 67 (EXPR)
    ':'                   [reduce using rule 87 (SINGLE_EXPR)]
    '.'                   [reduce using rule 67 (EXPR)]
    '.'                   [reduce using rule 87 (SINGLE_EXPR)]
    $default              reduce using rule 67 (EXPR)


State 92

    0 $accept: ROOT $end .

    $default  accept


State 93

    3 PROGRAM: PROGRAM EXTERNAL_OBJECT .

    $default  reduce using rule 3 (PROGRAM)


State 94

   39 ASSIGNMENT_STATEMENT: ASSIGNMENT_STATEMENT ASSIGNMENT_DEFINITION .

    $default  reduce using rule 39 (ASSIGNMENT_STATEMENT)


State 95

   41 ASSIGNMENT_DEFINITION: TYPE . T_IDENTIFIER T_ASSIGN EXPR
  105 TYPE: TYPE .

    T_IDENTIFIER  shift, and go to state 147

    T_IDENTIFIER  [reduce using rule 105 (TYPE)]


State 96

   70 OP_EXPR: EXPR T_OP_PLUS . EXPR

    T_IDENTIFIER          shift, and go to state 71
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    EXPR           go to state 148
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 60
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 97

   71 OP_EXPR: EXPR T_OP_MINUS . EXPR

    T_IDENTIFIER          shift, and go to state 71
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    EXPR           go to state 149
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 60
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 98

   72 OP_EXPR: EXPR T_OP_MUL . EXPR

    T_IDENTIFIER          shift, and go to state 71
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    EXPR           go to state 150
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 60
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 99

   78 OP_EXPR: EXPR T_OP_LE . EXPR

    T_IDENTIFIER          shift, and go to state 71
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    EXPR           go to state 151
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 60
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 100

   69 OP_EXPR: EXPR T_OP_EQ . EXPR

    T_IDENTIFIER          shift, and go to state 71
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    EXPR           go to state 152
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 60
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 101

   77 OP_EXPR: EXPR T_OP_NE . EXPR

    T_IDENTIFIER          shift, and go to state 71
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    EXPR           go to state 153
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 60
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 102

   42 COMPARE_STATEMENT: EXPR T_OP_LT . EXPR ';'
   79 OP_EXPR: EXPR T_OP_LT . EXPR

    T_IDENTIFIER          shift, and go to state 71
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    EXPR           go to state 154
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 60
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 103

   80 OP_EXPR: EXPR T_OP_LAND . EXPR

    T_IDENTIFIER          shift, and go to state 71
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    EXPR           go to state 155
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 60
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 104

   81 OP_EXPR: EXPR T_OP_LOR . EXPR

    T_IDENTIFIER          shift, and go to state 71
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    EXPR           go to state 156
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 60
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 105

   74 OP_EXPR: EXPR T_OP_BAND . EXPR

    T_IDENTIFIER          shift, and go to state 71
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    EXPR           go to state 157
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 60
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 106

   75 OP_EXPR: EXPR T_OP_BOR . EXPR

    T_IDENTIFIER          shift, and go to state 71
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    EXPR           go to state 158
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 60
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 107

   76 OP_EXPR: EXPR T_OP_BXOR . EXPR

    T_IDENTIFIER          shift, and go to state 71
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    EXPR           go to state 159
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 60
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 108

   36 ASSIGNMENT_STATEMENT: EXPR T_ASSIGN . EXPR ';'
   37                     | EXPR T_ASSIGN . EXPR ','
   38                     | EXPR T_ASSIGN . EXPR

    T_IDENTIFIER          shift, and go to state 71
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    EXPR           go to state 160
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 60
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 109

   54 TWO_OP_STATEMENT: EXPR T_ADD_ASSIGN . EXPR ';'

    T_IDENTIFIER          shift, and go to state 71
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    EXPR           go to state 161
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 60
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 110

   57 TWO_OP_STATEMENT: EXPR T_SUB_ASSIGN . EXPR ';'

    T_IDENTIFIER          shift, and go to state 71
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    EXPR           go to state 162
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 60
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 111

   56 TWO_OP_STATEMENT: EXPR T_MUL_ASSIGN . EXPR ';'

    T_IDENTIFIER          shift, and go to state 71
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    EXPR           go to state 163
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 60
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 112

   58 TWO_OP_STATEMENT: EXPR T_DIV_ASSIGN . EXPR ';'

    T_IDENTIFIER          shift, and go to state 71
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    EXPR           go to state 164
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 60
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 113

   55 TWO_OP_STATEMENT: EXPR T_MOD_ASSIGN . EXPR ';'

    T_IDENTIFIER          shift, and go to state 71
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    EXPR           go to state 165
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 60
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 114

   68 EXPR: EXPR ',' .

    $default  reduce using rule 68 (EXPR)


State 115

   98 DOT: EXPR '.' . EXPR

    T_IDENTIFIER          shift, and go to state 71
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    EXPR           go to state 166
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 60
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 116

   30 ARRAY_DECLARATION: TYPE T_IDENTIFIER . T_L_SQUARE EXPR T_R_SQUARE ';'
   32 REGULAR_DECLARATION: TYPE T_IDENTIFIER . ';'
   33                    | TYPE T_IDENTIFIER . ','
   34                    | TYPE T_IDENTIFIER .
   41 ASSIGNMENT_DEFINITION: TYPE T_IDENTIFIER . T_ASSIGN EXPR
   99 FUNCTION_CALL: T_IDENTIFIER . T_L_BRACKET LIST T_R_BRACKET

    T_L_BRACKET  shift, and go to state 82
    T_L_SQUARE   shift, and go to state 167
    T_ASSIGN     shift, and go to state 168
    ';'          shift, and go to state 169
    ','          shift, and go to state 170

    T_L_BRACKET  [reduce using rule 34 (REGULAR_DECLARATION)]
    $default     reduce using rule 34 (REGULAR_DECLARATION)


State 117

    6 FUNCTION: TYPE FUNCTION_CALL . T_L_BRACE STATEMENT T_R_BRACE
   31 FUNCTION_DECLARATION: TYPE FUNCTION_CALL . ';'

    T_L_BRACE  shift, and go to state 171
    ';'        shift, and go to state 172


State 118

  106 POINTER: POINTER T_OP_MUL .
  107        | T_OP_MUL .

    $end                  reduce using rule 106 (POINTER)
    $end                  [reduce using rule 107 (POINTER)]
    T_DOUBLE              reduce using rule 106 (POINTER)
    T_DOUBLE              [reduce using rule 107 (POINTER)]
    T_INT                 reduce using rule 106 (POINTER)
    T_INT                 [reduce using rule 107 (POINTER)]
    T_STRUCT              reduce using rule 106 (POINTER)
    T_STRUCT              [reduce using rule 107 (POINTER)]
    T_BREAK               reduce using rule 106 (POINTER)
    T_BREAK               [reduce using rule 107 (POINTER)]
    T_SWITCH              reduce using rule 106 (POINTER)
    T_SWITCH              [reduce using rule 107 (POINTER)]
    T_CASE                reduce using rule 106 (POINTER)
    T_CASE                [reduce using rule 107 (POINTER)]
    T_ENUM                reduce using rule 106 (POINTER)
    T_ENUM                [reduce using rule 107 (POINTER)]
    T_TYPEDEF             reduce using rule 106 (POINTER)
    T_TYPEDEF             [reduce using rule 107 (POINTER)]
    T_RETURN              reduce using rule 106 (POINTER)
    T_RETURN              [reduce using rule 107 (POINTER)]
    T_FLOAT               reduce using rule 106 (POINTER)
    T_FLOAT               [reduce using rule 107 (POINTER)]
    T_FOR                 reduce using rule 106 (POINTER)
    T_FOR                 [reduce using rule 107 (POINTER)]
    T_SIZEOF              reduce using rule 106 (POINTER)
    T_SIZEOF              [reduce using rule 107 (POINTER)]
    T_IF                  reduce using rule 106 (POINTER)
    T_IF                  [reduce using rule 107 (POINTER)]
    T_WHILE               reduce using rule 106 (POINTER)
    T_WHILE               [reduce using rule 107 (POINTER)]
    T_IDENTIFIER          reduce using rule 106 (POINTER)
    T_IDENTIFIER          [reduce using rule 107 (POINTER)]
    T_STRING_LITERAL      reduce using rule 106 (POINTER)
    T_STRING_LITERAL      [reduce using rule 107 (POINTER)]
    T_INT_CONSTANT        reduce using rule 106 (POINTER)
    T_INT_CONSTANT        [reduce using rule 107 (POINTER)]
    T_FLOAT_CONSTANT      reduce using rule 106 (POINTER)
    T_FLOAT_CONSTANT      [reduce using rule 107 (POINTER)]
    T_CHARACTER_CONSTANT  reduce using rule 106 (POINTER)
    T_CHARACTER_CONSTANT  [reduce using rule 107 (POINTER)]
    T_L_BRACE             reduce using rule 106 (POINTER)
    T_L_BRACE             [reduce using rule 107 (POINTER)]
    T_R_BRACE             reduce using rule 106 (POINTER)
    T_R_BRACE             [reduce using rule 107 (POINTER)]
    T_L_BRACKET           reduce using rule 106 (POINTER)
    T_L_BRACKET           [reduce using rule 107 (POINTER)]
    T_R_BRACKET           reduce using rule 106 (POINTER)
    T_R_BRACKET           [reduce using rule 107 (POINTER)]
    T_OP_MINUS            reduce using rule 106 (POINTER)
    T_OP_MINUS            [reduce using rule 107 (POINTER)]
    T_OP_MUL              reduce using rule 106 (POINTER)
    T_OP_MUL              [reduce using rule 107 (POINTER)]
    T_OP_INC              reduce using rule 106 (POINTER)
    T_OP_INC              [reduce using rule 107 (POINTER)]
    T_OP_DEC              reduce using rule 106 (POINTER)
    T_OP_DEC              [reduce using rule 107 (POINTER)]
    T_OP_LNOT             reduce using rule 106 (POINTER)
    T_OP_LNOT             [reduce using rule 107 (POINTER)]
    T_OP_BAND             reduce using rule 106 (POINTER)
    T_OP_BAND             [reduce using rule 107 (POINTER)]
    $default              reduce using rule 106 (POINTER)


State 119

   67 EXPR: EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   70        | EXPR . T_OP_PLUS EXPR
   71        | EXPR . T_OP_MINUS EXPR
   72        | EXPR . T_OP_MUL EXPR
   74        | EXPR . T_OP_BAND EXPR
   75        | EXPR . T_OP_BOR EXPR
   76        | EXPR . T_OP_BXOR EXPR
   77        | EXPR . T_OP_NE EXPR
   78        | EXPR . T_OP_LE EXPR
   79        | EXPR . T_OP_LT EXPR
   80        | EXPR . T_OP_LAND EXPR
   81        | EXPR . T_OP_LOR EXPR
   86 SINGLE_EXPR: POINTER EXPR .
   98 DOT: EXPR . '.' EXPR

    T_OP_PLUS   shift, and go to state 96
    T_OP_MINUS  shift, and go to state 97
    T_OP_MUL    shift, and go to state 98
    T_OP_LE     shift, and go to state 99
    T_OP_EQ     shift, and go to state 100
    T_OP_NE     shift, and go to state 101
    T_OP_LT     shift, and go to state 123
    T_OP_LAND   shift, and go to state 103
    T_OP_LOR    shift, and go to state 104
    T_OP_BAND   shift, and go to state 105
    T_OP_BOR    shift, and go to state 106
    T_OP_BXOR   shift, and go to state 107
    ','         shift, and go to state 114
    '.'         shift, and go to state 115

    $end                  reduce using rule 67 (EXPR)
    $end                  [reduce using rule 86 (SINGLE_EXPR)]
    T_DOUBLE              reduce using rule 67 (EXPR)
    T_DOUBLE              [reduce using rule 86 (SINGLE_EXPR)]
    T_INT                 reduce using rule 67 (EXPR)
    T_INT                 [reduce using rule 86 (SINGLE_EXPR)]
    T_STRUCT              reduce using rule 67 (EXPR)
    T_STRUCT              [reduce using rule 86 (SINGLE_EXPR)]
    T_BREAK               reduce using rule 67 (EXPR)
    T_BREAK               [reduce using rule 86 (SINGLE_EXPR)]
    T_SWITCH              reduce using rule 67 (EXPR)
    T_SWITCH              [reduce using rule 86 (SINGLE_EXPR)]
    T_CASE                reduce using rule 67 (EXPR)
    T_CASE                [reduce using rule 86 (SINGLE_EXPR)]
    T_ENUM                reduce using rule 67 (EXPR)
    T_ENUM                [reduce using rule 86 (SINGLE_EXPR)]
    T_TYPEDEF             reduce using rule 67 (EXPR)
    T_TYPEDEF             [reduce using rule 86 (SINGLE_EXPR)]
    T_RETURN              reduce using rule 67 (EXPR)
    T_RETURN              [reduce using rule 86 (SINGLE_EXPR)]
    T_FLOAT               reduce using rule 67 (EXPR)
    T_FLOAT               [reduce using rule 86 (SINGLE_EXPR)]
    T_FOR                 reduce using rule 67 (EXPR)
    T_FOR                 [reduce using rule 86 (SINGLE_EXPR)]
    T_SIZEOF              reduce using rule 67 (EXPR)
    T_SIZEOF              [reduce using rule 86 (SINGLE_EXPR)]
    T_IF                  reduce using rule 67 (EXPR)
    T_IF                  [reduce using rule 86 (SINGLE_EXPR)]
    T_WHILE               reduce using rule 67 (EXPR)
    T_WHILE               [reduce using rule 86 (SINGLE_EXPR)]
    T_IDENTIFIER          reduce using rule 67 (EXPR)
    T_IDENTIFIER          [reduce using rule 86 (SINGLE_EXPR)]
    T_STRING_LITERAL      reduce using rule 67 (EXPR)
    T_STRING_LITERAL      [reduce using rule 86 (SINGLE_EXPR)]
    T_INT_CONSTANT        reduce using rule 67 (EXPR)
    T_INT_CONSTANT        [reduce using rule 86 (SINGLE_EXPR)]
    T_FLOAT_CONSTANT      reduce using rule 67 (EXPR)
    T_FLOAT_CONSTANT      [reduce using rule 86 (SINGLE_EXPR)]
    T_CHARACTER_CONSTANT  reduce using rule 67 (EXPR)
    T_CHARACTER_CONSTANT  [reduce using rule 86 (SINGLE_EXPR)]
    T_L_BRACE             reduce using rule 67 (EXPR)
    T_L_BRACE             [reduce using rule 86 (SINGLE_EXPR)]
    T_R_BRACE             reduce using rule 67 (EXPR)
    T_R_BRACE             [reduce using rule 86 (SINGLE_EXPR)]
    T_L_BRACKET           reduce using rule 67 (EXPR)
    T_L_BRACKET           [reduce using rule 86 (SINGLE_EXPR)]
    T_R_BRACKET           reduce using rule 67 (EXPR)
    T_R_BRACKET           [reduce using rule 86 (SINGLE_EXPR)]
    T_R_SQUARE            reduce using rule 67 (EXPR)
    T_R_SQUARE            [reduce using rule 86 (SINGLE_EXPR)]
    T_OP_PLUS             [reduce using rule 67 (EXPR)]
    T_OP_PLUS             [reduce using rule 86 (SINGLE_EXPR)]
    T_OP_MINUS            [reduce using rule 67 (EXPR)]
    T_OP_MINUS            [reduce using rule 86 (SINGLE_EXPR)]
    T_OP_MUL              [reduce using rule 67 (EXPR)]
    T_OP_MUL              [reduce using rule 86 (SINGLE_EXPR)]
    T_OP_INC              reduce using rule 67 (EXPR)
    T_OP_INC              [reduce using rule 86 (SINGLE_EXPR)]
    T_OP_DEC              reduce using rule 67 (EXPR)
    T_OP_DEC              [reduce using rule 86 (SINGLE_EXPR)]
    T_OP_LE               [reduce using rule 67 (EXPR)]
    T_OP_LE               [reduce using rule 86 (SINGLE_EXPR)]
    T_OP_EQ               [reduce using rule 67 (EXPR)]
    T_OP_EQ               [reduce using rule 86 (SINGLE_EXPR)]
    T_OP_NE               [reduce using rule 67 (EXPR)]
    T_OP_NE               [reduce using rule 86 (SINGLE_EXPR)]
    T_OP_LT               [reduce using rule 67 (EXPR)]
    T_OP_LT               [reduce using rule 86 (SINGLE_EXPR)]
    T_OP_LAND             [reduce using rule 67 (EXPR)]
    T_OP_LAND             [reduce using rule 86 (SINGLE_EXPR)]
    T_OP_LOR              [reduce using rule 67 (EXPR)]
    T_OP_LOR              [reduce using rule 86 (SINGLE_EXPR)]
    T_OP_LNOT             reduce using rule 67 (EXPR)
    T_OP_LNOT             [reduce using rule 86 (SINGLE_EXPR)]
    T_OP_BAND             [reduce using rule 67 (EXPR)]
    T_OP_BAND             [reduce using rule 86 (SINGLE_EXPR)]
    T_OP_BOR              [reduce using rule 67 (EXPR)]
    T_OP_BOR              [reduce using rule 86 (SINGLE_EXPR)]
    T_OP_BXOR             [reduce using rule 67 (EXPR)]
    T_OP_BXOR             [reduce using rule 86 (SINGLE_EXPR)]
    T_ASSIGN              reduce using rule 67 (EXPR)
    T_ASSIGN              [reduce using rule 86 (SINGLE_EXPR)]
    T_ADD_ASSIGN          reduce using rule 67 (EXPR)
    T_ADD_ASSIGN          [reduce using rule 86 (SINGLE_EXPR)]
    T_SUB_ASSIGN          reduce using rule 67 (EXPR)
    T_SUB_ASSIGN          [reduce using rule 86 (SINGLE_EXPR)]
    T_MUL_ASSIGN          reduce using rule 67 (EXPR)
    T_MUL_ASSIGN          [reduce using rule 86 (SINGLE_EXPR)]
    T_DIV_ASSIGN          reduce using rule 67 (EXPR)
    T_DIV_ASSIGN          [reduce using rule 86 (SINGLE_EXPR)]
    T_MOD_ASSIGN          reduce using rule 67 (EXPR)
    T_MOD_ASSIGN          [reduce using rule 86 (SINGLE_EXPR)]
    ';'                   reduce using rule 67 (EXPR)
    ';'                   [reduce using rule 86 (SINGLE_EXPR)]
    ','                   [reduce using rule 67 (EXPR)]
    ','                   [reduce using rule 86 (SINGLE_EXPR)]
    ':'                   reduce using rule 67 (EXPR)
    ':'                   [reduce using rule 86 (SINGLE_EXPR)]
    '.'                   [reduce using rule 67 (EXPR)]
    '.'                   [reduce using rule 86 (SINGLE_EXPR)]
    $default              reduce using rule 67 (EXPR)


State 120

   61 STRUCT_STATEMENT: T_STRUCT T_IDENTIFIER T_L_BRACE . STATEMENT T_R_BRACE ';'

    T_DOUBLE              shift, and go to state 1
    T_INT                 shift, and go to state 2
    T_STRUCT              shift, and go to state 3
    T_BREAK               shift, and go to state 4
    T_SWITCH              shift, and go to state 5
    T_CASE                shift, and go to state 6
    T_ENUM                shift, and go to state 7
    T_TYPEDEF             shift, and go to state 8
    T_RETURN              shift, and go to state 9
    T_FLOAT               shift, and go to state 10
    T_FOR                 shift, and go to state 11
    T_SIZEOF              shift, and go to state 12
    T_IF                  shift, and go to state 13
    T_WHILE               shift, and go to state 14
    T_IDENTIFIER          shift, and go to state 15
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACE             shift, and go to state 20
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_INC              shift, and go to state 24
    T_OP_DEC              shift, and go to state 25
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    STATEMENT              go to state 173
    RETURN_STATEMENT       go to state 33
    DECLARATION_STATEMENT  go to state 34
    ARRAY_DECLARATION      go to state 35
    FUNCTION_DECLARATION   go to state 36
    REGULAR_DECLARATION    go to state 37
    STRUCT_DECLARATION     go to state 38
    ASSIGNMENT_STATEMENT   go to state 39
    ASSIGNMENT_DEFINITION  go to state 40
    COMPARE_STATEMENT      go to state 41
    IF_ELSE_STATEMENT      go to state 42
    WHILE_STATEMENT        go to state 43
    FOR_STATEMENT          go to state 44
    ENUM_STATEMENT         go to state 45
    SWITCH_STATEMENT       go to state 46
    CASE_STATEMENT         go to state 47
    BREAK_STATEMENT        go to state 48
    TYPEDEF_STATEMENT      go to state 49
    TWO_OP_STATEMENT       go to state 50
    INCREASE_STATEMENT     go to state 51
    STRUCT_STATEMENT       go to state 52
    SIZEOF_STATEMENT       go to state 53
    EXPR                   go to state 54
    OP_EXPR                go to state 55
    SINGLE_EXPR            go to state 56
    LOGIC_EXPR             go to state 57
    NUMBER                 go to state 58
    CHARACTOR              go to state 59
    INTEGER                go to state 60
    FLOAT                  go to state 61
    DOT                    go to state 62
    FUNCTION_CALL          go to state 63
    TYPE                   go to state 85
    POINTER                go to state 65


State 121

   71 OP_EXPR: EXPR T_OP_MINUS . EXPR
   92 NUMBER: T_OP_MINUS . INTEGER

    T_IDENTIFIER          shift, and go to state 71
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    EXPR           go to state 149
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 174
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 122

   72 OP_EXPR: EXPR T_OP_MUL . EXPR
  107 POINTER: T_OP_MUL .

    T_IDENTIFIER          shift, and go to state 71
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    T_IDENTIFIER          [reduce using rule 107 (POINTER)]
    T_STRING_LITERAL      [reduce using rule 107 (POINTER)]
    T_INT_CONSTANT        [reduce using rule 107 (POINTER)]
    T_FLOAT_CONSTANT      [reduce using rule 107 (POINTER)]
    T_CHARACTER_CONSTANT  [reduce using rule 107 (POINTER)]
    T_L_BRACKET           [reduce using rule 107 (POINTER)]
    T_OP_MINUS            [reduce using rule 107 (POINTER)]
    T_OP_MUL              [reduce using rule 107 (POINTER)]
    T_OP_LNOT             [reduce using rule 107 (POINTER)]
    T_OP_BAND             [reduce using rule 107 (POINTER)]

    EXPR           go to state 150
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 60
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 123

   79 OP_EXPR: EXPR T_OP_LT . EXPR

    T_IDENTIFIER          shift, and go to state 71
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    EXPR           go to state 175
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 60
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 124

   74 OP_EXPR: EXPR T_OP_BAND . EXPR
   87 SINGLE_EXPR: T_OP_BAND . EXPR

    T_IDENTIFIER          shift, and go to state 71
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    EXPR           go to state 176
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 60
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 125

   35 STRUCT_DECLARATION: T_STRUCT EXPR EXPR . ';'
   67 EXPR: EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   70        | EXPR . T_OP_PLUS EXPR
   71        | EXPR . T_OP_MINUS EXPR
   72        | EXPR . T_OP_MUL EXPR
   74        | EXPR . T_OP_BAND EXPR
   75        | EXPR . T_OP_BOR EXPR
   76        | EXPR . T_OP_BXOR EXPR
   77        | EXPR . T_OP_NE EXPR
   78        | EXPR . T_OP_LE EXPR
   79        | EXPR . T_OP_LT EXPR
   80        | EXPR . T_OP_LAND EXPR
   81        | EXPR . T_OP_LOR EXPR
   98 DOT: EXPR . '.' EXPR

    T_OP_PLUS   shift, and go to state 96
    T_OP_MINUS  shift, and go to state 97
    T_OP_MUL    shift, and go to state 98
    T_OP_LE     shift, and go to state 99
    T_OP_EQ     shift, and go to state 100
    T_OP_NE     shift, and go to state 101
    T_OP_LT     shift, and go to state 123
    T_OP_LAND   shift, and go to state 103
    T_OP_LOR    shift, and go to state 104
    T_OP_BAND   shift, and go to state 105
    T_OP_BOR    shift, and go to state 106
    T_OP_BXOR   shift, and go to state 107
    ';'         shift, and go to state 177
    ','         shift, and go to state 114
    '.'         shift, and go to state 115

    T_OP_PLUS   [reduce using rule 67 (EXPR)]
    T_OP_MINUS  [reduce using rule 67 (EXPR)]
    T_OP_MUL    [reduce using rule 67 (EXPR)]
    T_OP_LE     [reduce using rule 67 (EXPR)]
    T_OP_EQ     [reduce using rule 67 (EXPR)]
    T_OP_NE     [reduce using rule 67 (EXPR)]
    T_OP_LT     [reduce using rule 67 (EXPR)]
    T_OP_LAND   [reduce using rule 67 (EXPR)]
    T_OP_LOR    [reduce using rule 67 (EXPR)]
    T_OP_BAND   [reduce using rule 67 (EXPR)]
    T_OP_BOR    [reduce using rule 67 (EXPR)]
    T_OP_BXOR   [reduce using rule 67 (EXPR)]
    ';'         [reduce using rule 67 (EXPR)]
    ','         [reduce using rule 67 (EXPR)]
    '.'         [reduce using rule 67 (EXPR)]


State 126

   48 SWITCH_STATEMENT: T_SWITCH T_L_BRACKET EXPR . T_R_BRACKET T_L_BRACE CASE_STATEMENT T_R_BRACE
   67 EXPR: EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   70        | EXPR . T_OP_PLUS EXPR
   71        | EXPR . T_OP_MINUS EXPR
   72        | EXPR . T_OP_MUL EXPR
   74        | EXPR . T_OP_BAND EXPR
   75        | EXPR . T_OP_BOR EXPR
   76        | EXPR . T_OP_BXOR EXPR
   77        | EXPR . T_OP_NE EXPR
   78        | EXPR . T_OP_LE EXPR
   79        | EXPR . T_OP_LT EXPR
   80        | EXPR . T_OP_LAND EXPR
   81        | EXPR . T_OP_LOR EXPR
   98 DOT: EXPR . '.' EXPR

    T_R_BRACKET  shift, and go to state 178
    T_OP_PLUS    shift, and go to state 96
    T_OP_MINUS   shift, and go to state 97
    T_OP_MUL     shift, and go to state 98
    T_OP_LE      shift, and go to state 99
    T_OP_EQ      shift, and go to state 100
    T_OP_NE      shift, and go to state 101
    T_OP_LT      shift, and go to state 123
    T_OP_LAND    shift, and go to state 103
    T_OP_LOR     shift, and go to state 104
    T_OP_BAND    shift, and go to state 105
    T_OP_BOR     shift, and go to state 106
    T_OP_BXOR    shift, and go to state 107
    ','          shift, and go to state 114
    '.'          shift, and go to state 115

    T_R_BRACKET  [reduce using rule 67 (EXPR)]
    T_OP_PLUS    [reduce using rule 67 (EXPR)]
    T_OP_MINUS   [reduce using rule 67 (EXPR)]
    T_OP_MUL     [reduce using rule 67 (EXPR)]
    T_OP_LE      [reduce using rule 67 (EXPR)]
    T_OP_EQ      [reduce using rule 67 (EXPR)]
    T_OP_NE      [reduce using rule 67 (EXPR)]
    T_OP_LT      [reduce using rule 67 (EXPR)]
    T_OP_LAND    [reduce using rule 67 (EXPR)]
    T_OP_LOR     [reduce using rule 67 (EXPR)]
    T_OP_BAND    [reduce using rule 67 (EXPR)]
    T_OP_BOR     [reduce using rule 67 (EXPR)]
    T_OP_BXOR    [reduce using rule 67 (EXPR)]
    ','          [reduce using rule 67 (EXPR)]
    '.'          [reduce using rule 67 (EXPR)]


State 127

   49 CASE_STATEMENT: T_CASE EXPR ':' . T_L_BRACE STATEMENT T_R_BRACE
   50               | T_CASE EXPR ':' . STATEMENT

    T_DOUBLE              shift, and go to state 1
    T_INT                 shift, and go to state 2
    T_STRUCT              shift, and go to state 3
    T_BREAK               shift, and go to state 4
    T_SWITCH              shift, and go to state 5
    T_CASE                shift, and go to state 6
    T_ENUM                shift, and go to state 7
    T_TYPEDEF             shift, and go to state 8
    T_RETURN              shift, and go to state 9
    T_FLOAT               shift, and go to state 10
    T_FOR                 shift, and go to state 11
    T_SIZEOF              shift, and go to state 12
    T_IF                  shift, and go to state 13
    T_WHILE               shift, and go to state 14
    T_IDENTIFIER          shift, and go to state 15
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACE             shift, and go to state 179
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_INC              shift, and go to state 24
    T_OP_DEC              shift, and go to state 25
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    STATEMENT              go to state 180
    RETURN_STATEMENT       go to state 33
    DECLARATION_STATEMENT  go to state 34
    ARRAY_DECLARATION      go to state 35
    FUNCTION_DECLARATION   go to state 36
    REGULAR_DECLARATION    go to state 37
    STRUCT_DECLARATION     go to state 38
    ASSIGNMENT_STATEMENT   go to state 39
    ASSIGNMENT_DEFINITION  go to state 40
    COMPARE_STATEMENT      go to state 41
    IF_ELSE_STATEMENT      go to state 42
    WHILE_STATEMENT        go to state 43
    FOR_STATEMENT          go to state 44
    ENUM_STATEMENT         go to state 45
    SWITCH_STATEMENT       go to state 46
    CASE_STATEMENT         go to state 47
    BREAK_STATEMENT        go to state 48
    TYPEDEF_STATEMENT      go to state 49
    TWO_OP_STATEMENT       go to state 50
    INCREASE_STATEMENT     go to state 51
    STRUCT_STATEMENT       go to state 52
    SIZEOF_STATEMENT       go to state 53
    EXPR                   go to state 54
    OP_EXPR                go to state 55
    SINGLE_EXPR            go to state 56
    LOGIC_EXPR             go to state 57
    NUMBER                 go to state 58
    CHARACTOR              go to state 59
    INTEGER                go to state 60
    FLOAT                  go to state 61
    DOT                    go to state 62
    FUNCTION_CALL          go to state 63
    TYPE                   go to state 85
    POINTER                go to state 65


State 128

   47 ENUM_STATEMENT: T_ENUM T_IDENTIFIER T_L_BRACE . STATEMENT T_R_BRACE ';'

    T_DOUBLE              shift, and go to state 1
    T_INT                 shift, and go to state 2
    T_STRUCT              shift, and go to state 3
    T_BREAK               shift, and go to state 4
    T_SWITCH              shift, and go to state 5
    T_CASE                shift, and go to state 6
    T_ENUM                shift, and go to state 7
    T_TYPEDEF             shift, and go to state 8
    T_RETURN              shift, and go to state 9
    T_FLOAT               shift, and go to state 10
    T_FOR                 shift, and go to state 11
    T_SIZEOF              shift, and go to state 12
    T_IF                  shift, and go to state 13
    T_WHILE               shift, and go to state 14
    T_IDENTIFIER          shift, and go to state 15
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACE             shift, and go to state 20
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_INC              shift, and go to state 24
    T_OP_DEC              shift, and go to state 25
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    STATEMENT              go to state 181
    RETURN_STATEMENT       go to state 33
    DECLARATION_STATEMENT  go to state 34
    ARRAY_DECLARATION      go to state 35
    FUNCTION_DECLARATION   go to state 36
    REGULAR_DECLARATION    go to state 37
    STRUCT_DECLARATION     go to state 38
    ASSIGNMENT_STATEMENT   go to state 39
    ASSIGNMENT_DEFINITION  go to state 40
    COMPARE_STATEMENT      go to state 41
    IF_ELSE_STATEMENT      go to state 42
    WHILE_STATEMENT        go to state 43
    FOR_STATEMENT          go to state 44
    ENUM_STATEMENT         go to state 45
    SWITCH_STATEMENT       go to state 46
    CASE_STATEMENT         go to state 47
    BREAK_STATEMENT        go to state 48
    TYPEDEF_STATEMENT      go to state 49
    TWO_OP_STATEMENT       go to state 50
    INCREASE_STATEMENT     go to state 51
    STRUCT_STATEMENT       go to state 52
    SIZEOF_STATEMENT       go to state 53
    EXPR                   go to state 54
    OP_EXPR                go to state 55
    SINGLE_EXPR            go to state 56
    LOGIC_EXPR             go to state 57
    NUMBER                 go to state 58
    CHARACTOR              go to state 59
    INTEGER                go to state 60
    FLOAT                  go to state 61
    DOT                    go to state 62
    FUNCTION_CALL          go to state 63
    TYPE                   go to state 85
    POINTER                go to state 65


State 129

   52 TYPEDEF_STATEMENT: T_TYPEDEF TYPE TYPE .
  105 TYPE: TYPE .

    $end                  reduce using rule 52 (TYPEDEF_STATEMENT)
    $end                  [reduce using rule 105 (TYPE)]
    T_DOUBLE              reduce using rule 52 (TYPEDEF_STATEMENT)
    T_DOUBLE              [reduce using rule 105 (TYPE)]
    T_INT                 reduce using rule 52 (TYPEDEF_STATEMENT)
    T_INT                 [reduce using rule 105 (TYPE)]
    T_STRUCT              reduce using rule 52 (TYPEDEF_STATEMENT)
    T_STRUCT              [reduce using rule 105 (TYPE)]
    T_BREAK               reduce using rule 52 (TYPEDEF_STATEMENT)
    T_BREAK               [reduce using rule 105 (TYPE)]
    T_SWITCH              reduce using rule 52 (TYPEDEF_STATEMENT)
    T_SWITCH              [reduce using rule 105 (TYPE)]
    T_CASE                reduce using rule 52 (TYPEDEF_STATEMENT)
    T_CASE                [reduce using rule 105 (TYPE)]
    T_ENUM                reduce using rule 52 (TYPEDEF_STATEMENT)
    T_ENUM                [reduce using rule 105 (TYPE)]
    T_TYPEDEF             reduce using rule 52 (TYPEDEF_STATEMENT)
    T_TYPEDEF             [reduce using rule 105 (TYPE)]
    T_RETURN              reduce using rule 52 (TYPEDEF_STATEMENT)
    T_RETURN              [reduce using rule 105 (TYPE)]
    T_FLOAT               reduce using rule 52 (TYPEDEF_STATEMENT)
    T_FLOAT               [reduce using rule 105 (TYPE)]
    T_FOR                 reduce using rule 52 (TYPEDEF_STATEMENT)
    T_FOR                 [reduce using rule 105 (TYPE)]
    T_SIZEOF              reduce using rule 52 (TYPEDEF_STATEMENT)
    T_SIZEOF              [reduce using rule 105 (TYPE)]
    T_IF                  reduce using rule 52 (TYPEDEF_STATEMENT)
    T_IF                  [reduce using rule 105 (TYPE)]
    T_WHILE               reduce using rule 52 (TYPEDEF_STATEMENT)
    T_WHILE               [reduce using rule 105 (TYPE)]
    T_IDENTIFIER          reduce using rule 52 (TYPEDEF_STATEMENT)
    T_IDENTIFIER          [reduce using rule 105 (TYPE)]
    T_STRING_LITERAL      reduce using rule 52 (TYPEDEF_STATEMENT)
    T_STRING_LITERAL      [reduce using rule 105 (TYPE)]
    T_INT_CONSTANT        reduce using rule 52 (TYPEDEF_STATEMENT)
    T_INT_CONSTANT        [reduce using rule 105 (TYPE)]
    T_FLOAT_CONSTANT      reduce using rule 52 (TYPEDEF_STATEMENT)
    T_FLOAT_CONSTANT      [reduce using rule 105 (TYPE)]
    T_CHARACTER_CONSTANT  reduce using rule 52 (TYPEDEF_STATEMENT)
    T_CHARACTER_CONSTANT  [reduce using rule 105 (TYPE)]
    T_L_BRACE             reduce using rule 52 (TYPEDEF_STATEMENT)
    T_L_BRACE             [reduce using rule 105 (TYPE)]
    T_R_BRACE             reduce using rule 52 (TYPEDEF_STATEMENT)
    T_R_BRACE             [reduce using rule 105 (TYPE)]
    T_L_BRACKET           reduce using rule 52 (TYPEDEF_STATEMENT)
    T_L_BRACKET           [reduce using rule 105 (TYPE)]
    T_R_BRACKET           reduce using rule 52 (TYPEDEF_STATEMENT)
    T_R_BRACKET           [reduce using rule 105 (TYPE)]
    T_OP_MINUS            reduce using rule 52 (TYPEDEF_STATEMENT)
    T_OP_MINUS            [reduce using rule 105 (TYPE)]
    T_OP_MUL              reduce using rule 52 (TYPEDEF_STATEMENT)
    T_OP_MUL              [reduce using rule 105 (TYPE)]
    T_OP_INC              reduce using rule 52 (TYPEDEF_STATEMENT)
    T_OP_INC              [reduce using rule 105 (TYPE)]
    T_OP_DEC              reduce using rule 52 (TYPEDEF_STATEMENT)
    T_OP_DEC              [reduce using rule 105 (TYPE)]
    T_OP_LNOT             reduce using rule 52 (TYPEDEF_STATEMENT)
    T_OP_LNOT             [reduce using rule 105 (TYPE)]
    T_OP_BAND             reduce using rule 52 (TYPEDEF_STATEMENT)
    T_OP_BAND             [reduce using rule 105 (TYPE)]
    $default              reduce using rule 52 (TYPEDEF_STATEMENT)


State 130

   53 TYPEDEF_STATEMENT: T_TYPEDEF TYPE POINTER . TYPE
  104 TYPE: POINTER .
  106 POINTER: POINTER . T_OP_MUL

    T_DOUBLE      shift, and go to state 1
    T_INT         shift, and go to state 2
    T_FLOAT       shift, and go to state 10
    T_IDENTIFIER  shift, and go to state 74
    T_OP_MUL      shift, and go to state 118

    T_DOUBLE      [reduce using rule 104 (TYPE)]
    T_INT         [reduce using rule 104 (TYPE)]
    T_FLOAT       [reduce using rule 104 (TYPE)]
    T_IDENTIFIER  [reduce using rule 104 (TYPE)]
    T_OP_MUL      [reduce using rule 104 (TYPE)]
    $default      reduce using rule 104 (TYPE)

    TYPE     go to state 182
    POINTER  go to state 76


State 131

  106 POINTER: POINTER T_OP_MUL .

    $default  reduce using rule 106 (POINTER)


State 132

   25 RETURN_STATEMENT: T_RETURN EXPR ';' .

    $default  reduce using rule 25 (RETURN_STATEMENT)


State 133

  116 FOR_LIST: T_ENDLESS_LOOP .

    $default  reduce using rule 116 (FOR_LIST)


State 134

    7 STATEMENT: STATEMENT .
  111 ARG_LIST: STATEMENT .
  115 FOR_LIST: STATEMENT .

    T_DOUBLE              reduce using rule 7 (STATEMENT)
    T_DOUBLE              [reduce using rule 111 (ARG_LIST)]
    T_DOUBLE              [reduce using rule 115 (FOR_LIST)]
    T_INT                 reduce using rule 7 (STATEMENT)
    T_INT                 [reduce using rule 111 (ARG_LIST)]
    T_INT                 [reduce using rule 115 (FOR_LIST)]
    T_STRUCT              reduce using rule 7 (STATEMENT)
    T_STRUCT              [reduce using rule 111 (ARG_LIST)]
    T_STRUCT              [reduce using rule 115 (FOR_LIST)]
    T_BREAK               reduce using rule 7 (STATEMENT)
    T_BREAK               [reduce using rule 111 (ARG_LIST)]
    T_BREAK               [reduce using rule 115 (FOR_LIST)]
    T_SWITCH              reduce using rule 7 (STATEMENT)
    T_SWITCH              [reduce using rule 111 (ARG_LIST)]
    T_SWITCH              [reduce using rule 115 (FOR_LIST)]
    T_CASE                reduce using rule 7 (STATEMENT)
    T_CASE                [reduce using rule 111 (ARG_LIST)]
    T_CASE                [reduce using rule 115 (FOR_LIST)]
    T_ENUM                reduce using rule 7 (STATEMENT)
    T_ENUM                [reduce using rule 111 (ARG_LIST)]
    T_ENUM                [reduce using rule 115 (FOR_LIST)]
    T_TYPEDEF             reduce using rule 7 (STATEMENT)
    T_TYPEDEF             [reduce using rule 111 (ARG_LIST)]
    T_TYPEDEF             [reduce using rule 115 (FOR_LIST)]
    T_RETURN              reduce using rule 7 (STATEMENT)
    T_RETURN              [reduce using rule 111 (ARG_LIST)]
    T_RETURN              [reduce using rule 115 (FOR_LIST)]
    T_FLOAT               reduce using rule 7 (STATEMENT)
    T_FLOAT               [reduce using rule 111 (ARG_LIST)]
    T_FLOAT               [reduce using rule 115 (FOR_LIST)]
    T_FOR                 reduce using rule 7 (STATEMENT)
    T_FOR                 [reduce using rule 111 (ARG_LIST)]
    T_FOR                 [reduce using rule 115 (FOR_LIST)]
    T_SIZEOF              reduce using rule 7 (STATEMENT)
    T_SIZEOF              [reduce using rule 111 (ARG_LIST)]
    T_SIZEOF              [reduce using rule 115 (FOR_LIST)]
    T_IF                  reduce using rule 7 (STATEMENT)
    T_IF                  [reduce using rule 111 (ARG_LIST)]
    T_IF                  [reduce using rule 115 (FOR_LIST)]
    T_WHILE               reduce using rule 7 (STATEMENT)
    T_WHILE               [reduce using rule 111 (ARG_LIST)]
    T_WHILE               [reduce using rule 115 (FOR_LIST)]
    T_IDENTIFIER          reduce using rule 7 (STATEMENT)
    T_IDENTIFIER          [reduce using rule 111 (ARG_LIST)]
    T_IDENTIFIER          [reduce using rule 115 (FOR_LIST)]
    T_STRING_LITERAL      reduce using rule 7 (STATEMENT)
    T_STRING_LITERAL      [reduce using rule 111 (ARG_LIST)]
    T_STRING_LITERAL      [reduce using rule 115 (FOR_LIST)]
    T_INT_CONSTANT        reduce using rule 7 (STATEMENT)
    T_INT_CONSTANT        [reduce using rule 111 (ARG_LIST)]
    T_INT_CONSTANT        [reduce using rule 115 (FOR_LIST)]
    T_FLOAT_CONSTANT      reduce using rule 7 (STATEMENT)
    T_FLOAT_CONSTANT      [reduce using rule 111 (ARG_LIST)]
    T_FLOAT_CONSTANT      [reduce using rule 115 (FOR_LIST)]
    T_CHARACTER_CONSTANT  reduce using rule 7 (STATEMENT)
    T_CHARACTER_CONSTANT  [reduce using rule 111 (ARG_LIST)]
    T_CHARACTER_CONSTANT  [reduce using rule 115 (FOR_LIST)]
    T_L_BRACE             reduce using rule 7 (STATEMENT)
    T_L_BRACE             [reduce using rule 111 (ARG_LIST)]
    T_L_BRACE             [reduce using rule 115 (FOR_LIST)]
    T_R_BRACE             reduce using rule 7 (STATEMENT)
    T_R_BRACE             [reduce using rule 111 (ARG_LIST)]
    T_R_BRACE             [reduce using rule 115 (FOR_LIST)]
    T_L_BRACKET           reduce using rule 7 (STATEMENT)
    T_L_BRACKET           [reduce using rule 111 (ARG_LIST)]
    T_L_BRACKET           [reduce using rule 115 (FOR_LIST)]
    T_R_BRACKET           reduce using rule 7 (STATEMENT)
    T_R_BRACKET           [reduce using rule 111 (ARG_LIST)]
    T_R_BRACKET           [reduce using rule 115 (FOR_LIST)]
    T_OP_MINUS            reduce using rule 7 (STATEMENT)
    T_OP_MINUS            [reduce using rule 111 (ARG_LIST)]
    T_OP_MINUS            [reduce using rule 115 (FOR_LIST)]
    T_OP_MUL              reduce using rule 7 (STATEMENT)
    T_OP_MUL              [reduce using rule 111 (ARG_LIST)]
    T_OP_MUL              [reduce using rule 115 (FOR_LIST)]
    T_OP_INC              reduce using rule 7 (STATEMENT)
    T_OP_INC              [reduce using rule 111 (ARG_LIST)]
    T_OP_INC              [reduce using rule 115 (FOR_LIST)]
    T_OP_DEC              reduce using rule 7 (STATEMENT)
    T_OP_DEC              [reduce using rule 111 (ARG_LIST)]
    T_OP_DEC              [reduce using rule 115 (FOR_LIST)]
    T_OP_LNOT             reduce using rule 7 (STATEMENT)
    T_OP_LNOT             [reduce using rule 111 (ARG_LIST)]
    T_OP_LNOT             [reduce using rule 115 (FOR_LIST)]
    T_OP_BAND             reduce using rule 7 (STATEMENT)
    T_OP_BAND             [reduce using rule 111 (ARG_LIST)]
    T_OP_BAND             [reduce using rule 115 (FOR_LIST)]
    $default              reduce using rule 7 (STATEMENT)


State 135

   36 ASSIGNMENT_STATEMENT: EXPR . T_ASSIGN EXPR ';'
   37                     | EXPR . T_ASSIGN EXPR ','
   38                     | EXPR . T_ASSIGN EXPR
   42 COMPARE_STATEMENT: EXPR . T_OP_LT EXPR ';'
   54 TWO_OP_STATEMENT: EXPR . T_ADD_ASSIGN EXPR ';'
   55                 | EXPR . T_MOD_ASSIGN EXPR ';'
   56                 | EXPR . T_MUL_ASSIGN EXPR ';'
   57                 | EXPR . T_SUB_ASSIGN EXPR ';'
   58                 | EXPR . T_DIV_ASSIGN EXPR ';'
   67 EXPR: EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   70        | EXPR . T_OP_PLUS EXPR
   71        | EXPR . T_OP_MINUS EXPR
   72        | EXPR . T_OP_MUL EXPR
   74        | EXPR . T_OP_BAND EXPR
   75        | EXPR . T_OP_BOR EXPR
   76        | EXPR . T_OP_BXOR EXPR
   77        | EXPR . T_OP_NE EXPR
   78        | EXPR . T_OP_LE EXPR
   79        | EXPR . T_OP_LT EXPR
   80        | EXPR . T_OP_LAND EXPR
   81        | EXPR . T_OP_LOR EXPR
   98 DOT: EXPR . '.' EXPR
  113 ARG_LIST: EXPR .

    T_OP_PLUS     shift, and go to state 96
    T_OP_MINUS    shift, and go to state 97
    T_OP_MUL      shift, and go to state 98
    T_OP_LE       shift, and go to state 99
    T_OP_EQ       shift, and go to state 100
    T_OP_NE       shift, and go to state 101
    T_OP_LT       shift, and go to state 102
    T_OP_LAND     shift, and go to state 103
    T_OP_LOR      shift, and go to state 104
    T_OP_BAND     shift, and go to state 105
    T_OP_BOR      shift, and go to state 106
    T_OP_BXOR     shift, and go to state 107
    T_ASSIGN      shift, and go to state 108
    T_ADD_ASSIGN  shift, and go to state 109
    T_SUB_ASSIGN  shift, and go to state 110
    T_MUL_ASSIGN  shift, and go to state 111
    T_DIV_ASSIGN  shift, and go to state 112
    T_MOD_ASSIGN  shift, and go to state 113
    ','           shift, and go to state 114
    '.'           shift, and go to state 115

    T_DOUBLE              reduce using rule 67 (EXPR)
    T_DOUBLE              [reduce using rule 113 (ARG_LIST)]
    T_INT                 reduce using rule 67 (EXPR)
    T_INT                 [reduce using rule 113 (ARG_LIST)]
    T_STRUCT              reduce using rule 67 (EXPR)
    T_STRUCT              [reduce using rule 113 (ARG_LIST)]
    T_BREAK               reduce using rule 67 (EXPR)
    T_BREAK               [reduce using rule 113 (ARG_LIST)]
    T_SWITCH              reduce using rule 67 (EXPR)
    T_SWITCH              [reduce using rule 113 (ARG_LIST)]
    T_CASE                reduce using rule 67 (EXPR)
    T_CASE                [reduce using rule 113 (ARG_LIST)]
    T_ENUM                reduce using rule 67 (EXPR)
    T_ENUM                [reduce using rule 113 (ARG_LIST)]
    T_TYPEDEF             reduce using rule 67 (EXPR)
    T_TYPEDEF             [reduce using rule 113 (ARG_LIST)]
    T_RETURN              reduce using rule 67 (EXPR)
    T_RETURN              [reduce using rule 113 (ARG_LIST)]
    T_FLOAT               reduce using rule 67 (EXPR)
    T_FLOAT               [reduce using rule 113 (ARG_LIST)]
    T_FOR                 reduce using rule 67 (EXPR)
    T_FOR                 [reduce using rule 113 (ARG_LIST)]
    T_SIZEOF              reduce using rule 67 (EXPR)
    T_SIZEOF              [reduce using rule 113 (ARG_LIST)]
    T_IF                  reduce using rule 67 (EXPR)
    T_IF                  [reduce using rule 113 (ARG_LIST)]
    T_WHILE               reduce using rule 67 (EXPR)
    T_WHILE               [reduce using rule 113 (ARG_LIST)]
    T_IDENTIFIER          reduce using rule 67 (EXPR)
    T_IDENTIFIER          [reduce using rule 113 (ARG_LIST)]
    T_STRING_LITERAL      reduce using rule 67 (EXPR)
    T_STRING_LITERAL      [reduce using rule 113 (ARG_LIST)]
    T_INT_CONSTANT        reduce using rule 67 (EXPR)
    T_INT_CONSTANT        [reduce using rule 113 (ARG_LIST)]
    T_FLOAT_CONSTANT      reduce using rule 67 (EXPR)
    T_FLOAT_CONSTANT      [reduce using rule 113 (ARG_LIST)]
    T_CHARACTER_CONSTANT  reduce using rule 67 (EXPR)
    T_CHARACTER_CONSTANT  [reduce using rule 113 (ARG_LIST)]
    T_L_BRACE             reduce using rule 67 (EXPR)
    T_L_BRACE             [reduce using rule 113 (ARG_LIST)]
    T_R_BRACE             reduce using rule 67 (EXPR)
    T_R_BRACE             [reduce using rule 113 (ARG_LIST)]
    T_L_BRACKET           reduce using rule 67 (EXPR)
    T_L_BRACKET           [reduce using rule 113 (ARG_LIST)]
    T_R_BRACKET           reduce using rule 67 (EXPR)
    T_R_BRACKET           [reduce using rule 113 (ARG_LIST)]
    T_OP_PLUS             [reduce using rule 67 (EXPR)]
    T_OP_MINUS            [reduce using rule 67 (EXPR)]
    T_OP_MINUS            [reduce using rule 113 (ARG_LIST)]
    T_OP_MUL              [reduce using rule 67 (EXPR)]
    T_OP_MUL              [reduce using rule 113 (ARG_LIST)]
    T_OP_INC              reduce using rule 67 (EXPR)
    T_OP_INC              [reduce using rule 113 (ARG_LIST)]
    T_OP_DEC              reduce using rule 67 (EXPR)
    T_OP_DEC              [reduce using rule 113 (ARG_LIST)]
    T_OP_LE               [reduce using rule 67 (EXPR)]
    T_OP_EQ               [reduce using rule 67 (EXPR)]
    T_OP_NE               [reduce using rule 67 (EXPR)]
    T_OP_LT               [reduce using rule 67 (EXPR)]
    T_OP_LAND             [reduce using rule 67 (EXPR)]
    T_OP_LOR              [reduce using rule 67 (EXPR)]
    T_OP_LNOT             reduce using rule 67 (EXPR)
    T_OP_LNOT             [reduce using rule 113 (ARG_LIST)]
    T_OP_BAND             [reduce using rule 67 (EXPR)]
    T_OP_BAND             [reduce using rule 113 (ARG_LIST)]
    T_OP_BOR              [reduce using rule 67 (EXPR)]
    T_OP_BXOR             [reduce using rule 67 (EXPR)]
    T_ASSIGN              [reduce using rule 67 (EXPR)]
    T_ADD_ASSIGN          [reduce using rule 67 (EXPR)]
    T_SUB_ASSIGN          [reduce using rule 67 (EXPR)]
    T_MUL_ASSIGN          [reduce using rule 67 (EXPR)]
    T_DIV_ASSIGN          [reduce using rule 67 (EXPR)]
    T_MOD_ASSIGN          [reduce using rule 67 (EXPR)]
    ','                   [reduce using rule 67 (EXPR)]
    '.'                   [reduce using rule 67 (EXPR)]
    $default              reduce using rule 67 (EXPR)


State 136

   46 FOR_STATEMENT: T_FOR T_L_BRACE LIST . T_R_BRACE T_L_BRACKET STATEMENT T_R_BRACKET

    T_R_BRACE  shift, and go to state 183


State 137

  108 LIST: ARG_LIST .
  110 ARG_LIST: ARG_LIST . STATEMENT
  112         | ARG_LIST . EXPR

    T_DOUBLE              shift, and go to state 1
    T_INT                 shift, and go to state 2
    T_STRUCT              shift, and go to state 3
    T_BREAK               shift, and go to state 4
    T_SWITCH              shift, and go to state 5
    T_CASE                shift, and go to state 6
    T_ENUM                shift, and go to state 7
    T_TYPEDEF             shift, and go to state 8
    T_RETURN              shift, and go to state 9
    T_FLOAT               shift, and go to state 10
    T_FOR                 shift, and go to state 11
    T_SIZEOF              shift, and go to state 12
    T_IF                  shift, and go to state 13
    T_WHILE               shift, and go to state 14
    T_IDENTIFIER          shift, and go to state 15
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACE             shift, and go to state 20
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_INC              shift, and go to state 24
    T_OP_DEC              shift, and go to state 25
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    $default  reduce using rule 108 (LIST)

    STATEMENT              go to state 184
    RETURN_STATEMENT       go to state 33
    DECLARATION_STATEMENT  go to state 34
    ARRAY_DECLARATION      go to state 35
    FUNCTION_DECLARATION   go to state 36
    REGULAR_DECLARATION    go to state 37
    STRUCT_DECLARATION     go to state 38
    ASSIGNMENT_STATEMENT   go to state 39
    ASSIGNMENT_DEFINITION  go to state 40
    COMPARE_STATEMENT      go to state 41
    IF_ELSE_STATEMENT      go to state 42
    WHILE_STATEMENT        go to state 43
    FOR_STATEMENT          go to state 44
    ENUM_STATEMENT         go to state 45
    SWITCH_STATEMENT       go to state 46
    CASE_STATEMENT         go to state 47
    BREAK_STATEMENT        go to state 48
    TYPEDEF_STATEMENT      go to state 49
    TWO_OP_STATEMENT       go to state 50
    INCREASE_STATEMENT     go to state 51
    STRUCT_STATEMENT       go to state 52
    SIZEOF_STATEMENT       go to state 53
    EXPR                   go to state 185
    OP_EXPR                go to state 55
    SINGLE_EXPR            go to state 56
    LOGIC_EXPR             go to state 57
    NUMBER                 go to state 58
    CHARACTOR              go to state 59
    INTEGER                go to state 60
    FLOAT                  go to state 61
    DOT                    go to state 62
    FUNCTION_CALL          go to state 63
    TYPE                   go to state 85
    POINTER                go to state 65


State 138

  109 LIST: FOR_LIST .
  114 FOR_LIST: FOR_LIST . STATEMENT

    T_DOUBLE              shift, and go to state 1
    T_INT                 shift, and go to state 2
    T_STRUCT              shift, and go to state 3
    T_BREAK               shift, and go to state 4
    T_SWITCH              shift, and go to state 5
    T_CASE                shift, and go to state 6
    T_ENUM                shift, and go to state 7
    T_TYPEDEF             shift, and go to state 8
    T_RETURN              shift, and go to state 9
    T_FLOAT               shift, and go to state 10
    T_FOR                 shift, and go to state 11
    T_SIZEOF              shift, and go to state 12
    T_IF                  shift, and go to state 13
    T_WHILE               shift, and go to state 14
    T_IDENTIFIER          shift, and go to state 15
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACE             shift, and go to state 20
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_INC              shift, and go to state 24
    T_OP_DEC              shift, and go to state 25
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    $default  reduce using rule 109 (LIST)

    STATEMENT              go to state 186
    RETURN_STATEMENT       go to state 33
    DECLARATION_STATEMENT  go to state 34
    ARRAY_DECLARATION      go to state 35
    FUNCTION_DECLARATION   go to state 36
    REGULAR_DECLARATION    go to state 37
    STRUCT_DECLARATION     go to state 38
    ASSIGNMENT_STATEMENT   go to state 39
    ASSIGNMENT_DEFINITION  go to state 40
    COMPARE_STATEMENT      go to state 41
    IF_ELSE_STATEMENT      go to state 42
    WHILE_STATEMENT        go to state 43
    FOR_STATEMENT          go to state 44
    ENUM_STATEMENT         go to state 45
    SWITCH_STATEMENT       go to state 46
    CASE_STATEMENT         go to state 47
    BREAK_STATEMENT        go to state 48
    TYPEDEF_STATEMENT      go to state 49
    TWO_OP_STATEMENT       go to state 50
    INCREASE_STATEMENT     go to state 51
    STRUCT_STATEMENT       go to state 52
    SIZEOF_STATEMENT       go to state 53
    EXPR                   go to state 54
    OP_EXPR                go to state 55
    SINGLE_EXPR            go to state 56
    LOGIC_EXPR             go to state 57
    NUMBER                 go to state 58
    CHARACTOR              go to state 59
    INTEGER                go to state 60
    FLOAT                  go to state 61
    DOT                    go to state 62
    FUNCTION_CALL          go to state 63
    TYPE                   go to state 85
    POINTER                go to state 65


State 139

   62 SIZEOF_STATEMENT: T_SIZEOF T_L_BRACKET EXPR . T_R_BRACKET ';'
   67 EXPR: EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   70        | EXPR . T_OP_PLUS EXPR
   71        | EXPR . T_OP_MINUS EXPR
   72        | EXPR . T_OP_MUL EXPR
   74        | EXPR . T_OP_BAND EXPR
   75        | EXPR . T_OP_BOR EXPR
   76        | EXPR . T_OP_BXOR EXPR
   77        | EXPR . T_OP_NE EXPR
   78        | EXPR . T_OP_LE EXPR
   79        | EXPR . T_OP_LT EXPR
   80        | EXPR . T_OP_LAND EXPR
   81        | EXPR . T_OP_LOR EXPR
   98 DOT: EXPR . '.' EXPR

    T_R_BRACKET  shift, and go to state 187
    T_OP_PLUS    shift, and go to state 96
    T_OP_MINUS   shift, and go to state 97
    T_OP_MUL     shift, and go to state 98
    T_OP_LE      shift, and go to state 99
    T_OP_EQ      shift, and go to state 100
    T_OP_NE      shift, and go to state 101
    T_OP_LT      shift, and go to state 123
    T_OP_LAND    shift, and go to state 103
    T_OP_LOR     shift, and go to state 104
    T_OP_BAND    shift, and go to state 105
    T_OP_BOR     shift, and go to state 106
    T_OP_BXOR    shift, and go to state 107
    ','          shift, and go to state 114
    '.'          shift, and go to state 115

    T_R_BRACKET  [reduce using rule 67 (EXPR)]
    T_OP_PLUS    [reduce using rule 67 (EXPR)]
    T_OP_MINUS   [reduce using rule 67 (EXPR)]
    T_OP_MUL     [reduce using rule 67 (EXPR)]
    T_OP_LE      [reduce using rule 67 (EXPR)]
    T_OP_EQ      [reduce using rule 67 (EXPR)]
    T_OP_NE      [reduce using rule 67 (EXPR)]
    T_OP_LT      [reduce using rule 67 (EXPR)]
    T_OP_LAND    [reduce using rule 67 (EXPR)]
    T_OP_LOR     [reduce using rule 67 (EXPR)]
    T_OP_BAND    [reduce using rule 67 (EXPR)]
    T_OP_BOR     [reduce using rule 67 (EXPR)]
    T_OP_BXOR    [reduce using rule 67 (EXPR)]
    ','          [reduce using rule 67 (EXPR)]
    '.'          [reduce using rule 67 (EXPR)]


State 140

   43 IF_ELSE_STATEMENT: T_IF T_L_BRACKET EXPR . T_R_BRACKET T_L_BRACE STATEMENT T_R_BRACE T_ELSE T_L_BRACE STATEMENT T_R_BRACE
   44                  | T_IF T_L_BRACKET EXPR . T_R_BRACKET T_L_BRACE STATEMENT T_R_BRACE
   67 EXPR: EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   70        | EXPR . T_OP_PLUS EXPR
   71        | EXPR . T_OP_MINUS EXPR
   72        | EXPR . T_OP_MUL EXPR
   74        | EXPR . T_OP_BAND EXPR
   75        | EXPR . T_OP_BOR EXPR
   76        | EXPR . T_OP_BXOR EXPR
   77        | EXPR . T_OP_NE EXPR
   78        | EXPR . T_OP_LE EXPR
   79        | EXPR . T_OP_LT EXPR
   80        | EXPR . T_OP_LAND EXPR
   81        | EXPR . T_OP_LOR EXPR
   98 DOT: EXPR . '.' EXPR

    T_R_BRACKET  shift, and go to state 188
    T_OP_PLUS    shift, and go to state 96
    T_OP_MINUS   shift, and go to state 97
    T_OP_MUL     shift, and go to state 98
    T_OP_LE      shift, and go to state 99
    T_OP_EQ      shift, and go to state 100
    T_OP_NE      shift, and go to state 101
    T_OP_LT      shift, and go to state 123
    T_OP_LAND    shift, and go to state 103
    T_OP_LOR     shift, and go to state 104
    T_OP_BAND    shift, and go to state 105
    T_OP_BOR     shift, and go to state 106
    T_OP_BXOR    shift, and go to state 107
    ','          shift, and go to state 114
    '.'          shift, and go to state 115

    T_R_BRACKET  [reduce using rule 67 (EXPR)]
    T_OP_PLUS    [reduce using rule 67 (EXPR)]
    T_OP_MINUS   [reduce using rule 67 (EXPR)]
    T_OP_MUL     [reduce using rule 67 (EXPR)]
    T_OP_LE      [reduce using rule 67 (EXPR)]
    T_OP_EQ      [reduce using rule 67 (EXPR)]
    T_OP_NE      [reduce using rule 67 (EXPR)]
    T_OP_LT      [reduce using rule 67 (EXPR)]
    T_OP_LAND    [reduce using rule 67 (EXPR)]
    T_OP_LOR     [reduce using rule 67 (EXPR)]
    T_OP_BAND    [reduce using rule 67 (EXPR)]
    T_OP_BOR     [reduce using rule 67 (EXPR)]
    T_OP_BXOR    [reduce using rule 67 (EXPR)]
    ','          [reduce using rule 67 (EXPR)]
    '.'          [reduce using rule 67 (EXPR)]


State 141

   45 WHILE_STATEMENT: T_WHILE T_L_BRACKET EXPR . T_R_BRACKET T_L_BRACE STATEMENT T_R_BRACE
   67 EXPR: EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   70        | EXPR . T_OP_PLUS EXPR
   71        | EXPR . T_OP_MINUS EXPR
   72        | EXPR . T_OP_MUL EXPR
   74        | EXPR . T_OP_BAND EXPR
   75        | EXPR . T_OP_BOR EXPR
   76        | EXPR . T_OP_BXOR EXPR
   77        | EXPR . T_OP_NE EXPR
   78        | EXPR . T_OP_LE EXPR
   79        | EXPR . T_OP_LT EXPR
   80        | EXPR . T_OP_LAND EXPR
   81        | EXPR . T_OP_LOR EXPR
   98 DOT: EXPR . '.' EXPR

    T_R_BRACKET  shift, and go to state 189
    T_OP_PLUS    shift, and go to state 96
    T_OP_MINUS   shift, and go to state 97
    T_OP_MUL     shift, and go to state 98
    T_OP_LE      shift, and go to state 99
    T_OP_EQ      shift, and go to state 100
    T_OP_NE      shift, and go to state 101
    T_OP_LT      shift, and go to state 123
    T_OP_LAND    shift, and go to state 103
    T_OP_LOR     shift, and go to state 104
    T_OP_BAND    shift, and go to state 105
    T_OP_BOR     shift, and go to state 106
    T_OP_BXOR    shift, and go to state 107
    ','          shift, and go to state 114
    '.'          shift, and go to state 115

    T_R_BRACKET  [reduce using rule 67 (EXPR)]
    T_OP_PLUS    [reduce using rule 67 (EXPR)]
    T_OP_MINUS   [reduce using rule 67 (EXPR)]
    T_OP_MUL     [reduce using rule 67 (EXPR)]
    T_OP_LE      [reduce using rule 67 (EXPR)]
    T_OP_EQ      [reduce using rule 67 (EXPR)]
    T_OP_NE      [reduce using rule 67 (EXPR)]
    T_OP_LT      [reduce using rule 67 (EXPR)]
    T_OP_LAND    [reduce using rule 67 (EXPR)]
    T_OP_LOR     [reduce using rule 67 (EXPR)]
    T_OP_BAND    [reduce using rule 67 (EXPR)]
    T_OP_BOR     [reduce using rule 67 (EXPR)]
    T_OP_BXOR    [reduce using rule 67 (EXPR)]
    ','          [reduce using rule 67 (EXPR)]
    '.'          [reduce using rule 67 (EXPR)]


State 142

   99 FUNCTION_CALL: T_IDENTIFIER T_L_BRACKET LIST . T_R_BRACKET

    T_R_BRACKET  shift, and go to state 190


State 143

   67 EXPR: EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   70        | EXPR . T_OP_PLUS EXPR
   71        | EXPR . T_OP_MINUS EXPR
   72        | EXPR . T_OP_MUL EXPR
   74        | EXPR . T_OP_BAND EXPR
   75        | EXPR . T_OP_BOR EXPR
   76        | EXPR . T_OP_BXOR EXPR
   77        | EXPR . T_OP_NE EXPR
   78        | EXPR . T_OP_LE EXPR
   79        | EXPR . T_OP_LT EXPR
   80        | EXPR . T_OP_LAND EXPR
   81        | EXPR . T_OP_LOR EXPR
   84 SINGLE_EXPR: T_IDENTIFIER T_L_SQUARE EXPR . T_R_SQUARE
   98 DOT: EXPR . '.' EXPR

    T_R_SQUARE  shift, and go to state 191
    T_OP_PLUS   shift, and go to state 96
    T_OP_MINUS  shift, and go to state 97
    T_OP_MUL    shift, and go to state 98
    T_OP_LE     shift, and go to state 99
    T_OP_EQ     shift, and go to state 100
    T_OP_NE     shift, and go to state 101
    T_OP_LT     shift, and go to state 123
    T_OP_LAND   shift, and go to state 103
    T_OP_LOR    shift, and go to state 104
    T_OP_BAND   shift, and go to state 105
    T_OP_BOR    shift, and go to state 106
    T_OP_BXOR   shift, and go to state 107
    ','         shift, and go to state 114
    '.'         shift, and go to state 115

    T_R_SQUARE  [reduce using rule 67 (EXPR)]
    T_OP_PLUS   [reduce using rule 67 (EXPR)]
    T_OP_MINUS  [reduce using rule 67 (EXPR)]
    T_OP_MUL    [reduce using rule 67 (EXPR)]
    T_OP_LE     [reduce using rule 67 (EXPR)]
    T_OP_EQ     [reduce using rule 67 (EXPR)]
    T_OP_NE     [reduce using rule 67 (EXPR)]
    T_OP_LT     [reduce using rule 67 (EXPR)]
    T_OP_LAND   [reduce using rule 67 (EXPR)]
    T_OP_LOR    [reduce using rule 67 (EXPR)]
    T_OP_BAND   [reduce using rule 67 (EXPR)]
    T_OP_BOR    [reduce using rule 67 (EXPR)]
    T_OP_BXOR   [reduce using rule 67 (EXPR)]
    ','         [reduce using rule 67 (EXPR)]
    '.'         [reduce using rule 67 (EXPR)]


State 144

   15 STATEMENT: T_L_BRACE STATEMENT T_R_BRACE .

    $default  reduce using rule 15 (STATEMENT)


State 145

   31 FUNCTION_DECLARATION: TYPE FUNCTION_CALL . ';'

    ';'  shift, and go to state 172


State 146

   66 EXPR: T_L_BRACKET EXPR T_R_BRACKET .

    $default  reduce using rule 66 (EXPR)


State 147

   41 ASSIGNMENT_DEFINITION: TYPE T_IDENTIFIER . T_ASSIGN EXPR

    T_ASSIGN  shift, and go to state 168


State 148

   67 EXPR: EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   70        | EXPR . T_OP_PLUS EXPR
   70        | EXPR T_OP_PLUS EXPR .
   71        | EXPR . T_OP_MINUS EXPR
   72        | EXPR . T_OP_MUL EXPR
   74        | EXPR . T_OP_BAND EXPR
   75        | EXPR . T_OP_BOR EXPR
   76        | EXPR . T_OP_BXOR EXPR
   77        | EXPR . T_OP_NE EXPR
   78        | EXPR . T_OP_LE EXPR
   79        | EXPR . T_OP_LT EXPR
   80        | EXPR . T_OP_LAND EXPR
   81        | EXPR . T_OP_LOR EXPR
   98 DOT: EXPR . '.' EXPR

    T_OP_PLUS   shift, and go to state 96
    T_OP_MINUS  shift, and go to state 97
    T_OP_MUL    shift, and go to state 98
    T_OP_LE     shift, and go to state 99
    T_OP_EQ     shift, and go to state 100
    T_OP_NE     shift, and go to state 101
    T_OP_LT     shift, and go to state 123
    T_OP_LAND   shift, and go to state 103
    T_OP_LOR    shift, and go to state 104
    T_OP_BAND   shift, and go to state 105
    T_OP_BOR    shift, and go to state 106
    T_OP_BXOR   shift, and go to state 107
    ','         shift, and go to state 114
    '.'         shift, and go to state 115

    $end                  reduce using rule 67 (EXPR)
    $end                  [reduce using rule 70 (OP_EXPR)]
    T_DOUBLE              reduce using rule 67 (EXPR)
    T_DOUBLE              [reduce using rule 70 (OP_EXPR)]
    T_INT                 reduce using rule 67 (EXPR)
    T_INT                 [reduce using rule 70 (OP_EXPR)]
    T_STRUCT              reduce using rule 67 (EXPR)
    T_STRUCT              [reduce using rule 70 (OP_EXPR)]
    T_BREAK               reduce using rule 67 (EXPR)
    T_BREAK               [reduce using rule 70 (OP_EXPR)]
    T_SWITCH              reduce using rule 67 (EXPR)
    T_SWITCH              [reduce using rule 70 (OP_EXPR)]
    T_CASE                reduce using rule 67 (EXPR)
    T_CASE                [reduce using rule 70 (OP_EXPR)]
    T_ENUM                reduce using rule 67 (EXPR)
    T_ENUM                [reduce using rule 70 (OP_EXPR)]
    T_TYPEDEF             reduce using rule 67 (EXPR)
    T_TYPEDEF             [reduce using rule 70 (OP_EXPR)]
    T_RETURN              reduce using rule 67 (EXPR)
    T_RETURN              [reduce using rule 70 (OP_EXPR)]
    T_FLOAT               reduce using rule 67 (EXPR)
    T_FLOAT               [reduce using rule 70 (OP_EXPR)]
    T_FOR                 reduce using rule 67 (EXPR)
    T_FOR                 [reduce using rule 70 (OP_EXPR)]
    T_SIZEOF              reduce using rule 67 (EXPR)
    T_SIZEOF              [reduce using rule 70 (OP_EXPR)]
    T_IF                  reduce using rule 67 (EXPR)
    T_IF                  [reduce using rule 70 (OP_EXPR)]
    T_WHILE               reduce using rule 67 (EXPR)
    T_WHILE               [reduce using rule 70 (OP_EXPR)]
    T_IDENTIFIER          reduce using rule 67 (EXPR)
    T_IDENTIFIER          [reduce using rule 70 (OP_EXPR)]
    T_STRING_LITERAL      reduce using rule 67 (EXPR)
    T_STRING_LITERAL      [reduce using rule 70 (OP_EXPR)]
    T_INT_CONSTANT        reduce using rule 67 (EXPR)
    T_INT_CONSTANT        [reduce using rule 70 (OP_EXPR)]
    T_FLOAT_CONSTANT      reduce using rule 67 (EXPR)
    T_FLOAT_CONSTANT      [reduce using rule 70 (OP_EXPR)]
    T_CHARACTER_CONSTANT  reduce using rule 67 (EXPR)
    T_CHARACTER_CONSTANT  [reduce using rule 70 (OP_EXPR)]
    T_L_BRACE             reduce using rule 67 (EXPR)
    T_L_BRACE             [reduce using rule 70 (OP_EXPR)]
    T_R_BRACE             reduce using rule 67 (EXPR)
    T_R_BRACE             [reduce using rule 70 (OP_EXPR)]
    T_L_BRACKET           reduce using rule 67 (EXPR)
    T_L_BRACKET           [reduce using rule 70 (OP_EXPR)]
    T_R_BRACKET           reduce using rule 67 (EXPR)
    T_R_BRACKET           [reduce using rule 70 (OP_EXPR)]
    T_R_SQUARE            reduce using rule 67 (EXPR)
    T_R_SQUARE            [reduce using rule 70 (OP_EXPR)]
    T_OP_PLUS             [reduce using rule 67 (EXPR)]
    T_OP_PLUS             [reduce using rule 70 (OP_EXPR)]
    T_OP_MINUS            [reduce using rule 67 (EXPR)]
    T_OP_MINUS            [reduce using rule 70 (OP_EXPR)]
    T_OP_MUL              [reduce using rule 67 (EXPR)]
    T_OP_MUL              [reduce using rule 70 (OP_EXPR)]
    T_OP_INC              reduce using rule 67 (EXPR)
    T_OP_INC              [reduce using rule 70 (OP_EXPR)]
    T_OP_DEC              reduce using rule 67 (EXPR)
    T_OP_DEC              [reduce using rule 70 (OP_EXPR)]
    T_OP_LE               [reduce using rule 67 (EXPR)]
    T_OP_LE               [reduce using rule 70 (OP_EXPR)]
    T_OP_EQ               [reduce using rule 67 (EXPR)]
    T_OP_EQ               [reduce using rule 70 (OP_EXPR)]
    T_OP_NE               [reduce using rule 67 (EXPR)]
    T_OP_NE               [reduce using rule 70 (OP_EXPR)]
    T_OP_LT               [reduce using rule 67 (EXPR)]
    T_OP_LT               [reduce using rule 70 (OP_EXPR)]
    T_OP_LAND             [reduce using rule 67 (EXPR)]
    T_OP_LAND             [reduce using rule 70 (OP_EXPR)]
    T_OP_LOR              [reduce using rule 67 (EXPR)]
    T_OP_LOR              [reduce using rule 70 (OP_EXPR)]
    T_OP_LNOT             reduce using rule 67 (EXPR)
    T_OP_LNOT             [reduce using rule 70 (OP_EXPR)]
    T_OP_BAND             [reduce using rule 67 (EXPR)]
    T_OP_BAND             [reduce using rule 70 (OP_EXPR)]
    T_OP_BOR              [reduce using rule 67 (EXPR)]
    T_OP_BOR              [reduce using rule 70 (OP_EXPR)]
    T_OP_BXOR             [reduce using rule 67 (EXPR)]
    T_OP_BXOR             [reduce using rule 70 (OP_EXPR)]
    T_ASSIGN              reduce using rule 67 (EXPR)
    T_ASSIGN              [reduce using rule 70 (OP_EXPR)]
    T_ADD_ASSIGN          reduce using rule 67 (EXPR)
    T_ADD_ASSIGN          [reduce using rule 70 (OP_EXPR)]
    T_SUB_ASSIGN          reduce using rule 67 (EXPR)
    T_SUB_ASSIGN          [reduce using rule 70 (OP_EXPR)]
    T_MUL_ASSIGN          reduce using rule 67 (EXPR)
    T_MUL_ASSIGN          [reduce using rule 70 (OP_EXPR)]
    T_DIV_ASSIGN          reduce using rule 67 (EXPR)
    T_DIV_ASSIGN          [reduce using rule 70 (OP_EXPR)]
    T_MOD_ASSIGN          reduce using rule 67 (EXPR)
    T_MOD_ASSIGN          [reduce using rule 70 (OP_EXPR)]
    ';'                   reduce using rule 67 (EXPR)
    ';'                   [reduce using rule 70 (OP_EXPR)]
    ','                   [reduce using rule 67 (EXPR)]
    ','                   [reduce using rule 70 (OP_EXPR)]
    ':'                   reduce using rule 67 (EXPR)
    ':'                   [reduce using rule 70 (OP_EXPR)]
    '.'                   [reduce using rule 67 (EXPR)]
    '.'                   [reduce using rule 70 (OP_EXPR)]
    $default              reduce using rule 67 (EXPR)


State 149

   67 EXPR: EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   70        | EXPR . T_OP_PLUS EXPR
   71        | EXPR . T_OP_MINUS EXPR
   71        | EXPR T_OP_MINUS EXPR .
   72        | EXPR . T_OP_MUL EXPR
   74        | EXPR . T_OP_BAND EXPR
   75        | EXPR . T_OP_BOR EXPR
   76        | EXPR . T_OP_BXOR EXPR
   77        | EXPR . T_OP_NE EXPR
   78        | EXPR . T_OP_LE EXPR
   79        | EXPR . T_OP_LT EXPR
   80        | EXPR . T_OP_LAND EXPR
   81        | EXPR . T_OP_LOR EXPR
   98 DOT: EXPR . '.' EXPR

    T_OP_PLUS   shift, and go to state 96
    T_OP_MINUS  shift, and go to state 97
    T_OP_MUL    shift, and go to state 98
    T_OP_LE     shift, and go to state 99
    T_OP_EQ     shift, and go to state 100
    T_OP_NE     shift, and go to state 101
    T_OP_LT     shift, and go to state 123
    T_OP_LAND   shift, and go to state 103
    T_OP_LOR    shift, and go to state 104
    T_OP_BAND   shift, and go to state 105
    T_OP_BOR    shift, and go to state 106
    T_OP_BXOR   shift, and go to state 107
    ','         shift, and go to state 114
    '.'         shift, and go to state 115

    $end                  reduce using rule 67 (EXPR)
    $end                  [reduce using rule 71 (OP_EXPR)]
    T_DOUBLE              reduce using rule 67 (EXPR)
    T_DOUBLE              [reduce using rule 71 (OP_EXPR)]
    T_INT                 reduce using rule 67 (EXPR)
    T_INT                 [reduce using rule 71 (OP_EXPR)]
    T_STRUCT              reduce using rule 67 (EXPR)
    T_STRUCT              [reduce using rule 71 (OP_EXPR)]
    T_BREAK               reduce using rule 67 (EXPR)
    T_BREAK               [reduce using rule 71 (OP_EXPR)]
    T_SWITCH              reduce using rule 67 (EXPR)
    T_SWITCH              [reduce using rule 71 (OP_EXPR)]
    T_CASE                reduce using rule 67 (EXPR)
    T_CASE                [reduce using rule 71 (OP_EXPR)]
    T_ENUM                reduce using rule 67 (EXPR)
    T_ENUM                [reduce using rule 71 (OP_EXPR)]
    T_TYPEDEF             reduce using rule 67 (EXPR)
    T_TYPEDEF             [reduce using rule 71 (OP_EXPR)]
    T_RETURN              reduce using rule 67 (EXPR)
    T_RETURN              [reduce using rule 71 (OP_EXPR)]
    T_FLOAT               reduce using rule 67 (EXPR)
    T_FLOAT               [reduce using rule 71 (OP_EXPR)]
    T_FOR                 reduce using rule 67 (EXPR)
    T_FOR                 [reduce using rule 71 (OP_EXPR)]
    T_SIZEOF              reduce using rule 67 (EXPR)
    T_SIZEOF              [reduce using rule 71 (OP_EXPR)]
    T_IF                  reduce using rule 67 (EXPR)
    T_IF                  [reduce using rule 71 (OP_EXPR)]
    T_WHILE               reduce using rule 67 (EXPR)
    T_WHILE               [reduce using rule 71 (OP_EXPR)]
    T_IDENTIFIER          reduce using rule 67 (EXPR)
    T_IDENTIFIER          [reduce using rule 71 (OP_EXPR)]
    T_STRING_LITERAL      reduce using rule 67 (EXPR)
    T_STRING_LITERAL      [reduce using rule 71 (OP_EXPR)]
    T_INT_CONSTANT        reduce using rule 67 (EXPR)
    T_INT_CONSTANT        [reduce using rule 71 (OP_EXPR)]
    T_FLOAT_CONSTANT      reduce using rule 67 (EXPR)
    T_FLOAT_CONSTANT      [reduce using rule 71 (OP_EXPR)]
    T_CHARACTER_CONSTANT  reduce using rule 67 (EXPR)
    T_CHARACTER_CONSTANT  [reduce using rule 71 (OP_EXPR)]
    T_L_BRACE             reduce using rule 67 (EXPR)
    T_L_BRACE             [reduce using rule 71 (OP_EXPR)]
    T_R_BRACE             reduce using rule 67 (EXPR)
    T_R_BRACE             [reduce using rule 71 (OP_EXPR)]
    T_L_BRACKET           reduce using rule 67 (EXPR)
    T_L_BRACKET           [reduce using rule 71 (OP_EXPR)]
    T_R_BRACKET           reduce using rule 67 (EXPR)
    T_R_BRACKET           [reduce using rule 71 (OP_EXPR)]
    T_R_SQUARE            reduce using rule 67 (EXPR)
    T_R_SQUARE            [reduce using rule 71 (OP_EXPR)]
    T_OP_PLUS             [reduce using rule 67 (EXPR)]
    T_OP_PLUS             [reduce using rule 71 (OP_EXPR)]
    T_OP_MINUS            [reduce using rule 67 (EXPR)]
    T_OP_MINUS            [reduce using rule 71 (OP_EXPR)]
    T_OP_MUL              [reduce using rule 67 (EXPR)]
    T_OP_MUL              [reduce using rule 71 (OP_EXPR)]
    T_OP_INC              reduce using rule 67 (EXPR)
    T_OP_INC              [reduce using rule 71 (OP_EXPR)]
    T_OP_DEC              reduce using rule 67 (EXPR)
    T_OP_DEC              [reduce using rule 71 (OP_EXPR)]
    T_OP_LE               [reduce using rule 67 (EXPR)]
    T_OP_LE               [reduce using rule 71 (OP_EXPR)]
    T_OP_EQ               [reduce using rule 67 (EXPR)]
    T_OP_EQ               [reduce using rule 71 (OP_EXPR)]
    T_OP_NE               [reduce using rule 67 (EXPR)]
    T_OP_NE               [reduce using rule 71 (OP_EXPR)]
    T_OP_LT               [reduce using rule 67 (EXPR)]
    T_OP_LT               [reduce using rule 71 (OP_EXPR)]
    T_OP_LAND             [reduce using rule 67 (EXPR)]
    T_OP_LAND             [reduce using rule 71 (OP_EXPR)]
    T_OP_LOR              [reduce using rule 67 (EXPR)]
    T_OP_LOR              [reduce using rule 71 (OP_EXPR)]
    T_OP_LNOT             reduce using rule 67 (EXPR)
    T_OP_LNOT             [reduce using rule 71 (OP_EXPR)]
    T_OP_BAND             [reduce using rule 67 (EXPR)]
    T_OP_BAND             [reduce using rule 71 (OP_EXPR)]
    T_OP_BOR              [reduce using rule 67 (EXPR)]
    T_OP_BOR              [reduce using rule 71 (OP_EXPR)]
    T_OP_BXOR             [reduce using rule 67 (EXPR)]
    T_OP_BXOR             [reduce using rule 71 (OP_EXPR)]
    T_ASSIGN              reduce using rule 67 (EXPR)
    T_ASSIGN              [reduce using rule 71 (OP_EXPR)]
    T_ADD_ASSIGN          reduce using rule 67 (EXPR)
    T_ADD_ASSIGN          [reduce using rule 71 (OP_EXPR)]
    T_SUB_ASSIGN          reduce using rule 67 (EXPR)
    T_SUB_ASSIGN          [reduce using rule 71 (OP_EXPR)]
    T_MUL_ASSIGN          reduce using rule 67 (EXPR)
    T_MUL_ASSIGN          [reduce using rule 71 (OP_EXPR)]
    T_DIV_ASSIGN          reduce using rule 67 (EXPR)
    T_DIV_ASSIGN          [reduce using rule 71 (OP_EXPR)]
    T_MOD_ASSIGN          reduce using rule 67 (EXPR)
    T_MOD_ASSIGN          [reduce using rule 71 (OP_EXPR)]
    ';'                   reduce using rule 67 (EXPR)
    ';'                   [reduce using rule 71 (OP_EXPR)]
    ','                   [reduce using rule 67 (EXPR)]
    ','                   [reduce using rule 71 (OP_EXPR)]
    ':'                   reduce using rule 67 (EXPR)
    ':'                   [reduce using rule 71 (OP_EXPR)]
    '.'                   [reduce using rule 67 (EXPR)]
    '.'                   [reduce using rule 71 (OP_EXPR)]
    $default              reduce using rule 67 (EXPR)


State 150

   67 EXPR: EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   70        | EXPR . T_OP_PLUS EXPR
   71        | EXPR . T_OP_MINUS EXPR
   72        | EXPR . T_OP_MUL EXPR
   72        | EXPR T_OP_MUL EXPR .
   74        | EXPR . T_OP_BAND EXPR
   75        | EXPR . T_OP_BOR EXPR
   76        | EXPR . T_OP_BXOR EXPR
   77        | EXPR . T_OP_NE EXPR
   78        | EXPR . T_OP_LE EXPR
   79        | EXPR . T_OP_LT EXPR
   80        | EXPR . T_OP_LAND EXPR
   81        | EXPR . T_OP_LOR EXPR
   98 DOT: EXPR . '.' EXPR

    T_OP_PLUS   shift, and go to state 96
    T_OP_MINUS  shift, and go to state 97
    T_OP_MUL    shift, and go to state 98
    T_OP_LE     shift, and go to state 99
    T_OP_EQ     shift, and go to state 100
    T_OP_NE     shift, and go to state 101
    T_OP_LT     shift, and go to state 123
    T_OP_LAND   shift, and go to state 103
    T_OP_LOR    shift, and go to state 104
    T_OP_BAND   shift, and go to state 105
    T_OP_BOR    shift, and go to state 106
    T_OP_BXOR   shift, and go to state 107
    ','         shift, and go to state 114
    '.'         shift, and go to state 115

    $end                  reduce using rule 67 (EXPR)
    $end                  [reduce using rule 72 (OP_EXPR)]
    T_DOUBLE              reduce using rule 67 (EXPR)
    T_DOUBLE              [reduce using rule 72 (OP_EXPR)]
    T_INT                 reduce using rule 67 (EXPR)
    T_INT                 [reduce using rule 72 (OP_EXPR)]
    T_STRUCT              reduce using rule 67 (EXPR)
    T_STRUCT              [reduce using rule 72 (OP_EXPR)]
    T_BREAK               reduce using rule 67 (EXPR)
    T_BREAK               [reduce using rule 72 (OP_EXPR)]
    T_SWITCH              reduce using rule 67 (EXPR)
    T_SWITCH              [reduce using rule 72 (OP_EXPR)]
    T_CASE                reduce using rule 67 (EXPR)
    T_CASE                [reduce using rule 72 (OP_EXPR)]
    T_ENUM                reduce using rule 67 (EXPR)
    T_ENUM                [reduce using rule 72 (OP_EXPR)]
    T_TYPEDEF             reduce using rule 67 (EXPR)
    T_TYPEDEF             [reduce using rule 72 (OP_EXPR)]
    T_RETURN              reduce using rule 67 (EXPR)
    T_RETURN              [reduce using rule 72 (OP_EXPR)]
    T_FLOAT               reduce using rule 67 (EXPR)
    T_FLOAT               [reduce using rule 72 (OP_EXPR)]
    T_FOR                 reduce using rule 67 (EXPR)
    T_FOR                 [reduce using rule 72 (OP_EXPR)]
    T_SIZEOF              reduce using rule 67 (EXPR)
    T_SIZEOF              [reduce using rule 72 (OP_EXPR)]
    T_IF                  reduce using rule 67 (EXPR)
    T_IF                  [reduce using rule 72 (OP_EXPR)]
    T_WHILE               reduce using rule 67 (EXPR)
    T_WHILE               [reduce using rule 72 (OP_EXPR)]
    T_IDENTIFIER          reduce using rule 67 (EXPR)
    T_IDENTIFIER          [reduce using rule 72 (OP_EXPR)]
    T_STRING_LITERAL      reduce using rule 67 (EXPR)
    T_STRING_LITERAL      [reduce using rule 72 (OP_EXPR)]
    T_INT_CONSTANT        reduce using rule 67 (EXPR)
    T_INT_CONSTANT        [reduce using rule 72 (OP_EXPR)]
    T_FLOAT_CONSTANT      reduce using rule 67 (EXPR)
    T_FLOAT_CONSTANT      [reduce using rule 72 (OP_EXPR)]
    T_CHARACTER_CONSTANT  reduce using rule 67 (EXPR)
    T_CHARACTER_CONSTANT  [reduce using rule 72 (OP_EXPR)]
    T_L_BRACE             reduce using rule 67 (EXPR)
    T_L_BRACE             [reduce using rule 72 (OP_EXPR)]
    T_R_BRACE             reduce using rule 67 (EXPR)
    T_R_BRACE             [reduce using rule 72 (OP_EXPR)]
    T_L_BRACKET           reduce using rule 67 (EXPR)
    T_L_BRACKET           [reduce using rule 72 (OP_EXPR)]
    T_R_BRACKET           reduce using rule 67 (EXPR)
    T_R_BRACKET           [reduce using rule 72 (OP_EXPR)]
    T_R_SQUARE            reduce using rule 67 (EXPR)
    T_R_SQUARE            [reduce using rule 72 (OP_EXPR)]
    T_OP_PLUS             [reduce using rule 67 (EXPR)]
    T_OP_PLUS             [reduce using rule 72 (OP_EXPR)]
    T_OP_MINUS            [reduce using rule 67 (EXPR)]
    T_OP_MINUS            [reduce using rule 72 (OP_EXPR)]
    T_OP_MUL              [reduce using rule 67 (EXPR)]
    T_OP_MUL              [reduce using rule 72 (OP_EXPR)]
    T_OP_INC              reduce using rule 67 (EXPR)
    T_OP_INC              [reduce using rule 72 (OP_EXPR)]
    T_OP_DEC              reduce using rule 67 (EXPR)
    T_OP_DEC              [reduce using rule 72 (OP_EXPR)]
    T_OP_LE               [reduce using rule 67 (EXPR)]
    T_OP_LE               [reduce using rule 72 (OP_EXPR)]
    T_OP_EQ               [reduce using rule 67 (EXPR)]
    T_OP_EQ               [reduce using rule 72 (OP_EXPR)]
    T_OP_NE               [reduce using rule 67 (EXPR)]
    T_OP_NE               [reduce using rule 72 (OP_EXPR)]
    T_OP_LT               [reduce using rule 67 (EXPR)]
    T_OP_LT               [reduce using rule 72 (OP_EXPR)]
    T_OP_LAND             [reduce using rule 67 (EXPR)]
    T_OP_LAND             [reduce using rule 72 (OP_EXPR)]
    T_OP_LOR              [reduce using rule 67 (EXPR)]
    T_OP_LOR              [reduce using rule 72 (OP_EXPR)]
    T_OP_LNOT             reduce using rule 67 (EXPR)
    T_OP_LNOT             [reduce using rule 72 (OP_EXPR)]
    T_OP_BAND             [reduce using rule 67 (EXPR)]
    T_OP_BAND             [reduce using rule 72 (OP_EXPR)]
    T_OP_BOR              [reduce using rule 67 (EXPR)]
    T_OP_BOR              [reduce using rule 72 (OP_EXPR)]
    T_OP_BXOR             [reduce using rule 67 (EXPR)]
    T_OP_BXOR             [reduce using rule 72 (OP_EXPR)]
    T_ASSIGN              reduce using rule 67 (EXPR)
    T_ASSIGN              [reduce using rule 72 (OP_EXPR)]
    T_ADD_ASSIGN          reduce using rule 67 (EXPR)
    T_ADD_ASSIGN          [reduce using rule 72 (OP_EXPR)]
    T_SUB_ASSIGN          reduce using rule 67 (EXPR)
    T_SUB_ASSIGN          [reduce using rule 72 (OP_EXPR)]
    T_MUL_ASSIGN          reduce using rule 67 (EXPR)
    T_MUL_ASSIGN          [reduce using rule 72 (OP_EXPR)]
    T_DIV_ASSIGN          reduce using rule 67 (EXPR)
    T_DIV_ASSIGN          [reduce using rule 72 (OP_EXPR)]
    T_MOD_ASSIGN          reduce using rule 67 (EXPR)
    T_MOD_ASSIGN          [reduce using rule 72 (OP_EXPR)]
    ';'                   reduce using rule 67 (EXPR)
    ';'                   [reduce using rule 72 (OP_EXPR)]
    ','                   [reduce using rule 67 (EXPR)]
    ','                   [reduce using rule 72 (OP_EXPR)]
    ':'                   reduce using rule 67 (EXPR)
    ':'                   [reduce using rule 72 (OP_EXPR)]
    '.'                   [reduce using rule 67 (EXPR)]
    '.'                   [reduce using rule 72 (OP_EXPR)]
    $default              reduce using rule 67 (EXPR)


State 151

   67 EXPR: EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   70        | EXPR . T_OP_PLUS EXPR
   71        | EXPR . T_OP_MINUS EXPR
   72        | EXPR . T_OP_MUL EXPR
   74        | EXPR . T_OP_BAND EXPR
   75        | EXPR . T_OP_BOR EXPR
   76        | EXPR . T_OP_BXOR EXPR
   77        | EXPR . T_OP_NE EXPR
   78        | EXPR . T_OP_LE EXPR
   78        | EXPR T_OP_LE EXPR .
   79        | EXPR . T_OP_LT EXPR
   80        | EXPR . T_OP_LAND EXPR
   81        | EXPR . T_OP_LOR EXPR
   98 DOT: EXPR . '.' EXPR

    T_OP_PLUS   shift, and go to state 96
    T_OP_MINUS  shift, and go to state 97
    T_OP_MUL    shift, and go to state 98
    T_OP_LE     shift, and go to state 99
    T_OP_EQ     shift, and go to state 100
    T_OP_NE     shift, and go to state 101
    T_OP_LT     shift, and go to state 123
    T_OP_LAND   shift, and go to state 103
    T_OP_LOR    shift, and go to state 104
    T_OP_BAND   shift, and go to state 105
    T_OP_BOR    shift, and go to state 106
    T_OP_BXOR   shift, and go to state 107
    ','         shift, and go to state 114
    '.'         shift, and go to state 115

    $end                  reduce using rule 67 (EXPR)
    $end                  [reduce using rule 78 (OP_EXPR)]
    T_DOUBLE              reduce using rule 67 (EXPR)
    T_DOUBLE              [reduce using rule 78 (OP_EXPR)]
    T_INT                 reduce using rule 67 (EXPR)
    T_INT                 [reduce using rule 78 (OP_EXPR)]
    T_STRUCT              reduce using rule 67 (EXPR)
    T_STRUCT              [reduce using rule 78 (OP_EXPR)]
    T_BREAK               reduce using rule 67 (EXPR)
    T_BREAK               [reduce using rule 78 (OP_EXPR)]
    T_SWITCH              reduce using rule 67 (EXPR)
    T_SWITCH              [reduce using rule 78 (OP_EXPR)]
    T_CASE                reduce using rule 67 (EXPR)
    T_CASE                [reduce using rule 78 (OP_EXPR)]
    T_ENUM                reduce using rule 67 (EXPR)
    T_ENUM                [reduce using rule 78 (OP_EXPR)]
    T_TYPEDEF             reduce using rule 67 (EXPR)
    T_TYPEDEF             [reduce using rule 78 (OP_EXPR)]
    T_RETURN              reduce using rule 67 (EXPR)
    T_RETURN              [reduce using rule 78 (OP_EXPR)]
    T_FLOAT               reduce using rule 67 (EXPR)
    T_FLOAT               [reduce using rule 78 (OP_EXPR)]
    T_FOR                 reduce using rule 67 (EXPR)
    T_FOR                 [reduce using rule 78 (OP_EXPR)]
    T_SIZEOF              reduce using rule 67 (EXPR)
    T_SIZEOF              [reduce using rule 78 (OP_EXPR)]
    T_IF                  reduce using rule 67 (EXPR)
    T_IF                  [reduce using rule 78 (OP_EXPR)]
    T_WHILE               reduce using rule 67 (EXPR)
    T_WHILE               [reduce using rule 78 (OP_EXPR)]
    T_IDENTIFIER          reduce using rule 67 (EXPR)
    T_IDENTIFIER          [reduce using rule 78 (OP_EXPR)]
    T_STRING_LITERAL      reduce using rule 67 (EXPR)
    T_STRING_LITERAL      [reduce using rule 78 (OP_EXPR)]
    T_INT_CONSTANT        reduce using rule 67 (EXPR)
    T_INT_CONSTANT        [reduce using rule 78 (OP_EXPR)]
    T_FLOAT_CONSTANT      reduce using rule 67 (EXPR)
    T_FLOAT_CONSTANT      [reduce using rule 78 (OP_EXPR)]
    T_CHARACTER_CONSTANT  reduce using rule 67 (EXPR)
    T_CHARACTER_CONSTANT  [reduce using rule 78 (OP_EXPR)]
    T_L_BRACE             reduce using rule 67 (EXPR)
    T_L_BRACE             [reduce using rule 78 (OP_EXPR)]
    T_R_BRACE             reduce using rule 67 (EXPR)
    T_R_BRACE             [reduce using rule 78 (OP_EXPR)]
    T_L_BRACKET           reduce using rule 67 (EXPR)
    T_L_BRACKET           [reduce using rule 78 (OP_EXPR)]
    T_R_BRACKET           reduce using rule 67 (EXPR)
    T_R_BRACKET           [reduce using rule 78 (OP_EXPR)]
    T_R_SQUARE            reduce using rule 67 (EXPR)
    T_R_SQUARE            [reduce using rule 78 (OP_EXPR)]
    T_OP_PLUS             [reduce using rule 67 (EXPR)]
    T_OP_PLUS             [reduce using rule 78 (OP_EXPR)]
    T_OP_MINUS            [reduce using rule 67 (EXPR)]
    T_OP_MINUS            [reduce using rule 78 (OP_EXPR)]
    T_OP_MUL              [reduce using rule 67 (EXPR)]
    T_OP_MUL              [reduce using rule 78 (OP_EXPR)]
    T_OP_INC              reduce using rule 67 (EXPR)
    T_OP_INC              [reduce using rule 78 (OP_EXPR)]
    T_OP_DEC              reduce using rule 67 (EXPR)
    T_OP_DEC              [reduce using rule 78 (OP_EXPR)]
    T_OP_LE               [reduce using rule 67 (EXPR)]
    T_OP_LE               [reduce using rule 78 (OP_EXPR)]
    T_OP_EQ               [reduce using rule 67 (EXPR)]
    T_OP_EQ               [reduce using rule 78 (OP_EXPR)]
    T_OP_NE               [reduce using rule 67 (EXPR)]
    T_OP_NE               [reduce using rule 78 (OP_EXPR)]
    T_OP_LT               [reduce using rule 67 (EXPR)]
    T_OP_LT               [reduce using rule 78 (OP_EXPR)]
    T_OP_LAND             [reduce using rule 67 (EXPR)]
    T_OP_LAND             [reduce using rule 78 (OP_EXPR)]
    T_OP_LOR              [reduce using rule 67 (EXPR)]
    T_OP_LOR              [reduce using rule 78 (OP_EXPR)]
    T_OP_LNOT             reduce using rule 67 (EXPR)
    T_OP_LNOT             [reduce using rule 78 (OP_EXPR)]
    T_OP_BAND             [reduce using rule 67 (EXPR)]
    T_OP_BAND             [reduce using rule 78 (OP_EXPR)]
    T_OP_BOR              [reduce using rule 67 (EXPR)]
    T_OP_BOR              [reduce using rule 78 (OP_EXPR)]
    T_OP_BXOR             [reduce using rule 67 (EXPR)]
    T_OP_BXOR             [reduce using rule 78 (OP_EXPR)]
    T_ASSIGN              reduce using rule 67 (EXPR)
    T_ASSIGN              [reduce using rule 78 (OP_EXPR)]
    T_ADD_ASSIGN          reduce using rule 67 (EXPR)
    T_ADD_ASSIGN          [reduce using rule 78 (OP_EXPR)]
    T_SUB_ASSIGN          reduce using rule 67 (EXPR)
    T_SUB_ASSIGN          [reduce using rule 78 (OP_EXPR)]
    T_MUL_ASSIGN          reduce using rule 67 (EXPR)
    T_MUL_ASSIGN          [reduce using rule 78 (OP_EXPR)]
    T_DIV_ASSIGN          reduce using rule 67 (EXPR)
    T_DIV_ASSIGN          [reduce using rule 78 (OP_EXPR)]
    T_MOD_ASSIGN          reduce using rule 67 (EXPR)
    T_MOD_ASSIGN          [reduce using rule 78 (OP_EXPR)]
    ';'                   reduce using rule 67 (EXPR)
    ';'                   [reduce using rule 78 (OP_EXPR)]
    ','                   [reduce using rule 67 (EXPR)]
    ','                   [reduce using rule 78 (OP_EXPR)]
    ':'                   reduce using rule 67 (EXPR)
    ':'                   [reduce using rule 78 (OP_EXPR)]
    '.'                   [reduce using rule 67 (EXPR)]
    '.'                   [reduce using rule 78 (OP_EXPR)]
    $default              reduce using rule 67 (EXPR)


State 152

   67 EXPR: EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   69        | EXPR T_OP_EQ EXPR .
   70        | EXPR . T_OP_PLUS EXPR
   71        | EXPR . T_OP_MINUS EXPR
   72        | EXPR . T_OP_MUL EXPR
   74        | EXPR . T_OP_BAND EXPR
   75        | EXPR . T_OP_BOR EXPR
   76        | EXPR . T_OP_BXOR EXPR
   77        | EXPR . T_OP_NE EXPR
   78        | EXPR . T_OP_LE EXPR
   79        | EXPR . T_OP_LT EXPR
   80        | EXPR . T_OP_LAND EXPR
   81        | EXPR . T_OP_LOR EXPR
   98 DOT: EXPR . '.' EXPR

    T_OP_PLUS   shift, and go to state 96
    T_OP_MINUS  shift, and go to state 97
    T_OP_MUL    shift, and go to state 98
    T_OP_LE     shift, and go to state 99
    T_OP_EQ     shift, and go to state 100
    T_OP_NE     shift, and go to state 101
    T_OP_LT     shift, and go to state 123
    T_OP_LAND   shift, and go to state 103
    T_OP_LOR    shift, and go to state 104
    T_OP_BAND   shift, and go to state 105
    T_OP_BOR    shift, and go to state 106
    T_OP_BXOR   shift, and go to state 107
    ','         shift, and go to state 114
    '.'         shift, and go to state 115

    $end                  reduce using rule 67 (EXPR)
    $end                  [reduce using rule 69 (OP_EXPR)]
    T_DOUBLE              reduce using rule 67 (EXPR)
    T_DOUBLE              [reduce using rule 69 (OP_EXPR)]
    T_INT                 reduce using rule 67 (EXPR)
    T_INT                 [reduce using rule 69 (OP_EXPR)]
    T_STRUCT              reduce using rule 67 (EXPR)
    T_STRUCT              [reduce using rule 69 (OP_EXPR)]
    T_BREAK               reduce using rule 67 (EXPR)
    T_BREAK               [reduce using rule 69 (OP_EXPR)]
    T_SWITCH              reduce using rule 67 (EXPR)
    T_SWITCH              [reduce using rule 69 (OP_EXPR)]
    T_CASE                reduce using rule 67 (EXPR)
    T_CASE                [reduce using rule 69 (OP_EXPR)]
    T_ENUM                reduce using rule 67 (EXPR)
    T_ENUM                [reduce using rule 69 (OP_EXPR)]
    T_TYPEDEF             reduce using rule 67 (EXPR)
    T_TYPEDEF             [reduce using rule 69 (OP_EXPR)]
    T_RETURN              reduce using rule 67 (EXPR)
    T_RETURN              [reduce using rule 69 (OP_EXPR)]
    T_FLOAT               reduce using rule 67 (EXPR)
    T_FLOAT               [reduce using rule 69 (OP_EXPR)]
    T_FOR                 reduce using rule 67 (EXPR)
    T_FOR                 [reduce using rule 69 (OP_EXPR)]
    T_SIZEOF              reduce using rule 67 (EXPR)
    T_SIZEOF              [reduce using rule 69 (OP_EXPR)]
    T_IF                  reduce using rule 67 (EXPR)
    T_IF                  [reduce using rule 69 (OP_EXPR)]
    T_WHILE               reduce using rule 67 (EXPR)
    T_WHILE               [reduce using rule 69 (OP_EXPR)]
    T_IDENTIFIER          reduce using rule 67 (EXPR)
    T_IDENTIFIER          [reduce using rule 69 (OP_EXPR)]
    T_STRING_LITERAL      reduce using rule 67 (EXPR)
    T_STRING_LITERAL      [reduce using rule 69 (OP_EXPR)]
    T_INT_CONSTANT        reduce using rule 67 (EXPR)
    T_INT_CONSTANT        [reduce using rule 69 (OP_EXPR)]
    T_FLOAT_CONSTANT      reduce using rule 67 (EXPR)
    T_FLOAT_CONSTANT      [reduce using rule 69 (OP_EXPR)]
    T_CHARACTER_CONSTANT  reduce using rule 67 (EXPR)
    T_CHARACTER_CONSTANT  [reduce using rule 69 (OP_EXPR)]
    T_L_BRACE             reduce using rule 67 (EXPR)
    T_L_BRACE             [reduce using rule 69 (OP_EXPR)]
    T_R_BRACE             reduce using rule 67 (EXPR)
    T_R_BRACE             [reduce using rule 69 (OP_EXPR)]
    T_L_BRACKET           reduce using rule 67 (EXPR)
    T_L_BRACKET           [reduce using rule 69 (OP_EXPR)]
    T_R_BRACKET           reduce using rule 67 (EXPR)
    T_R_BRACKET           [reduce using rule 69 (OP_EXPR)]
    T_R_SQUARE            reduce using rule 67 (EXPR)
    T_R_SQUARE            [reduce using rule 69 (OP_EXPR)]
    T_OP_PLUS             [reduce using rule 67 (EXPR)]
    T_OP_PLUS             [reduce using rule 69 (OP_EXPR)]
    T_OP_MINUS            [reduce using rule 67 (EXPR)]
    T_OP_MINUS            [reduce using rule 69 (OP_EXPR)]
    T_OP_MUL              [reduce using rule 67 (EXPR)]
    T_OP_MUL              [reduce using rule 69 (OP_EXPR)]
    T_OP_INC              reduce using rule 67 (EXPR)
    T_OP_INC              [reduce using rule 69 (OP_EXPR)]
    T_OP_DEC              reduce using rule 67 (EXPR)
    T_OP_DEC              [reduce using rule 69 (OP_EXPR)]
    T_OP_LE               [reduce using rule 67 (EXPR)]
    T_OP_LE               [reduce using rule 69 (OP_EXPR)]
    T_OP_EQ               [reduce using rule 67 (EXPR)]
    T_OP_EQ               [reduce using rule 69 (OP_EXPR)]
    T_OP_NE               [reduce using rule 67 (EXPR)]
    T_OP_NE               [reduce using rule 69 (OP_EXPR)]
    T_OP_LT               [reduce using rule 67 (EXPR)]
    T_OP_LT               [reduce using rule 69 (OP_EXPR)]
    T_OP_LAND             [reduce using rule 67 (EXPR)]
    T_OP_LAND             [reduce using rule 69 (OP_EXPR)]
    T_OP_LOR              [reduce using rule 67 (EXPR)]
    T_OP_LOR              [reduce using rule 69 (OP_EXPR)]
    T_OP_LNOT             reduce using rule 67 (EXPR)
    T_OP_LNOT             [reduce using rule 69 (OP_EXPR)]
    T_OP_BAND             [reduce using rule 67 (EXPR)]
    T_OP_BAND             [reduce using rule 69 (OP_EXPR)]
    T_OP_BOR              [reduce using rule 67 (EXPR)]
    T_OP_BOR              [reduce using rule 69 (OP_EXPR)]
    T_OP_BXOR             [reduce using rule 67 (EXPR)]
    T_OP_BXOR             [reduce using rule 69 (OP_EXPR)]
    T_ASSIGN              reduce using rule 67 (EXPR)
    T_ASSIGN              [reduce using rule 69 (OP_EXPR)]
    T_ADD_ASSIGN          reduce using rule 67 (EXPR)
    T_ADD_ASSIGN          [reduce using rule 69 (OP_EXPR)]
    T_SUB_ASSIGN          reduce using rule 67 (EXPR)
    T_SUB_ASSIGN          [reduce using rule 69 (OP_EXPR)]
    T_MUL_ASSIGN          reduce using rule 67 (EXPR)
    T_MUL_ASSIGN          [reduce using rule 69 (OP_EXPR)]
    T_DIV_ASSIGN          reduce using rule 67 (EXPR)
    T_DIV_ASSIGN          [reduce using rule 69 (OP_EXPR)]
    T_MOD_ASSIGN          reduce using rule 67 (EXPR)
    T_MOD_ASSIGN          [reduce using rule 69 (OP_EXPR)]
    ';'                   reduce using rule 67 (EXPR)
    ';'                   [reduce using rule 69 (OP_EXPR)]
    ','                   [reduce using rule 67 (EXPR)]
    ','                   [reduce using rule 69 (OP_EXPR)]
    ':'                   reduce using rule 67 (EXPR)
    ':'                   [reduce using rule 69 (OP_EXPR)]
    '.'                   [reduce using rule 67 (EXPR)]
    '.'                   [reduce using rule 69 (OP_EXPR)]
    $default              reduce using rule 67 (EXPR)


State 153

   67 EXPR: EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   70        | EXPR . T_OP_PLUS EXPR
   71        | EXPR . T_OP_MINUS EXPR
   72        | EXPR . T_OP_MUL EXPR
   74        | EXPR . T_OP_BAND EXPR
   75        | EXPR . T_OP_BOR EXPR
   76        | EXPR . T_OP_BXOR EXPR
   77        | EXPR . T_OP_NE EXPR
   77        | EXPR T_OP_NE EXPR .
   78        | EXPR . T_OP_LE EXPR
   79        | EXPR . T_OP_LT EXPR
   80        | EXPR . T_OP_LAND EXPR
   81        | EXPR . T_OP_LOR EXPR
   98 DOT: EXPR . '.' EXPR

    T_OP_PLUS   shift, and go to state 96
    T_OP_MINUS  shift, and go to state 97
    T_OP_MUL    shift, and go to state 98
    T_OP_LE     shift, and go to state 99
    T_OP_EQ     shift, and go to state 100
    T_OP_NE     shift, and go to state 101
    T_OP_LT     shift, and go to state 123
    T_OP_LAND   shift, and go to state 103
    T_OP_LOR    shift, and go to state 104
    T_OP_BAND   shift, and go to state 105
    T_OP_BOR    shift, and go to state 106
    T_OP_BXOR   shift, and go to state 107
    ','         shift, and go to state 114
    '.'         shift, and go to state 115

    $end                  reduce using rule 67 (EXPR)
    $end                  [reduce using rule 77 (OP_EXPR)]
    T_DOUBLE              reduce using rule 67 (EXPR)
    T_DOUBLE              [reduce using rule 77 (OP_EXPR)]
    T_INT                 reduce using rule 67 (EXPR)
    T_INT                 [reduce using rule 77 (OP_EXPR)]
    T_STRUCT              reduce using rule 67 (EXPR)
    T_STRUCT              [reduce using rule 77 (OP_EXPR)]
    T_BREAK               reduce using rule 67 (EXPR)
    T_BREAK               [reduce using rule 77 (OP_EXPR)]
    T_SWITCH              reduce using rule 67 (EXPR)
    T_SWITCH              [reduce using rule 77 (OP_EXPR)]
    T_CASE                reduce using rule 67 (EXPR)
    T_CASE                [reduce using rule 77 (OP_EXPR)]
    T_ENUM                reduce using rule 67 (EXPR)
    T_ENUM                [reduce using rule 77 (OP_EXPR)]
    T_TYPEDEF             reduce using rule 67 (EXPR)
    T_TYPEDEF             [reduce using rule 77 (OP_EXPR)]
    T_RETURN              reduce using rule 67 (EXPR)
    T_RETURN              [reduce using rule 77 (OP_EXPR)]
    T_FLOAT               reduce using rule 67 (EXPR)
    T_FLOAT               [reduce using rule 77 (OP_EXPR)]
    T_FOR                 reduce using rule 67 (EXPR)
    T_FOR                 [reduce using rule 77 (OP_EXPR)]
    T_SIZEOF              reduce using rule 67 (EXPR)
    T_SIZEOF              [reduce using rule 77 (OP_EXPR)]
    T_IF                  reduce using rule 67 (EXPR)
    T_IF                  [reduce using rule 77 (OP_EXPR)]
    T_WHILE               reduce using rule 67 (EXPR)
    T_WHILE               [reduce using rule 77 (OP_EXPR)]
    T_IDENTIFIER          reduce using rule 67 (EXPR)
    T_IDENTIFIER          [reduce using rule 77 (OP_EXPR)]
    T_STRING_LITERAL      reduce using rule 67 (EXPR)
    T_STRING_LITERAL      [reduce using rule 77 (OP_EXPR)]
    T_INT_CONSTANT        reduce using rule 67 (EXPR)
    T_INT_CONSTANT        [reduce using rule 77 (OP_EXPR)]
    T_FLOAT_CONSTANT      reduce using rule 67 (EXPR)
    T_FLOAT_CONSTANT      [reduce using rule 77 (OP_EXPR)]
    T_CHARACTER_CONSTANT  reduce using rule 67 (EXPR)
    T_CHARACTER_CONSTANT  [reduce using rule 77 (OP_EXPR)]
    T_L_BRACE             reduce using rule 67 (EXPR)
    T_L_BRACE             [reduce using rule 77 (OP_EXPR)]
    T_R_BRACE             reduce using rule 67 (EXPR)
    T_R_BRACE             [reduce using rule 77 (OP_EXPR)]
    T_L_BRACKET           reduce using rule 67 (EXPR)
    T_L_BRACKET           [reduce using rule 77 (OP_EXPR)]
    T_R_BRACKET           reduce using rule 67 (EXPR)
    T_R_BRACKET           [reduce using rule 77 (OP_EXPR)]
    T_R_SQUARE            reduce using rule 67 (EXPR)
    T_R_SQUARE            [reduce using rule 77 (OP_EXPR)]
    T_OP_PLUS             [reduce using rule 67 (EXPR)]
    T_OP_PLUS             [reduce using rule 77 (OP_EXPR)]
    T_OP_MINUS            [reduce using rule 67 (EXPR)]
    T_OP_MINUS            [reduce using rule 77 (OP_EXPR)]
    T_OP_MUL              [reduce using rule 67 (EXPR)]
    T_OP_MUL              [reduce using rule 77 (OP_EXPR)]
    T_OP_INC              reduce using rule 67 (EXPR)
    T_OP_INC              [reduce using rule 77 (OP_EXPR)]
    T_OP_DEC              reduce using rule 67 (EXPR)
    T_OP_DEC              [reduce using rule 77 (OP_EXPR)]
    T_OP_LE               [reduce using rule 67 (EXPR)]
    T_OP_LE               [reduce using rule 77 (OP_EXPR)]
    T_OP_EQ               [reduce using rule 67 (EXPR)]
    T_OP_EQ               [reduce using rule 77 (OP_EXPR)]
    T_OP_NE               [reduce using rule 67 (EXPR)]
    T_OP_NE               [reduce using rule 77 (OP_EXPR)]
    T_OP_LT               [reduce using rule 67 (EXPR)]
    T_OP_LT               [reduce using rule 77 (OP_EXPR)]
    T_OP_LAND             [reduce using rule 67 (EXPR)]
    T_OP_LAND             [reduce using rule 77 (OP_EXPR)]
    T_OP_LOR              [reduce using rule 67 (EXPR)]
    T_OP_LOR              [reduce using rule 77 (OP_EXPR)]
    T_OP_LNOT             reduce using rule 67 (EXPR)
    T_OP_LNOT             [reduce using rule 77 (OP_EXPR)]
    T_OP_BAND             [reduce using rule 67 (EXPR)]
    T_OP_BAND             [reduce using rule 77 (OP_EXPR)]
    T_OP_BOR              [reduce using rule 67 (EXPR)]
    T_OP_BOR              [reduce using rule 77 (OP_EXPR)]
    T_OP_BXOR             [reduce using rule 67 (EXPR)]
    T_OP_BXOR             [reduce using rule 77 (OP_EXPR)]
    T_ASSIGN              reduce using rule 67 (EXPR)
    T_ASSIGN              [reduce using rule 77 (OP_EXPR)]
    T_ADD_ASSIGN          reduce using rule 67 (EXPR)
    T_ADD_ASSIGN          [reduce using rule 77 (OP_EXPR)]
    T_SUB_ASSIGN          reduce using rule 67 (EXPR)
    T_SUB_ASSIGN          [reduce using rule 77 (OP_EXPR)]
    T_MUL_ASSIGN          reduce using rule 67 (EXPR)
    T_MUL_ASSIGN          [reduce using rule 77 (OP_EXPR)]
    T_DIV_ASSIGN          reduce using rule 67 (EXPR)
    T_DIV_ASSIGN          [reduce using rule 77 (OP_EXPR)]
    T_MOD_ASSIGN          reduce using rule 67 (EXPR)
    T_MOD_ASSIGN          [reduce using rule 77 (OP_EXPR)]
    ';'                   reduce using rule 67 (EXPR)
    ';'                   [reduce using rule 77 (OP_EXPR)]
    ','                   [reduce using rule 67 (EXPR)]
    ','                   [reduce using rule 77 (OP_EXPR)]
    ':'                   reduce using rule 67 (EXPR)
    ':'                   [reduce using rule 77 (OP_EXPR)]
    '.'                   [reduce using rule 67 (EXPR)]
    '.'                   [reduce using rule 77 (OP_EXPR)]
    $default              reduce using rule 67 (EXPR)


State 154

   42 COMPARE_STATEMENT: EXPR T_OP_LT EXPR . ';'
   67 EXPR: EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   70        | EXPR . T_OP_PLUS EXPR
   71        | EXPR . T_OP_MINUS EXPR
   72        | EXPR . T_OP_MUL EXPR
   74        | EXPR . T_OP_BAND EXPR
   75        | EXPR . T_OP_BOR EXPR
   76        | EXPR . T_OP_BXOR EXPR
   77        | EXPR . T_OP_NE EXPR
   78        | EXPR . T_OP_LE EXPR
   79        | EXPR . T_OP_LT EXPR
   79        | EXPR T_OP_LT EXPR .
   80        | EXPR . T_OP_LAND EXPR
   81        | EXPR . T_OP_LOR EXPR
   98 DOT: EXPR . '.' EXPR

    T_OP_PLUS   shift, and go to state 96
    T_OP_MINUS  shift, and go to state 97
    T_OP_MUL    shift, and go to state 98
    T_OP_LE     shift, and go to state 99
    T_OP_EQ     shift, and go to state 100
    T_OP_NE     shift, and go to state 101
    T_OP_LT     shift, and go to state 123
    T_OP_LAND   shift, and go to state 103
    T_OP_LOR    shift, and go to state 104
    T_OP_BAND   shift, and go to state 105
    T_OP_BOR    shift, and go to state 106
    T_OP_BXOR   shift, and go to state 107
    ';'         shift, and go to state 192
    ','         shift, and go to state 114
    '.'         shift, and go to state 115

    T_DOUBLE              reduce using rule 67 (EXPR)
    T_DOUBLE              [reduce using rule 79 (OP_EXPR)]
    T_INT                 reduce using rule 67 (EXPR)
    T_INT                 [reduce using rule 79 (OP_EXPR)]
    T_STRUCT              reduce using rule 67 (EXPR)
    T_STRUCT              [reduce using rule 79 (OP_EXPR)]
    T_BREAK               reduce using rule 67 (EXPR)
    T_BREAK               [reduce using rule 79 (OP_EXPR)]
    T_SWITCH              reduce using rule 67 (EXPR)
    T_SWITCH              [reduce using rule 79 (OP_EXPR)]
    T_CASE                reduce using rule 67 (EXPR)
    T_CASE                [reduce using rule 79 (OP_EXPR)]
    T_ENUM                reduce using rule 67 (EXPR)
    T_ENUM                [reduce using rule 79 (OP_EXPR)]
    T_TYPEDEF             reduce using rule 67 (EXPR)
    T_TYPEDEF             [reduce using rule 79 (OP_EXPR)]
    T_RETURN              reduce using rule 67 (EXPR)
    T_RETURN              [reduce using rule 79 (OP_EXPR)]
    T_FLOAT               reduce using rule 67 (EXPR)
    T_FLOAT               [reduce using rule 79 (OP_EXPR)]
    T_FOR                 reduce using rule 67 (EXPR)
    T_FOR                 [reduce using rule 79 (OP_EXPR)]
    T_SIZEOF              reduce using rule 67 (EXPR)
    T_SIZEOF              [reduce using rule 79 (OP_EXPR)]
    T_IF                  reduce using rule 67 (EXPR)
    T_IF                  [reduce using rule 79 (OP_EXPR)]
    T_WHILE               reduce using rule 67 (EXPR)
    T_WHILE               [reduce using rule 79 (OP_EXPR)]
    T_IDENTIFIER          reduce using rule 67 (EXPR)
    T_IDENTIFIER          [reduce using rule 79 (OP_EXPR)]
    T_STRING_LITERAL      reduce using rule 67 (EXPR)
    T_STRING_LITERAL      [reduce using rule 79 (OP_EXPR)]
    T_INT_CONSTANT        reduce using rule 67 (EXPR)
    T_INT_CONSTANT        [reduce using rule 79 (OP_EXPR)]
    T_FLOAT_CONSTANT      reduce using rule 67 (EXPR)
    T_FLOAT_CONSTANT      [reduce using rule 79 (OP_EXPR)]
    T_CHARACTER_CONSTANT  reduce using rule 67 (EXPR)
    T_CHARACTER_CONSTANT  [reduce using rule 79 (OP_EXPR)]
    T_L_BRACE             reduce using rule 67 (EXPR)
    T_L_BRACE             [reduce using rule 79 (OP_EXPR)]
    T_R_BRACE             reduce using rule 67 (EXPR)
    T_R_BRACE             [reduce using rule 79 (OP_EXPR)]
    T_L_BRACKET           reduce using rule 67 (EXPR)
    T_L_BRACKET           [reduce using rule 79 (OP_EXPR)]
    T_R_BRACKET           reduce using rule 67 (EXPR)
    T_R_BRACKET           [reduce using rule 79 (OP_EXPR)]
    T_OP_PLUS             [reduce using rule 67 (EXPR)]
    T_OP_PLUS             [reduce using rule 79 (OP_EXPR)]
    T_OP_MINUS            [reduce using rule 67 (EXPR)]
    T_OP_MINUS            [reduce using rule 79 (OP_EXPR)]
    T_OP_MUL              [reduce using rule 67 (EXPR)]
    T_OP_MUL              [reduce using rule 79 (OP_EXPR)]
    T_OP_INC              reduce using rule 67 (EXPR)
    T_OP_INC              [reduce using rule 79 (OP_EXPR)]
    T_OP_DEC              reduce using rule 67 (EXPR)
    T_OP_DEC              [reduce using rule 79 (OP_EXPR)]
    T_OP_LE               [reduce using rule 67 (EXPR)]
    T_OP_LE               [reduce using rule 79 (OP_EXPR)]
    T_OP_EQ               [reduce using rule 67 (EXPR)]
    T_OP_EQ               [reduce using rule 79 (OP_EXPR)]
    T_OP_NE               [reduce using rule 67 (EXPR)]
    T_OP_NE               [reduce using rule 79 (OP_EXPR)]
    T_OP_LT               [reduce using rule 67 (EXPR)]
    T_OP_LT               [reduce using rule 79 (OP_EXPR)]
    T_OP_LAND             [reduce using rule 67 (EXPR)]
    T_OP_LAND             [reduce using rule 79 (OP_EXPR)]
    T_OP_LOR              [reduce using rule 67 (EXPR)]
    T_OP_LOR              [reduce using rule 79 (OP_EXPR)]
    T_OP_LNOT             reduce using rule 67 (EXPR)
    T_OP_LNOT             [reduce using rule 79 (OP_EXPR)]
    T_OP_BAND             [reduce using rule 67 (EXPR)]
    T_OP_BAND             [reduce using rule 79 (OP_EXPR)]
    T_OP_BOR              [reduce using rule 67 (EXPR)]
    T_OP_BOR              [reduce using rule 79 (OP_EXPR)]
    T_OP_BXOR             [reduce using rule 67 (EXPR)]
    T_OP_BXOR             [reduce using rule 79 (OP_EXPR)]
    T_ASSIGN              reduce using rule 67 (EXPR)
    T_ASSIGN              [reduce using rule 79 (OP_EXPR)]
    T_ADD_ASSIGN          reduce using rule 67 (EXPR)
    T_ADD_ASSIGN          [reduce using rule 79 (OP_EXPR)]
    T_SUB_ASSIGN          reduce using rule 67 (EXPR)
    T_SUB_ASSIGN          [reduce using rule 79 (OP_EXPR)]
    T_MUL_ASSIGN          reduce using rule 67 (EXPR)
    T_MUL_ASSIGN          [reduce using rule 79 (OP_EXPR)]
    T_DIV_ASSIGN          reduce using rule 67 (EXPR)
    T_DIV_ASSIGN          [reduce using rule 79 (OP_EXPR)]
    T_MOD_ASSIGN          reduce using rule 67 (EXPR)
    T_MOD_ASSIGN          [reduce using rule 79 (OP_EXPR)]
    ';'                   [reduce using rule 67 (EXPR)]
    ','                   [reduce using rule 67 (EXPR)]
    ','                   [reduce using rule 79 (OP_EXPR)]
    '.'                   [reduce using rule 67 (EXPR)]
    '.'                   [reduce using rule 79 (OP_EXPR)]
    $default              reduce using rule 67 (EXPR)


State 155

   67 EXPR: EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   70        | EXPR . T_OP_PLUS EXPR
   71        | EXPR . T_OP_MINUS EXPR
   72        | EXPR . T_OP_MUL EXPR
   74        | EXPR . T_OP_BAND EXPR
   75        | EXPR . T_OP_BOR EXPR
   76        | EXPR . T_OP_BXOR EXPR
   77        | EXPR . T_OP_NE EXPR
   78        | EXPR . T_OP_LE EXPR
   79        | EXPR . T_OP_LT EXPR
   80        | EXPR . T_OP_LAND EXPR
   80        | EXPR T_OP_LAND EXPR .
   81        | EXPR . T_OP_LOR EXPR
   98 DOT: EXPR . '.' EXPR

    T_OP_PLUS   shift, and go to state 96
    T_OP_MINUS  shift, and go to state 97
    T_OP_MUL    shift, and go to state 98
    T_OP_LE     shift, and go to state 99
    T_OP_EQ     shift, and go to state 100
    T_OP_NE     shift, and go to state 101
    T_OP_LT     shift, and go to state 123
    T_OP_LAND   shift, and go to state 103
    T_OP_LOR    shift, and go to state 104
    T_OP_BAND   shift, and go to state 105
    T_OP_BOR    shift, and go to state 106
    T_OP_BXOR   shift, and go to state 107
    ','         shift, and go to state 114
    '.'         shift, and go to state 115

    $end                  reduce using rule 67 (EXPR)
    $end                  [reduce using rule 80 (OP_EXPR)]
    T_DOUBLE              reduce using rule 67 (EXPR)
    T_DOUBLE              [reduce using rule 80 (OP_EXPR)]
    T_INT                 reduce using rule 67 (EXPR)
    T_INT                 [reduce using rule 80 (OP_EXPR)]
    T_STRUCT              reduce using rule 67 (EXPR)
    T_STRUCT              [reduce using rule 80 (OP_EXPR)]
    T_BREAK               reduce using rule 67 (EXPR)
    T_BREAK               [reduce using rule 80 (OP_EXPR)]
    T_SWITCH              reduce using rule 67 (EXPR)
    T_SWITCH              [reduce using rule 80 (OP_EXPR)]
    T_CASE                reduce using rule 67 (EXPR)
    T_CASE                [reduce using rule 80 (OP_EXPR)]
    T_ENUM                reduce using rule 67 (EXPR)
    T_ENUM                [reduce using rule 80 (OP_EXPR)]
    T_TYPEDEF             reduce using rule 67 (EXPR)
    T_TYPEDEF             [reduce using rule 80 (OP_EXPR)]
    T_RETURN              reduce using rule 67 (EXPR)
    T_RETURN              [reduce using rule 80 (OP_EXPR)]
    T_FLOAT               reduce using rule 67 (EXPR)
    T_FLOAT               [reduce using rule 80 (OP_EXPR)]
    T_FOR                 reduce using rule 67 (EXPR)
    T_FOR                 [reduce using rule 80 (OP_EXPR)]
    T_SIZEOF              reduce using rule 67 (EXPR)
    T_SIZEOF              [reduce using rule 80 (OP_EXPR)]
    T_IF                  reduce using rule 67 (EXPR)
    T_IF                  [reduce using rule 80 (OP_EXPR)]
    T_WHILE               reduce using rule 67 (EXPR)
    T_WHILE               [reduce using rule 80 (OP_EXPR)]
    T_IDENTIFIER          reduce using rule 67 (EXPR)
    T_IDENTIFIER          [reduce using rule 80 (OP_EXPR)]
    T_STRING_LITERAL      reduce using rule 67 (EXPR)
    T_STRING_LITERAL      [reduce using rule 80 (OP_EXPR)]
    T_INT_CONSTANT        reduce using rule 67 (EXPR)
    T_INT_CONSTANT        [reduce using rule 80 (OP_EXPR)]
    T_FLOAT_CONSTANT      reduce using rule 67 (EXPR)
    T_FLOAT_CONSTANT      [reduce using rule 80 (OP_EXPR)]
    T_CHARACTER_CONSTANT  reduce using rule 67 (EXPR)
    T_CHARACTER_CONSTANT  [reduce using rule 80 (OP_EXPR)]
    T_L_BRACE             reduce using rule 67 (EXPR)
    T_L_BRACE             [reduce using rule 80 (OP_EXPR)]
    T_R_BRACE             reduce using rule 67 (EXPR)
    T_R_BRACE             [reduce using rule 80 (OP_EXPR)]
    T_L_BRACKET           reduce using rule 67 (EXPR)
    T_L_BRACKET           [reduce using rule 80 (OP_EXPR)]
    T_R_BRACKET           reduce using rule 67 (EXPR)
    T_R_BRACKET           [reduce using rule 80 (OP_EXPR)]
    T_R_SQUARE            reduce using rule 67 (EXPR)
    T_R_SQUARE            [reduce using rule 80 (OP_EXPR)]
    T_OP_PLUS             [reduce using rule 67 (EXPR)]
    T_OP_PLUS             [reduce using rule 80 (OP_EXPR)]
    T_OP_MINUS            [reduce using rule 67 (EXPR)]
    T_OP_MINUS            [reduce using rule 80 (OP_EXPR)]
    T_OP_MUL              [reduce using rule 67 (EXPR)]
    T_OP_MUL              [reduce using rule 80 (OP_EXPR)]
    T_OP_INC              reduce using rule 67 (EXPR)
    T_OP_INC              [reduce using rule 80 (OP_EXPR)]
    T_OP_DEC              reduce using rule 67 (EXPR)
    T_OP_DEC              [reduce using rule 80 (OP_EXPR)]
    T_OP_LE               [reduce using rule 67 (EXPR)]
    T_OP_LE               [reduce using rule 80 (OP_EXPR)]
    T_OP_EQ               [reduce using rule 67 (EXPR)]
    T_OP_EQ               [reduce using rule 80 (OP_EXPR)]
    T_OP_NE               [reduce using rule 67 (EXPR)]
    T_OP_NE               [reduce using rule 80 (OP_EXPR)]
    T_OP_LT               [reduce using rule 67 (EXPR)]
    T_OP_LT               [reduce using rule 80 (OP_EXPR)]
    T_OP_LAND             [reduce using rule 67 (EXPR)]
    T_OP_LAND             [reduce using rule 80 (OP_EXPR)]
    T_OP_LOR              [reduce using rule 67 (EXPR)]
    T_OP_LOR              [reduce using rule 80 (OP_EXPR)]
    T_OP_LNOT             reduce using rule 67 (EXPR)
    T_OP_LNOT             [reduce using rule 80 (OP_EXPR)]
    T_OP_BAND             [reduce using rule 67 (EXPR)]
    T_OP_BAND             [reduce using rule 80 (OP_EXPR)]
    T_OP_BOR              [reduce using rule 67 (EXPR)]
    T_OP_BOR              [reduce using rule 80 (OP_EXPR)]
    T_OP_BXOR             [reduce using rule 67 (EXPR)]
    T_OP_BXOR             [reduce using rule 80 (OP_EXPR)]
    T_ASSIGN              reduce using rule 67 (EXPR)
    T_ASSIGN              [reduce using rule 80 (OP_EXPR)]
    T_ADD_ASSIGN          reduce using rule 67 (EXPR)
    T_ADD_ASSIGN          [reduce using rule 80 (OP_EXPR)]
    T_SUB_ASSIGN          reduce using rule 67 (EXPR)
    T_SUB_ASSIGN          [reduce using rule 80 (OP_EXPR)]
    T_MUL_ASSIGN          reduce using rule 67 (EXPR)
    T_MUL_ASSIGN          [reduce using rule 80 (OP_EXPR)]
    T_DIV_ASSIGN          reduce using rule 67 (EXPR)
    T_DIV_ASSIGN          [reduce using rule 80 (OP_EXPR)]
    T_MOD_ASSIGN          reduce using rule 67 (EXPR)
    T_MOD_ASSIGN          [reduce using rule 80 (OP_EXPR)]
    ';'                   reduce using rule 67 (EXPR)
    ';'                   [reduce using rule 80 (OP_EXPR)]
    ','                   [reduce using rule 67 (EXPR)]
    ','                   [reduce using rule 80 (OP_EXPR)]
    ':'                   reduce using rule 67 (EXPR)
    ':'                   [reduce using rule 80 (OP_EXPR)]
    '.'                   [reduce using rule 67 (EXPR)]
    '.'                   [reduce using rule 80 (OP_EXPR)]
    $default              reduce using rule 67 (EXPR)


State 156

   67 EXPR: EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   70        | EXPR . T_OP_PLUS EXPR
   71        | EXPR . T_OP_MINUS EXPR
   72        | EXPR . T_OP_MUL EXPR
   74        | EXPR . T_OP_BAND EXPR
   75        | EXPR . T_OP_BOR EXPR
   76        | EXPR . T_OP_BXOR EXPR
   77        | EXPR . T_OP_NE EXPR
   78        | EXPR . T_OP_LE EXPR
   79        | EXPR . T_OP_LT EXPR
   80        | EXPR . T_OP_LAND EXPR
   81        | EXPR . T_OP_LOR EXPR
   81        | EXPR T_OP_LOR EXPR .
   98 DOT: EXPR . '.' EXPR

    T_OP_PLUS   shift, and go to state 96
    T_OP_MINUS  shift, and go to state 97
    T_OP_MUL    shift, and go to state 98
    T_OP_LE     shift, and go to state 99
    T_OP_EQ     shift, and go to state 100
    T_OP_NE     shift, and go to state 101
    T_OP_LT     shift, and go to state 123
    T_OP_LAND   shift, and go to state 103
    T_OP_LOR    shift, and go to state 104
    T_OP_BAND   shift, and go to state 105
    T_OP_BOR    shift, and go to state 106
    T_OP_BXOR   shift, and go to state 107
    ','         shift, and go to state 114
    '.'         shift, and go to state 115

    $end                  reduce using rule 67 (EXPR)
    $end                  [reduce using rule 81 (OP_EXPR)]
    T_DOUBLE              reduce using rule 67 (EXPR)
    T_DOUBLE              [reduce using rule 81 (OP_EXPR)]
    T_INT                 reduce using rule 67 (EXPR)
    T_INT                 [reduce using rule 81 (OP_EXPR)]
    T_STRUCT              reduce using rule 67 (EXPR)
    T_STRUCT              [reduce using rule 81 (OP_EXPR)]
    T_BREAK               reduce using rule 67 (EXPR)
    T_BREAK               [reduce using rule 81 (OP_EXPR)]
    T_SWITCH              reduce using rule 67 (EXPR)
    T_SWITCH              [reduce using rule 81 (OP_EXPR)]
    T_CASE                reduce using rule 67 (EXPR)
    T_CASE                [reduce using rule 81 (OP_EXPR)]
    T_ENUM                reduce using rule 67 (EXPR)
    T_ENUM                [reduce using rule 81 (OP_EXPR)]
    T_TYPEDEF             reduce using rule 67 (EXPR)
    T_TYPEDEF             [reduce using rule 81 (OP_EXPR)]
    T_RETURN              reduce using rule 67 (EXPR)
    T_RETURN              [reduce using rule 81 (OP_EXPR)]
    T_FLOAT               reduce using rule 67 (EXPR)
    T_FLOAT               [reduce using rule 81 (OP_EXPR)]
    T_FOR                 reduce using rule 67 (EXPR)
    T_FOR                 [reduce using rule 81 (OP_EXPR)]
    T_SIZEOF              reduce using rule 67 (EXPR)
    T_SIZEOF              [reduce using rule 81 (OP_EXPR)]
    T_IF                  reduce using rule 67 (EXPR)
    T_IF                  [reduce using rule 81 (OP_EXPR)]
    T_WHILE               reduce using rule 67 (EXPR)
    T_WHILE               [reduce using rule 81 (OP_EXPR)]
    T_IDENTIFIER          reduce using rule 67 (EXPR)
    T_IDENTIFIER          [reduce using rule 81 (OP_EXPR)]
    T_STRING_LITERAL      reduce using rule 67 (EXPR)
    T_STRING_LITERAL      [reduce using rule 81 (OP_EXPR)]
    T_INT_CONSTANT        reduce using rule 67 (EXPR)
    T_INT_CONSTANT        [reduce using rule 81 (OP_EXPR)]
    T_FLOAT_CONSTANT      reduce using rule 67 (EXPR)
    T_FLOAT_CONSTANT      [reduce using rule 81 (OP_EXPR)]
    T_CHARACTER_CONSTANT  reduce using rule 67 (EXPR)
    T_CHARACTER_CONSTANT  [reduce using rule 81 (OP_EXPR)]
    T_L_BRACE             reduce using rule 67 (EXPR)
    T_L_BRACE             [reduce using rule 81 (OP_EXPR)]
    T_R_BRACE             reduce using rule 67 (EXPR)
    T_R_BRACE             [reduce using rule 81 (OP_EXPR)]
    T_L_BRACKET           reduce using rule 67 (EXPR)
    T_L_BRACKET           [reduce using rule 81 (OP_EXPR)]
    T_R_BRACKET           reduce using rule 67 (EXPR)
    T_R_BRACKET           [reduce using rule 81 (OP_EXPR)]
    T_R_SQUARE            reduce using rule 67 (EXPR)
    T_R_SQUARE            [reduce using rule 81 (OP_EXPR)]
    T_OP_PLUS             [reduce using rule 67 (EXPR)]
    T_OP_PLUS             [reduce using rule 81 (OP_EXPR)]
    T_OP_MINUS            [reduce using rule 67 (EXPR)]
    T_OP_MINUS            [reduce using rule 81 (OP_EXPR)]
    T_OP_MUL              [reduce using rule 67 (EXPR)]
    T_OP_MUL              [reduce using rule 81 (OP_EXPR)]
    T_OP_INC              reduce using rule 67 (EXPR)
    T_OP_INC              [reduce using rule 81 (OP_EXPR)]
    T_OP_DEC              reduce using rule 67 (EXPR)
    T_OP_DEC              [reduce using rule 81 (OP_EXPR)]
    T_OP_LE               [reduce using rule 67 (EXPR)]
    T_OP_LE               [reduce using rule 81 (OP_EXPR)]
    T_OP_EQ               [reduce using rule 67 (EXPR)]
    T_OP_EQ               [reduce using rule 81 (OP_EXPR)]
    T_OP_NE               [reduce using rule 67 (EXPR)]
    T_OP_NE               [reduce using rule 81 (OP_EXPR)]
    T_OP_LT               [reduce using rule 67 (EXPR)]
    T_OP_LT               [reduce using rule 81 (OP_EXPR)]
    T_OP_LAND             [reduce using rule 67 (EXPR)]
    T_OP_LAND             [reduce using rule 81 (OP_EXPR)]
    T_OP_LOR              [reduce using rule 67 (EXPR)]
    T_OP_LOR              [reduce using rule 81 (OP_EXPR)]
    T_OP_LNOT             reduce using rule 67 (EXPR)
    T_OP_LNOT             [reduce using rule 81 (OP_EXPR)]
    T_OP_BAND             [reduce using rule 67 (EXPR)]
    T_OP_BAND             [reduce using rule 81 (OP_EXPR)]
    T_OP_BOR              [reduce using rule 67 (EXPR)]
    T_OP_BOR              [reduce using rule 81 (OP_EXPR)]
    T_OP_BXOR             [reduce using rule 67 (EXPR)]
    T_OP_BXOR             [reduce using rule 81 (OP_EXPR)]
    T_ASSIGN              reduce using rule 67 (EXPR)
    T_ASSIGN              [reduce using rule 81 (OP_EXPR)]
    T_ADD_ASSIGN          reduce using rule 67 (EXPR)
    T_ADD_ASSIGN          [reduce using rule 81 (OP_EXPR)]
    T_SUB_ASSIGN          reduce using rule 67 (EXPR)
    T_SUB_ASSIGN          [reduce using rule 81 (OP_EXPR)]
    T_MUL_ASSIGN          reduce using rule 67 (EXPR)
    T_MUL_ASSIGN          [reduce using rule 81 (OP_EXPR)]
    T_DIV_ASSIGN          reduce using rule 67 (EXPR)
    T_DIV_ASSIGN          [reduce using rule 81 (OP_EXPR)]
    T_MOD_ASSIGN          reduce using rule 67 (EXPR)
    T_MOD_ASSIGN          [reduce using rule 81 (OP_EXPR)]
    ';'                   reduce using rule 67 (EXPR)
    ';'                   [reduce using rule 81 (OP_EXPR)]
    ','                   [reduce using rule 67 (EXPR)]
    ','                   [reduce using rule 81 (OP_EXPR)]
    ':'                   reduce using rule 67 (EXPR)
    ':'                   [reduce using rule 81 (OP_EXPR)]
    '.'                   [reduce using rule 67 (EXPR)]
    '.'                   [reduce using rule 81 (OP_EXPR)]
    $default              reduce using rule 67 (EXPR)


State 157

   67 EXPR: EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   70        | EXPR . T_OP_PLUS EXPR
   71        | EXPR . T_OP_MINUS EXPR
   72        | EXPR . T_OP_MUL EXPR
   74        | EXPR . T_OP_BAND EXPR
   74        | EXPR T_OP_BAND EXPR .
   75        | EXPR . T_OP_BOR EXPR
   76        | EXPR . T_OP_BXOR EXPR
   77        | EXPR . T_OP_NE EXPR
   78        | EXPR . T_OP_LE EXPR
   79        | EXPR . T_OP_LT EXPR
   80        | EXPR . T_OP_LAND EXPR
   81        | EXPR . T_OP_LOR EXPR
   98 DOT: EXPR . '.' EXPR

    T_OP_PLUS   shift, and go to state 96
    T_OP_MINUS  shift, and go to state 97
    T_OP_MUL    shift, and go to state 98
    T_OP_LE     shift, and go to state 99
    T_OP_EQ     shift, and go to state 100
    T_OP_NE     shift, and go to state 101
    T_OP_LT     shift, and go to state 123
    T_OP_LAND   shift, and go to state 103
    T_OP_LOR    shift, and go to state 104
    T_OP_BAND   shift, and go to state 105
    T_OP_BOR    shift, and go to state 106
    T_OP_BXOR   shift, and go to state 107
    ','         shift, and go to state 114
    '.'         shift, and go to state 115

    $end                  reduce using rule 67 (EXPR)
    $end                  [reduce using rule 74 (OP_EXPR)]
    T_DOUBLE              reduce using rule 67 (EXPR)
    T_DOUBLE              [reduce using rule 74 (OP_EXPR)]
    T_INT                 reduce using rule 67 (EXPR)
    T_INT                 [reduce using rule 74 (OP_EXPR)]
    T_STRUCT              reduce using rule 67 (EXPR)
    T_STRUCT              [reduce using rule 74 (OP_EXPR)]
    T_BREAK               reduce using rule 67 (EXPR)
    T_BREAK               [reduce using rule 74 (OP_EXPR)]
    T_SWITCH              reduce using rule 67 (EXPR)
    T_SWITCH              [reduce using rule 74 (OP_EXPR)]
    T_CASE                reduce using rule 67 (EXPR)
    T_CASE                [reduce using rule 74 (OP_EXPR)]
    T_ENUM                reduce using rule 67 (EXPR)
    T_ENUM                [reduce using rule 74 (OP_EXPR)]
    T_TYPEDEF             reduce using rule 67 (EXPR)
    T_TYPEDEF             [reduce using rule 74 (OP_EXPR)]
    T_RETURN              reduce using rule 67 (EXPR)
    T_RETURN              [reduce using rule 74 (OP_EXPR)]
    T_FLOAT               reduce using rule 67 (EXPR)
    T_FLOAT               [reduce using rule 74 (OP_EXPR)]
    T_FOR                 reduce using rule 67 (EXPR)
    T_FOR                 [reduce using rule 74 (OP_EXPR)]
    T_SIZEOF              reduce using rule 67 (EXPR)
    T_SIZEOF              [reduce using rule 74 (OP_EXPR)]
    T_IF                  reduce using rule 67 (EXPR)
    T_IF                  [reduce using rule 74 (OP_EXPR)]
    T_WHILE               reduce using rule 67 (EXPR)
    T_WHILE               [reduce using rule 74 (OP_EXPR)]
    T_IDENTIFIER          reduce using rule 67 (EXPR)
    T_IDENTIFIER          [reduce using rule 74 (OP_EXPR)]
    T_STRING_LITERAL      reduce using rule 67 (EXPR)
    T_STRING_LITERAL      [reduce using rule 74 (OP_EXPR)]
    T_INT_CONSTANT        reduce using rule 67 (EXPR)
    T_INT_CONSTANT        [reduce using rule 74 (OP_EXPR)]
    T_FLOAT_CONSTANT      reduce using rule 67 (EXPR)
    T_FLOAT_CONSTANT      [reduce using rule 74 (OP_EXPR)]
    T_CHARACTER_CONSTANT  reduce using rule 67 (EXPR)
    T_CHARACTER_CONSTANT  [reduce using rule 74 (OP_EXPR)]
    T_L_BRACE             reduce using rule 67 (EXPR)
    T_L_BRACE             [reduce using rule 74 (OP_EXPR)]
    T_R_BRACE             reduce using rule 67 (EXPR)
    T_R_BRACE             [reduce using rule 74 (OP_EXPR)]
    T_L_BRACKET           reduce using rule 67 (EXPR)
    T_L_BRACKET           [reduce using rule 74 (OP_EXPR)]
    T_R_BRACKET           reduce using rule 67 (EXPR)
    T_R_BRACKET           [reduce using rule 74 (OP_EXPR)]
    T_R_SQUARE            reduce using rule 67 (EXPR)
    T_R_SQUARE            [reduce using rule 74 (OP_EXPR)]
    T_OP_PLUS             [reduce using rule 67 (EXPR)]
    T_OP_PLUS             [reduce using rule 74 (OP_EXPR)]
    T_OP_MINUS            [reduce using rule 67 (EXPR)]
    T_OP_MINUS            [reduce using rule 74 (OP_EXPR)]
    T_OP_MUL              [reduce using rule 67 (EXPR)]
    T_OP_MUL              [reduce using rule 74 (OP_EXPR)]
    T_OP_INC              reduce using rule 67 (EXPR)
    T_OP_INC              [reduce using rule 74 (OP_EXPR)]
    T_OP_DEC              reduce using rule 67 (EXPR)
    T_OP_DEC              [reduce using rule 74 (OP_EXPR)]
    T_OP_LE               [reduce using rule 67 (EXPR)]
    T_OP_LE               [reduce using rule 74 (OP_EXPR)]
    T_OP_EQ               [reduce using rule 67 (EXPR)]
    T_OP_EQ               [reduce using rule 74 (OP_EXPR)]
    T_OP_NE               [reduce using rule 67 (EXPR)]
    T_OP_NE               [reduce using rule 74 (OP_EXPR)]
    T_OP_LT               [reduce using rule 67 (EXPR)]
    T_OP_LT               [reduce using rule 74 (OP_EXPR)]
    T_OP_LAND             [reduce using rule 67 (EXPR)]
    T_OP_LAND             [reduce using rule 74 (OP_EXPR)]
    T_OP_LOR              [reduce using rule 67 (EXPR)]
    T_OP_LOR              [reduce using rule 74 (OP_EXPR)]
    T_OP_LNOT             reduce using rule 67 (EXPR)
    T_OP_LNOT             [reduce using rule 74 (OP_EXPR)]
    T_OP_BAND             [reduce using rule 67 (EXPR)]
    T_OP_BAND             [reduce using rule 74 (OP_EXPR)]
    T_OP_BOR              [reduce using rule 67 (EXPR)]
    T_OP_BOR              [reduce using rule 74 (OP_EXPR)]
    T_OP_BXOR             [reduce using rule 67 (EXPR)]
    T_OP_BXOR             [reduce using rule 74 (OP_EXPR)]
    T_ASSIGN              reduce using rule 67 (EXPR)
    T_ASSIGN              [reduce using rule 74 (OP_EXPR)]
    T_ADD_ASSIGN          reduce using rule 67 (EXPR)
    T_ADD_ASSIGN          [reduce using rule 74 (OP_EXPR)]
    T_SUB_ASSIGN          reduce using rule 67 (EXPR)
    T_SUB_ASSIGN          [reduce using rule 74 (OP_EXPR)]
    T_MUL_ASSIGN          reduce using rule 67 (EXPR)
    T_MUL_ASSIGN          [reduce using rule 74 (OP_EXPR)]
    T_DIV_ASSIGN          reduce using rule 67 (EXPR)
    T_DIV_ASSIGN          [reduce using rule 74 (OP_EXPR)]
    T_MOD_ASSIGN          reduce using rule 67 (EXPR)
    T_MOD_ASSIGN          [reduce using rule 74 (OP_EXPR)]
    ';'                   reduce using rule 67 (EXPR)
    ';'                   [reduce using rule 74 (OP_EXPR)]
    ','                   [reduce using rule 67 (EXPR)]
    ','                   [reduce using rule 74 (OP_EXPR)]
    ':'                   reduce using rule 67 (EXPR)
    ':'                   [reduce using rule 74 (OP_EXPR)]
    '.'                   [reduce using rule 67 (EXPR)]
    '.'                   [reduce using rule 74 (OP_EXPR)]
    $default              reduce using rule 67 (EXPR)


State 158

   67 EXPR: EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   70        | EXPR . T_OP_PLUS EXPR
   71        | EXPR . T_OP_MINUS EXPR
   72        | EXPR . T_OP_MUL EXPR
   74        | EXPR . T_OP_BAND EXPR
   75        | EXPR . T_OP_BOR EXPR
   75        | EXPR T_OP_BOR EXPR .
   76        | EXPR . T_OP_BXOR EXPR
   77        | EXPR . T_OP_NE EXPR
   78        | EXPR . T_OP_LE EXPR
   79        | EXPR . T_OP_LT EXPR
   80        | EXPR . T_OP_LAND EXPR
   81        | EXPR . T_OP_LOR EXPR
   98 DOT: EXPR . '.' EXPR

    T_OP_PLUS   shift, and go to state 96
    T_OP_MINUS  shift, and go to state 97
    T_OP_MUL    shift, and go to state 98
    T_OP_LE     shift, and go to state 99
    T_OP_EQ     shift, and go to state 100
    T_OP_NE     shift, and go to state 101
    T_OP_LT     shift, and go to state 123
    T_OP_LAND   shift, and go to state 103
    T_OP_LOR    shift, and go to state 104
    T_OP_BAND   shift, and go to state 105
    T_OP_BOR    shift, and go to state 106
    T_OP_BXOR   shift, and go to state 107
    ','         shift, and go to state 114
    '.'         shift, and go to state 115

    $end                  reduce using rule 67 (EXPR)
    $end                  [reduce using rule 75 (OP_EXPR)]
    T_DOUBLE              reduce using rule 67 (EXPR)
    T_DOUBLE              [reduce using rule 75 (OP_EXPR)]
    T_INT                 reduce using rule 67 (EXPR)
    T_INT                 [reduce using rule 75 (OP_EXPR)]
    T_STRUCT              reduce using rule 67 (EXPR)
    T_STRUCT              [reduce using rule 75 (OP_EXPR)]
    T_BREAK               reduce using rule 67 (EXPR)
    T_BREAK               [reduce using rule 75 (OP_EXPR)]
    T_SWITCH              reduce using rule 67 (EXPR)
    T_SWITCH              [reduce using rule 75 (OP_EXPR)]
    T_CASE                reduce using rule 67 (EXPR)
    T_CASE                [reduce using rule 75 (OP_EXPR)]
    T_ENUM                reduce using rule 67 (EXPR)
    T_ENUM                [reduce using rule 75 (OP_EXPR)]
    T_TYPEDEF             reduce using rule 67 (EXPR)
    T_TYPEDEF             [reduce using rule 75 (OP_EXPR)]
    T_RETURN              reduce using rule 67 (EXPR)
    T_RETURN              [reduce using rule 75 (OP_EXPR)]
    T_FLOAT               reduce using rule 67 (EXPR)
    T_FLOAT               [reduce using rule 75 (OP_EXPR)]
    T_FOR                 reduce using rule 67 (EXPR)
    T_FOR                 [reduce using rule 75 (OP_EXPR)]
    T_SIZEOF              reduce using rule 67 (EXPR)
    T_SIZEOF              [reduce using rule 75 (OP_EXPR)]
    T_IF                  reduce using rule 67 (EXPR)
    T_IF                  [reduce using rule 75 (OP_EXPR)]
    T_WHILE               reduce using rule 67 (EXPR)
    T_WHILE               [reduce using rule 75 (OP_EXPR)]
    T_IDENTIFIER          reduce using rule 67 (EXPR)
    T_IDENTIFIER          [reduce using rule 75 (OP_EXPR)]
    T_STRING_LITERAL      reduce using rule 67 (EXPR)
    T_STRING_LITERAL      [reduce using rule 75 (OP_EXPR)]
    T_INT_CONSTANT        reduce using rule 67 (EXPR)
    T_INT_CONSTANT        [reduce using rule 75 (OP_EXPR)]
    T_FLOAT_CONSTANT      reduce using rule 67 (EXPR)
    T_FLOAT_CONSTANT      [reduce using rule 75 (OP_EXPR)]
    T_CHARACTER_CONSTANT  reduce using rule 67 (EXPR)
    T_CHARACTER_CONSTANT  [reduce using rule 75 (OP_EXPR)]
    T_L_BRACE             reduce using rule 67 (EXPR)
    T_L_BRACE             [reduce using rule 75 (OP_EXPR)]
    T_R_BRACE             reduce using rule 67 (EXPR)
    T_R_BRACE             [reduce using rule 75 (OP_EXPR)]
    T_L_BRACKET           reduce using rule 67 (EXPR)
    T_L_BRACKET           [reduce using rule 75 (OP_EXPR)]
    T_R_BRACKET           reduce using rule 67 (EXPR)
    T_R_BRACKET           [reduce using rule 75 (OP_EXPR)]
    T_R_SQUARE            reduce using rule 67 (EXPR)
    T_R_SQUARE            [reduce using rule 75 (OP_EXPR)]
    T_OP_PLUS             [reduce using rule 67 (EXPR)]
    T_OP_PLUS             [reduce using rule 75 (OP_EXPR)]
    T_OP_MINUS            [reduce using rule 67 (EXPR)]
    T_OP_MINUS            [reduce using rule 75 (OP_EXPR)]
    T_OP_MUL              [reduce using rule 67 (EXPR)]
    T_OP_MUL              [reduce using rule 75 (OP_EXPR)]
    T_OP_INC              reduce using rule 67 (EXPR)
    T_OP_INC              [reduce using rule 75 (OP_EXPR)]
    T_OP_DEC              reduce using rule 67 (EXPR)
    T_OP_DEC              [reduce using rule 75 (OP_EXPR)]
    T_OP_LE               [reduce using rule 67 (EXPR)]
    T_OP_LE               [reduce using rule 75 (OP_EXPR)]
    T_OP_EQ               [reduce using rule 67 (EXPR)]
    T_OP_EQ               [reduce using rule 75 (OP_EXPR)]
    T_OP_NE               [reduce using rule 67 (EXPR)]
    T_OP_NE               [reduce using rule 75 (OP_EXPR)]
    T_OP_LT               [reduce using rule 67 (EXPR)]
    T_OP_LT               [reduce using rule 75 (OP_EXPR)]
    T_OP_LAND             [reduce using rule 67 (EXPR)]
    T_OP_LAND             [reduce using rule 75 (OP_EXPR)]
    T_OP_LOR              [reduce using rule 67 (EXPR)]
    T_OP_LOR              [reduce using rule 75 (OP_EXPR)]
    T_OP_LNOT             reduce using rule 67 (EXPR)
    T_OP_LNOT             [reduce using rule 75 (OP_EXPR)]
    T_OP_BAND             [reduce using rule 67 (EXPR)]
    T_OP_BAND             [reduce using rule 75 (OP_EXPR)]
    T_OP_BOR              [reduce using rule 67 (EXPR)]
    T_OP_BOR              [reduce using rule 75 (OP_EXPR)]
    T_OP_BXOR             [reduce using rule 67 (EXPR)]
    T_OP_BXOR             [reduce using rule 75 (OP_EXPR)]
    T_ASSIGN              reduce using rule 67 (EXPR)
    T_ASSIGN              [reduce using rule 75 (OP_EXPR)]
    T_ADD_ASSIGN          reduce using rule 67 (EXPR)
    T_ADD_ASSIGN          [reduce using rule 75 (OP_EXPR)]
    T_SUB_ASSIGN          reduce using rule 67 (EXPR)
    T_SUB_ASSIGN          [reduce using rule 75 (OP_EXPR)]
    T_MUL_ASSIGN          reduce using rule 67 (EXPR)
    T_MUL_ASSIGN          [reduce using rule 75 (OP_EXPR)]
    T_DIV_ASSIGN          reduce using rule 67 (EXPR)
    T_DIV_ASSIGN          [reduce using rule 75 (OP_EXPR)]
    T_MOD_ASSIGN          reduce using rule 67 (EXPR)
    T_MOD_ASSIGN          [reduce using rule 75 (OP_EXPR)]
    ';'                   reduce using rule 67 (EXPR)
    ';'                   [reduce using rule 75 (OP_EXPR)]
    ','                   [reduce using rule 67 (EXPR)]
    ','                   [reduce using rule 75 (OP_EXPR)]
    ':'                   reduce using rule 67 (EXPR)
    ':'                   [reduce using rule 75 (OP_EXPR)]
    '.'                   [reduce using rule 67 (EXPR)]
    '.'                   [reduce using rule 75 (OP_EXPR)]
    $default              reduce using rule 67 (EXPR)


State 159

   67 EXPR: EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   70        | EXPR . T_OP_PLUS EXPR
   71        | EXPR . T_OP_MINUS EXPR
   72        | EXPR . T_OP_MUL EXPR
   74        | EXPR . T_OP_BAND EXPR
   75        | EXPR . T_OP_BOR EXPR
   76        | EXPR . T_OP_BXOR EXPR
   76        | EXPR T_OP_BXOR EXPR .
   77        | EXPR . T_OP_NE EXPR
   78        | EXPR . T_OP_LE EXPR
   79        | EXPR . T_OP_LT EXPR
   80        | EXPR . T_OP_LAND EXPR
   81        | EXPR . T_OP_LOR EXPR
   98 DOT: EXPR . '.' EXPR

    T_OP_PLUS   shift, and go to state 96
    T_OP_MINUS  shift, and go to state 97
    T_OP_MUL    shift, and go to state 98
    T_OP_LE     shift, and go to state 99
    T_OP_EQ     shift, and go to state 100
    T_OP_NE     shift, and go to state 101
    T_OP_LT     shift, and go to state 123
    T_OP_LAND   shift, and go to state 103
    T_OP_LOR    shift, and go to state 104
    T_OP_BAND   shift, and go to state 105
    T_OP_BOR    shift, and go to state 106
    T_OP_BXOR   shift, and go to state 107
    ','         shift, and go to state 114
    '.'         shift, and go to state 115

    $end                  reduce using rule 67 (EXPR)
    $end                  [reduce using rule 76 (OP_EXPR)]
    T_DOUBLE              reduce using rule 67 (EXPR)
    T_DOUBLE              [reduce using rule 76 (OP_EXPR)]
    T_INT                 reduce using rule 67 (EXPR)
    T_INT                 [reduce using rule 76 (OP_EXPR)]
    T_STRUCT              reduce using rule 67 (EXPR)
    T_STRUCT              [reduce using rule 76 (OP_EXPR)]
    T_BREAK               reduce using rule 67 (EXPR)
    T_BREAK               [reduce using rule 76 (OP_EXPR)]
    T_SWITCH              reduce using rule 67 (EXPR)
    T_SWITCH              [reduce using rule 76 (OP_EXPR)]
    T_CASE                reduce using rule 67 (EXPR)
    T_CASE                [reduce using rule 76 (OP_EXPR)]
    T_ENUM                reduce using rule 67 (EXPR)
    T_ENUM                [reduce using rule 76 (OP_EXPR)]
    T_TYPEDEF             reduce using rule 67 (EXPR)
    T_TYPEDEF             [reduce using rule 76 (OP_EXPR)]
    T_RETURN              reduce using rule 67 (EXPR)
    T_RETURN              [reduce using rule 76 (OP_EXPR)]
    T_FLOAT               reduce using rule 67 (EXPR)
    T_FLOAT               [reduce using rule 76 (OP_EXPR)]
    T_FOR                 reduce using rule 67 (EXPR)
    T_FOR                 [reduce using rule 76 (OP_EXPR)]
    T_SIZEOF              reduce using rule 67 (EXPR)
    T_SIZEOF              [reduce using rule 76 (OP_EXPR)]
    T_IF                  reduce using rule 67 (EXPR)
    T_IF                  [reduce using rule 76 (OP_EXPR)]
    T_WHILE               reduce using rule 67 (EXPR)
    T_WHILE               [reduce using rule 76 (OP_EXPR)]
    T_IDENTIFIER          reduce using rule 67 (EXPR)
    T_IDENTIFIER          [reduce using rule 76 (OP_EXPR)]
    T_STRING_LITERAL      reduce using rule 67 (EXPR)
    T_STRING_LITERAL      [reduce using rule 76 (OP_EXPR)]
    T_INT_CONSTANT        reduce using rule 67 (EXPR)
    T_INT_CONSTANT        [reduce using rule 76 (OP_EXPR)]
    T_FLOAT_CONSTANT      reduce using rule 67 (EXPR)
    T_FLOAT_CONSTANT      [reduce using rule 76 (OP_EXPR)]
    T_CHARACTER_CONSTANT  reduce using rule 67 (EXPR)
    T_CHARACTER_CONSTANT  [reduce using rule 76 (OP_EXPR)]
    T_L_BRACE             reduce using rule 67 (EXPR)
    T_L_BRACE             [reduce using rule 76 (OP_EXPR)]
    T_R_BRACE             reduce using rule 67 (EXPR)
    T_R_BRACE             [reduce using rule 76 (OP_EXPR)]
    T_L_BRACKET           reduce using rule 67 (EXPR)
    T_L_BRACKET           [reduce using rule 76 (OP_EXPR)]
    T_R_BRACKET           reduce using rule 67 (EXPR)
    T_R_BRACKET           [reduce using rule 76 (OP_EXPR)]
    T_R_SQUARE            reduce using rule 67 (EXPR)
    T_R_SQUARE            [reduce using rule 76 (OP_EXPR)]
    T_OP_PLUS             [reduce using rule 67 (EXPR)]
    T_OP_PLUS             [reduce using rule 76 (OP_EXPR)]
    T_OP_MINUS            [reduce using rule 67 (EXPR)]
    T_OP_MINUS            [reduce using rule 76 (OP_EXPR)]
    T_OP_MUL              [reduce using rule 67 (EXPR)]
    T_OP_MUL              [reduce using rule 76 (OP_EXPR)]
    T_OP_INC              reduce using rule 67 (EXPR)
    T_OP_INC              [reduce using rule 76 (OP_EXPR)]
    T_OP_DEC              reduce using rule 67 (EXPR)
    T_OP_DEC              [reduce using rule 76 (OP_EXPR)]
    T_OP_LE               [reduce using rule 67 (EXPR)]
    T_OP_LE               [reduce using rule 76 (OP_EXPR)]
    T_OP_EQ               [reduce using rule 67 (EXPR)]
    T_OP_EQ               [reduce using rule 76 (OP_EXPR)]
    T_OP_NE               [reduce using rule 67 (EXPR)]
    T_OP_NE               [reduce using rule 76 (OP_EXPR)]
    T_OP_LT               [reduce using rule 67 (EXPR)]
    T_OP_LT               [reduce using rule 76 (OP_EXPR)]
    T_OP_LAND             [reduce using rule 67 (EXPR)]
    T_OP_LAND             [reduce using rule 76 (OP_EXPR)]
    T_OP_LOR              [reduce using rule 67 (EXPR)]
    T_OP_LOR              [reduce using rule 76 (OP_EXPR)]
    T_OP_LNOT             reduce using rule 67 (EXPR)
    T_OP_LNOT             [reduce using rule 76 (OP_EXPR)]
    T_OP_BAND             [reduce using rule 67 (EXPR)]
    T_OP_BAND             [reduce using rule 76 (OP_EXPR)]
    T_OP_BOR              [reduce using rule 67 (EXPR)]
    T_OP_BOR              [reduce using rule 76 (OP_EXPR)]
    T_OP_BXOR             [reduce using rule 67 (EXPR)]
    T_OP_BXOR             [reduce using rule 76 (OP_EXPR)]
    T_ASSIGN              reduce using rule 67 (EXPR)
    T_ASSIGN              [reduce using rule 76 (OP_EXPR)]
    T_ADD_ASSIGN          reduce using rule 67 (EXPR)
    T_ADD_ASSIGN          [reduce using rule 76 (OP_EXPR)]
    T_SUB_ASSIGN          reduce using rule 67 (EXPR)
    T_SUB_ASSIGN          [reduce using rule 76 (OP_EXPR)]
    T_MUL_ASSIGN          reduce using rule 67 (EXPR)
    T_MUL_ASSIGN          [reduce using rule 76 (OP_EXPR)]
    T_DIV_ASSIGN          reduce using rule 67 (EXPR)
    T_DIV_ASSIGN          [reduce using rule 76 (OP_EXPR)]
    T_MOD_ASSIGN          reduce using rule 67 (EXPR)
    T_MOD_ASSIGN          [reduce using rule 76 (OP_EXPR)]
    ';'                   reduce using rule 67 (EXPR)
    ';'                   [reduce using rule 76 (OP_EXPR)]
    ','                   [reduce using rule 67 (EXPR)]
    ','                   [reduce using rule 76 (OP_EXPR)]
    ':'                   reduce using rule 67 (EXPR)
    ':'                   [reduce using rule 76 (OP_EXPR)]
    '.'                   [reduce using rule 67 (EXPR)]
    '.'                   [reduce using rule 76 (OP_EXPR)]
    $default              reduce using rule 67 (EXPR)


State 160

   36 ASSIGNMENT_STATEMENT: EXPR T_ASSIGN EXPR . ';'
   37                     | EXPR T_ASSIGN EXPR . ','
   38                     | EXPR T_ASSIGN EXPR .
   67 EXPR: EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   70        | EXPR . T_OP_PLUS EXPR
   71        | EXPR . T_OP_MINUS EXPR
   72        | EXPR . T_OP_MUL EXPR
   74        | EXPR . T_OP_BAND EXPR
   75        | EXPR . T_OP_BOR EXPR
   76        | EXPR . T_OP_BXOR EXPR
   77        | EXPR . T_OP_NE EXPR
   78        | EXPR . T_OP_LE EXPR
   79        | EXPR . T_OP_LT EXPR
   80        | EXPR . T_OP_LAND EXPR
   81        | EXPR . T_OP_LOR EXPR
   98 DOT: EXPR . '.' EXPR

    T_OP_PLUS   shift, and go to state 96
    T_OP_MINUS  shift, and go to state 97
    T_OP_MUL    shift, and go to state 98
    T_OP_LE     shift, and go to state 99
    T_OP_EQ     shift, and go to state 100
    T_OP_NE     shift, and go to state 101
    T_OP_LT     shift, and go to state 123
    T_OP_LAND   shift, and go to state 103
    T_OP_LOR    shift, and go to state 104
    T_OP_BAND   shift, and go to state 105
    T_OP_BOR    shift, and go to state 106
    T_OP_BXOR   shift, and go to state 107
    ';'         shift, and go to state 193
    ','         shift, and go to state 194
    '.'         shift, and go to state 115

    $end                  reduce using rule 38 (ASSIGNMENT_STATEMENT)
    $end                  [reduce using rule 67 (EXPR)]
    T_DOUBLE              reduce using rule 38 (ASSIGNMENT_STATEMENT)
    T_DOUBLE              [reduce using rule 67 (EXPR)]
    T_INT                 reduce using rule 38 (ASSIGNMENT_STATEMENT)
    T_INT                 [reduce using rule 67 (EXPR)]
    T_STRUCT              reduce using rule 38 (ASSIGNMENT_STATEMENT)
    T_STRUCT              [reduce using rule 67 (EXPR)]
    T_BREAK               reduce using rule 38 (ASSIGNMENT_STATEMENT)
    T_BREAK               [reduce using rule 67 (EXPR)]
    T_SWITCH              reduce using rule 38 (ASSIGNMENT_STATEMENT)
    T_SWITCH              [reduce using rule 67 (EXPR)]
    T_CASE                reduce using rule 38 (ASSIGNMENT_STATEMENT)
    T_CASE                [reduce using rule 67 (EXPR)]
    T_ENUM                reduce using rule 38 (ASSIGNMENT_STATEMENT)
    T_ENUM                [reduce using rule 67 (EXPR)]
    T_TYPEDEF             reduce using rule 38 (ASSIGNMENT_STATEMENT)
    T_TYPEDEF             [reduce using rule 67 (EXPR)]
    T_RETURN              reduce using rule 38 (ASSIGNMENT_STATEMENT)
    T_RETURN              [reduce using rule 67 (EXPR)]
    T_FLOAT               reduce using rule 38 (ASSIGNMENT_STATEMENT)
    T_FLOAT               [reduce using rule 67 (EXPR)]
    T_FOR                 reduce using rule 38 (ASSIGNMENT_STATEMENT)
    T_FOR                 [reduce using rule 67 (EXPR)]
    T_SIZEOF              reduce using rule 38 (ASSIGNMENT_STATEMENT)
    T_SIZEOF              [reduce using rule 67 (EXPR)]
    T_IF                  reduce using rule 38 (ASSIGNMENT_STATEMENT)
    T_IF                  [reduce using rule 67 (EXPR)]
    T_WHILE               reduce using rule 38 (ASSIGNMENT_STATEMENT)
    T_WHILE               [reduce using rule 67 (EXPR)]
    T_IDENTIFIER          reduce using rule 38 (ASSIGNMENT_STATEMENT)
    T_IDENTIFIER          [reduce using rule 67 (EXPR)]
    T_STRING_LITERAL      reduce using rule 38 (ASSIGNMENT_STATEMENT)
    T_STRING_LITERAL      [reduce using rule 67 (EXPR)]
    T_INT_CONSTANT        reduce using rule 38 (ASSIGNMENT_STATEMENT)
    T_INT_CONSTANT        [reduce using rule 67 (EXPR)]
    T_FLOAT_CONSTANT      reduce using rule 38 (ASSIGNMENT_STATEMENT)
    T_FLOAT_CONSTANT      [reduce using rule 67 (EXPR)]
    T_CHARACTER_CONSTANT  reduce using rule 38 (ASSIGNMENT_STATEMENT)
    T_CHARACTER_CONSTANT  [reduce using rule 67 (EXPR)]
    T_L_BRACE             reduce using rule 38 (ASSIGNMENT_STATEMENT)
    T_L_BRACE             [reduce using rule 67 (EXPR)]
    T_R_BRACE             reduce using rule 38 (ASSIGNMENT_STATEMENT)
    T_R_BRACE             [reduce using rule 67 (EXPR)]
    T_L_BRACKET           reduce using rule 38 (ASSIGNMENT_STATEMENT)
    T_L_BRACKET           [reduce using rule 67 (EXPR)]
    T_R_BRACKET           reduce using rule 38 (ASSIGNMENT_STATEMENT)
    T_R_BRACKET           [reduce using rule 67 (EXPR)]
    T_OP_PLUS             [reduce using rule 67 (EXPR)]
    T_OP_MINUS            [reduce using rule 38 (ASSIGNMENT_STATEMENT)]
    T_OP_MINUS            [reduce using rule 67 (EXPR)]
    T_OP_MUL              [reduce using rule 38 (ASSIGNMENT_STATEMENT)]
    T_OP_MUL              [reduce using rule 67 (EXPR)]
    T_OP_INC              reduce using rule 38 (ASSIGNMENT_STATEMENT)
    T_OP_INC              [reduce using rule 67 (EXPR)]
    T_OP_DEC              reduce using rule 38 (ASSIGNMENT_STATEMENT)
    T_OP_DEC              [reduce using rule 67 (EXPR)]
    T_OP_LE               [reduce using rule 67 (EXPR)]
    T_OP_EQ               [reduce using rule 67 (EXPR)]
    T_OP_NE               [reduce using rule 67 (EXPR)]
    T_OP_LT               [reduce using rule 67 (EXPR)]
    T_OP_LAND             [reduce using rule 67 (EXPR)]
    T_OP_LOR              [reduce using rule 67 (EXPR)]
    T_OP_LNOT             reduce using rule 38 (ASSIGNMENT_STATEMENT)
    T_OP_LNOT             [reduce using rule 67 (EXPR)]
    T_OP_BAND             [reduce using rule 38 (ASSIGNMENT_STATEMENT)]
    T_OP_BAND             [reduce using rule 67 (EXPR)]
    T_OP_BOR              [reduce using rule 67 (EXPR)]
    T_OP_BXOR             [reduce using rule 67 (EXPR)]
    ';'                   [reduce using rule 67 (EXPR)]
    ','                   [reduce using rule 67 (EXPR)]
    '.'                   [reduce using rule 67 (EXPR)]
    $default              reduce using rule 38 (ASSIGNMENT_STATEMENT)


State 161

   54 TWO_OP_STATEMENT: EXPR T_ADD_ASSIGN EXPR . ';'
   67 EXPR: EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   70        | EXPR . T_OP_PLUS EXPR
   71        | EXPR . T_OP_MINUS EXPR
   72        | EXPR . T_OP_MUL EXPR
   74        | EXPR . T_OP_BAND EXPR
   75        | EXPR . T_OP_BOR EXPR
   76        | EXPR . T_OP_BXOR EXPR
   77        | EXPR . T_OP_NE EXPR
   78        | EXPR . T_OP_LE EXPR
   79        | EXPR . T_OP_LT EXPR
   80        | EXPR . T_OP_LAND EXPR
   81        | EXPR . T_OP_LOR EXPR
   98 DOT: EXPR . '.' EXPR

    T_OP_PLUS   shift, and go to state 96
    T_OP_MINUS  shift, and go to state 97
    T_OP_MUL    shift, and go to state 98
    T_OP_LE     shift, and go to state 99
    T_OP_EQ     shift, and go to state 100
    T_OP_NE     shift, and go to state 101
    T_OP_LT     shift, and go to state 123
    T_OP_LAND   shift, and go to state 103
    T_OP_LOR    shift, and go to state 104
    T_OP_BAND   shift, and go to state 105
    T_OP_BOR    shift, and go to state 106
    T_OP_BXOR   shift, and go to state 107
    ';'         shift, and go to state 195
    ','         shift, and go to state 114
    '.'         shift, and go to state 115

    T_OP_PLUS   [reduce using rule 67 (EXPR)]
    T_OP_MINUS  [reduce using rule 67 (EXPR)]
    T_OP_MUL    [reduce using rule 67 (EXPR)]
    T_OP_LE     [reduce using rule 67 (EXPR)]
    T_OP_EQ     [reduce using rule 67 (EXPR)]
    T_OP_NE     [reduce using rule 67 (EXPR)]
    T_OP_LT     [reduce using rule 67 (EXPR)]
    T_OP_LAND   [reduce using rule 67 (EXPR)]
    T_OP_LOR    [reduce using rule 67 (EXPR)]
    T_OP_BAND   [reduce using rule 67 (EXPR)]
    T_OP_BOR    [reduce using rule 67 (EXPR)]
    T_OP_BXOR   [reduce using rule 67 (EXPR)]
    ';'         [reduce using rule 67 (EXPR)]
    ','         [reduce using rule 67 (EXPR)]
    '.'         [reduce using rule 67 (EXPR)]


State 162

   57 TWO_OP_STATEMENT: EXPR T_SUB_ASSIGN EXPR . ';'
   67 EXPR: EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   70        | EXPR . T_OP_PLUS EXPR
   71        | EXPR . T_OP_MINUS EXPR
   72        | EXPR . T_OP_MUL EXPR
   74        | EXPR . T_OP_BAND EXPR
   75        | EXPR . T_OP_BOR EXPR
   76        | EXPR . T_OP_BXOR EXPR
   77        | EXPR . T_OP_NE EXPR
   78        | EXPR . T_OP_LE EXPR
   79        | EXPR . T_OP_LT EXPR
   80        | EXPR . T_OP_LAND EXPR
   81        | EXPR . T_OP_LOR EXPR
   98 DOT: EXPR . '.' EXPR

    T_OP_PLUS   shift, and go to state 96
    T_OP_MINUS  shift, and go to state 97
    T_OP_MUL    shift, and go to state 98
    T_OP_LE     shift, and go to state 99
    T_OP_EQ     shift, and go to state 100
    T_OP_NE     shift, and go to state 101
    T_OP_LT     shift, and go to state 123
    T_OP_LAND   shift, and go to state 103
    T_OP_LOR    shift, and go to state 104
    T_OP_BAND   shift, and go to state 105
    T_OP_BOR    shift, and go to state 106
    T_OP_BXOR   shift, and go to state 107
    ';'         shift, and go to state 196
    ','         shift, and go to state 114
    '.'         shift, and go to state 115

    T_OP_PLUS   [reduce using rule 67 (EXPR)]
    T_OP_MINUS  [reduce using rule 67 (EXPR)]
    T_OP_MUL    [reduce using rule 67 (EXPR)]
    T_OP_LE     [reduce using rule 67 (EXPR)]
    T_OP_EQ     [reduce using rule 67 (EXPR)]
    T_OP_NE     [reduce using rule 67 (EXPR)]
    T_OP_LT     [reduce using rule 67 (EXPR)]
    T_OP_LAND   [reduce using rule 67 (EXPR)]
    T_OP_LOR    [reduce using rule 67 (EXPR)]
    T_OP_BAND   [reduce using rule 67 (EXPR)]
    T_OP_BOR    [reduce using rule 67 (EXPR)]
    T_OP_BXOR   [reduce using rule 67 (EXPR)]
    ';'         [reduce using rule 67 (EXPR)]
    ','         [reduce using rule 67 (EXPR)]
    '.'         [reduce using rule 67 (EXPR)]


State 163

   56 TWO_OP_STATEMENT: EXPR T_MUL_ASSIGN EXPR . ';'
   67 EXPR: EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   70        | EXPR . T_OP_PLUS EXPR
   71        | EXPR . T_OP_MINUS EXPR
   72        | EXPR . T_OP_MUL EXPR
   74        | EXPR . T_OP_BAND EXPR
   75        | EXPR . T_OP_BOR EXPR
   76        | EXPR . T_OP_BXOR EXPR
   77        | EXPR . T_OP_NE EXPR
   78        | EXPR . T_OP_LE EXPR
   79        | EXPR . T_OP_LT EXPR
   80        | EXPR . T_OP_LAND EXPR
   81        | EXPR . T_OP_LOR EXPR
   98 DOT: EXPR . '.' EXPR

    T_OP_PLUS   shift, and go to state 96
    T_OP_MINUS  shift, and go to state 97
    T_OP_MUL    shift, and go to state 98
    T_OP_LE     shift, and go to state 99
    T_OP_EQ     shift, and go to state 100
    T_OP_NE     shift, and go to state 101
    T_OP_LT     shift, and go to state 123
    T_OP_LAND   shift, and go to state 103
    T_OP_LOR    shift, and go to state 104
    T_OP_BAND   shift, and go to state 105
    T_OP_BOR    shift, and go to state 106
    T_OP_BXOR   shift, and go to state 107
    ';'         shift, and go to state 197
    ','         shift, and go to state 114
    '.'         shift, and go to state 115

    T_OP_PLUS   [reduce using rule 67 (EXPR)]
    T_OP_MINUS  [reduce using rule 67 (EXPR)]
    T_OP_MUL    [reduce using rule 67 (EXPR)]
    T_OP_LE     [reduce using rule 67 (EXPR)]
    T_OP_EQ     [reduce using rule 67 (EXPR)]
    T_OP_NE     [reduce using rule 67 (EXPR)]
    T_OP_LT     [reduce using rule 67 (EXPR)]
    T_OP_LAND   [reduce using rule 67 (EXPR)]
    T_OP_LOR    [reduce using rule 67 (EXPR)]
    T_OP_BAND   [reduce using rule 67 (EXPR)]
    T_OP_BOR    [reduce using rule 67 (EXPR)]
    T_OP_BXOR   [reduce using rule 67 (EXPR)]
    ';'         [reduce using rule 67 (EXPR)]
    ','         [reduce using rule 67 (EXPR)]
    '.'         [reduce using rule 67 (EXPR)]


State 164

   58 TWO_OP_STATEMENT: EXPR T_DIV_ASSIGN EXPR . ';'
   67 EXPR: EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   70        | EXPR . T_OP_PLUS EXPR
   71        | EXPR . T_OP_MINUS EXPR
   72        | EXPR . T_OP_MUL EXPR
   74        | EXPR . T_OP_BAND EXPR
   75        | EXPR . T_OP_BOR EXPR
   76        | EXPR . T_OP_BXOR EXPR
   77        | EXPR . T_OP_NE EXPR
   78        | EXPR . T_OP_LE EXPR
   79        | EXPR . T_OP_LT EXPR
   80        | EXPR . T_OP_LAND EXPR
   81        | EXPR . T_OP_LOR EXPR
   98 DOT: EXPR . '.' EXPR

    T_OP_PLUS   shift, and go to state 96
    T_OP_MINUS  shift, and go to state 97
    T_OP_MUL    shift, and go to state 98
    T_OP_LE     shift, and go to state 99
    T_OP_EQ     shift, and go to state 100
    T_OP_NE     shift, and go to state 101
    T_OP_LT     shift, and go to state 123
    T_OP_LAND   shift, and go to state 103
    T_OP_LOR    shift, and go to state 104
    T_OP_BAND   shift, and go to state 105
    T_OP_BOR    shift, and go to state 106
    T_OP_BXOR   shift, and go to state 107
    ';'         shift, and go to state 198
    ','         shift, and go to state 114
    '.'         shift, and go to state 115

    T_OP_PLUS   [reduce using rule 67 (EXPR)]
    T_OP_MINUS  [reduce using rule 67 (EXPR)]
    T_OP_MUL    [reduce using rule 67 (EXPR)]
    T_OP_LE     [reduce using rule 67 (EXPR)]
    T_OP_EQ     [reduce using rule 67 (EXPR)]
    T_OP_NE     [reduce using rule 67 (EXPR)]
    T_OP_LT     [reduce using rule 67 (EXPR)]
    T_OP_LAND   [reduce using rule 67 (EXPR)]
    T_OP_LOR    [reduce using rule 67 (EXPR)]
    T_OP_BAND   [reduce using rule 67 (EXPR)]
    T_OP_BOR    [reduce using rule 67 (EXPR)]
    T_OP_BXOR   [reduce using rule 67 (EXPR)]
    ';'         [reduce using rule 67 (EXPR)]
    ','         [reduce using rule 67 (EXPR)]
    '.'         [reduce using rule 67 (EXPR)]


State 165

   55 TWO_OP_STATEMENT: EXPR T_MOD_ASSIGN EXPR . ';'
   67 EXPR: EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   70        | EXPR . T_OP_PLUS EXPR
   71        | EXPR . T_OP_MINUS EXPR
   72        | EXPR . T_OP_MUL EXPR
   74        | EXPR . T_OP_BAND EXPR
   75        | EXPR . T_OP_BOR EXPR
   76        | EXPR . T_OP_BXOR EXPR
   77        | EXPR . T_OP_NE EXPR
   78        | EXPR . T_OP_LE EXPR
   79        | EXPR . T_OP_LT EXPR
   80        | EXPR . T_OP_LAND EXPR
   81        | EXPR . T_OP_LOR EXPR
   98 DOT: EXPR . '.' EXPR

    T_OP_PLUS   shift, and go to state 96
    T_OP_MINUS  shift, and go to state 97
    T_OP_MUL    shift, and go to state 98
    T_OP_LE     shift, and go to state 99
    T_OP_EQ     shift, and go to state 100
    T_OP_NE     shift, and go to state 101
    T_OP_LT     shift, and go to state 123
    T_OP_LAND   shift, and go to state 103
    T_OP_LOR    shift, and go to state 104
    T_OP_BAND   shift, and go to state 105
    T_OP_BOR    shift, and go to state 106
    T_OP_BXOR   shift, and go to state 107
    ';'         shift, and go to state 199
    ','         shift, and go to state 114
    '.'         shift, and go to state 115

    T_OP_PLUS   [reduce using rule 67 (EXPR)]
    T_OP_MINUS  [reduce using rule 67 (EXPR)]
    T_OP_MUL    [reduce using rule 67 (EXPR)]
    T_OP_LE     [reduce using rule 67 (EXPR)]
    T_OP_EQ     [reduce using rule 67 (EXPR)]
    T_OP_NE     [reduce using rule 67 (EXPR)]
    T_OP_LT     [reduce using rule 67 (EXPR)]
    T_OP_LAND   [reduce using rule 67 (EXPR)]
    T_OP_LOR    [reduce using rule 67 (EXPR)]
    T_OP_BAND   [reduce using rule 67 (EXPR)]
    T_OP_BOR    [reduce using rule 67 (EXPR)]
    T_OP_BXOR   [reduce using rule 67 (EXPR)]
    ';'         [reduce using rule 67 (EXPR)]
    ','         [reduce using rule 67 (EXPR)]
    '.'         [reduce using rule 67 (EXPR)]


State 166

   67 EXPR: EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   70        | EXPR . T_OP_PLUS EXPR
   71        | EXPR . T_OP_MINUS EXPR
   72        | EXPR . T_OP_MUL EXPR
   74        | EXPR . T_OP_BAND EXPR
   75        | EXPR . T_OP_BOR EXPR
   76        | EXPR . T_OP_BXOR EXPR
   77        | EXPR . T_OP_NE EXPR
   78        | EXPR . T_OP_LE EXPR
   79        | EXPR . T_OP_LT EXPR
   80        | EXPR . T_OP_LAND EXPR
   81        | EXPR . T_OP_LOR EXPR
   98 DOT: EXPR . '.' EXPR
   98    | EXPR '.' EXPR .

    T_OP_PLUS   shift, and go to state 96
    T_OP_MINUS  shift, and go to state 97
    T_OP_MUL    shift, and go to state 98
    T_OP_LE     shift, and go to state 99
    T_OP_EQ     shift, and go to state 100
    T_OP_NE     shift, and go to state 101
    T_OP_LT     shift, and go to state 123
    T_OP_LAND   shift, and go to state 103
    T_OP_LOR    shift, and go to state 104
    T_OP_BAND   shift, and go to state 105
    T_OP_BOR    shift, and go to state 106
    T_OP_BXOR   shift, and go to state 107
    ','         shift, and go to state 114
    '.'         shift, and go to state 115

    $end                  reduce using rule 67 (EXPR)
    $end                  [reduce using rule 98 (DOT)]
    T_DOUBLE              reduce using rule 67 (EXPR)
    T_DOUBLE              [reduce using rule 98 (DOT)]
    T_INT                 reduce using rule 67 (EXPR)
    T_INT                 [reduce using rule 98 (DOT)]
    T_STRUCT              reduce using rule 67 (EXPR)
    T_STRUCT              [reduce using rule 98 (DOT)]
    T_BREAK               reduce using rule 67 (EXPR)
    T_BREAK               [reduce using rule 98 (DOT)]
    T_SWITCH              reduce using rule 67 (EXPR)
    T_SWITCH              [reduce using rule 98 (DOT)]
    T_CASE                reduce using rule 67 (EXPR)
    T_CASE                [reduce using rule 98 (DOT)]
    T_ENUM                reduce using rule 67 (EXPR)
    T_ENUM                [reduce using rule 98 (DOT)]
    T_TYPEDEF             reduce using rule 67 (EXPR)
    T_TYPEDEF             [reduce using rule 98 (DOT)]
    T_RETURN              reduce using rule 67 (EXPR)
    T_RETURN              [reduce using rule 98 (DOT)]
    T_FLOAT               reduce using rule 67 (EXPR)
    T_FLOAT               [reduce using rule 98 (DOT)]
    T_FOR                 reduce using rule 67 (EXPR)
    T_FOR                 [reduce using rule 98 (DOT)]
    T_SIZEOF              reduce using rule 67 (EXPR)
    T_SIZEOF              [reduce using rule 98 (DOT)]
    T_IF                  reduce using rule 67 (EXPR)
    T_IF                  [reduce using rule 98 (DOT)]
    T_WHILE               reduce using rule 67 (EXPR)
    T_WHILE               [reduce using rule 98 (DOT)]
    T_IDENTIFIER          reduce using rule 67 (EXPR)
    T_IDENTIFIER          [reduce using rule 98 (DOT)]
    T_STRING_LITERAL      reduce using rule 67 (EXPR)
    T_STRING_LITERAL      [reduce using rule 98 (DOT)]
    T_INT_CONSTANT        reduce using rule 67 (EXPR)
    T_INT_CONSTANT        [reduce using rule 98 (DOT)]
    T_FLOAT_CONSTANT      reduce using rule 67 (EXPR)
    T_FLOAT_CONSTANT      [reduce using rule 98 (DOT)]
    T_CHARACTER_CONSTANT  reduce using rule 67 (EXPR)
    T_CHARACTER_CONSTANT  [reduce using rule 98 (DOT)]
    T_L_BRACE             reduce using rule 67 (EXPR)
    T_L_BRACE             [reduce using rule 98 (DOT)]
    T_R_BRACE             reduce using rule 67 (EXPR)
    T_R_BRACE             [reduce using rule 98 (DOT)]
    T_L_BRACKET           reduce using rule 67 (EXPR)
    T_L_BRACKET           [reduce using rule 98 (DOT)]
    T_R_BRACKET           reduce using rule 67 (EXPR)
    T_R_BRACKET           [reduce using rule 98 (DOT)]
    T_R_SQUARE            reduce using rule 67 (EXPR)
    T_R_SQUARE            [reduce using rule 98 (DOT)]
    T_OP_PLUS             [reduce using rule 67 (EXPR)]
    T_OP_PLUS             [reduce using rule 98 (DOT)]
    T_OP_MINUS            [reduce using rule 67 (EXPR)]
    T_OP_MINUS            [reduce using rule 98 (DOT)]
    T_OP_MUL              [reduce using rule 67 (EXPR)]
    T_OP_MUL              [reduce using rule 98 (DOT)]
    T_OP_INC              reduce using rule 67 (EXPR)
    T_OP_INC              [reduce using rule 98 (DOT)]
    T_OP_DEC              reduce using rule 67 (EXPR)
    T_OP_DEC              [reduce using rule 98 (DOT)]
    T_OP_LE               [reduce using rule 67 (EXPR)]
    T_OP_LE               [reduce using rule 98 (DOT)]
    T_OP_EQ               [reduce using rule 67 (EXPR)]
    T_OP_EQ               [reduce using rule 98 (DOT)]
    T_OP_NE               [reduce using rule 67 (EXPR)]
    T_OP_NE               [reduce using rule 98 (DOT)]
    T_OP_LT               [reduce using rule 67 (EXPR)]
    T_OP_LT               [reduce using rule 98 (DOT)]
    T_OP_LAND             [reduce using rule 67 (EXPR)]
    T_OP_LAND             [reduce using rule 98 (DOT)]
    T_OP_LOR              [reduce using rule 67 (EXPR)]
    T_OP_LOR              [reduce using rule 98 (DOT)]
    T_OP_LNOT             reduce using rule 67 (EXPR)
    T_OP_LNOT             [reduce using rule 98 (DOT)]
    T_OP_BAND             [reduce using rule 67 (EXPR)]
    T_OP_BAND             [reduce using rule 98 (DOT)]
    T_OP_BOR              [reduce using rule 67 (EXPR)]
    T_OP_BOR              [reduce using rule 98 (DOT)]
    T_OP_BXOR             [reduce using rule 67 (EXPR)]
    T_OP_BXOR             [reduce using rule 98 (DOT)]
    T_ASSIGN              reduce using rule 67 (EXPR)
    T_ASSIGN              [reduce using rule 98 (DOT)]
    T_ADD_ASSIGN          reduce using rule 67 (EXPR)
    T_ADD_ASSIGN          [reduce using rule 98 (DOT)]
    T_SUB_ASSIGN          reduce using rule 67 (EXPR)
    T_SUB_ASSIGN          [reduce using rule 98 (DOT)]
    T_MUL_ASSIGN          reduce using rule 67 (EXPR)
    T_MUL_ASSIGN          [reduce using rule 98 (DOT)]
    T_DIV_ASSIGN          reduce using rule 67 (EXPR)
    T_DIV_ASSIGN          [reduce using rule 98 (DOT)]
    T_MOD_ASSIGN          reduce using rule 67 (EXPR)
    T_MOD_ASSIGN          [reduce using rule 98 (DOT)]
    ';'                   reduce using rule 67 (EXPR)
    ';'                   [reduce using rule 98 (DOT)]
    ','                   [reduce using rule 67 (EXPR)]
    ','                   [reduce using rule 98 (DOT)]
    ':'                   reduce using rule 67 (EXPR)
    ':'                   [reduce using rule 98 (DOT)]
    '.'                   [reduce using rule 67 (EXPR)]
    '.'                   [reduce using rule 98 (DOT)]
    $default              reduce using rule 67 (EXPR)


State 167

   30 ARRAY_DECLARATION: TYPE T_IDENTIFIER T_L_SQUARE . EXPR T_R_SQUARE ';'

    T_IDENTIFIER          shift, and go to state 71
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    EXPR           go to state 200
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 60
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 168

   41 ASSIGNMENT_DEFINITION: TYPE T_IDENTIFIER T_ASSIGN . EXPR

    T_IDENTIFIER          shift, and go to state 71
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    EXPR           go to state 201
    OP_EXPR        go to state 55
    SINGLE_EXPR    go to state 56
    LOGIC_EXPR     go to state 57
    NUMBER         go to state 58
    CHARACTOR      go to state 59
    INTEGER        go to state 60
    FLOAT          go to state 61
    DOT            go to state 62
    FUNCTION_CALL  go to state 63
    POINTER        go to state 68


State 169

   32 REGULAR_DECLARATION: TYPE T_IDENTIFIER ';' .

    $default  reduce using rule 32 (REGULAR_DECLARATION)


State 170

   33 REGULAR_DECLARATION: TYPE T_IDENTIFIER ',' .

    $default  reduce using rule 33 (REGULAR_DECLARATION)


State 171

    6 FUNCTION: TYPE FUNCTION_CALL T_L_BRACE . STATEMENT T_R_BRACE

    T_DOUBLE              shift, and go to state 1
    T_INT                 shift, and go to state 2
    T_STRUCT              shift, and go to state 3
    T_BREAK               shift, and go to state 4
    T_SWITCH              shift, and go to state 5
    T_CASE                shift, and go to state 6
    T_ENUM                shift, and go to state 7
    T_TYPEDEF             shift, and go to state 8
    T_RETURN              shift, and go to state 9
    T_FLOAT               shift, and go to state 10
    T_FOR                 shift, and go to state 11
    T_SIZEOF              shift, and go to state 12
    T_IF                  shift, and go to state 13
    T_WHILE               shift, and go to state 14
    T_IDENTIFIER          shift, and go to state 15
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACE             shift, and go to state 20
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_INC              shift, and go to state 24
    T_OP_DEC              shift, and go to state 25
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    STATEMENT              go to state 202
    RETURN_STATEMENT       go to state 33
    DECLARATION_STATEMENT  go to state 34
    ARRAY_DECLARATION      go to state 35
    FUNCTION_DECLARATION   go to state 36
    REGULAR_DECLARATION    go to state 37
    STRUCT_DECLARATION     go to state 38
    ASSIGNMENT_STATEMENT   go to state 39
    ASSIGNMENT_DEFINITION  go to state 40
    COMPARE_STATEMENT      go to state 41
    IF_ELSE_STATEMENT      go to state 42
    WHILE_STATEMENT        go to state 43
    FOR_STATEMENT          go to state 44
    ENUM_STATEMENT         go to state 45
    SWITCH_STATEMENT       go to state 46
    CASE_STATEMENT         go to state 47
    BREAK_STATEMENT        go to state 48
    TYPEDEF_STATEMENT      go to state 49
    TWO_OP_STATEMENT       go to state 50
    INCREASE_STATEMENT     go to state 51
    STRUCT_STATEMENT       go to state 52
    SIZEOF_STATEMENT       go to state 53
    EXPR                   go to state 54
    OP_EXPR                go to state 55
    SINGLE_EXPR            go to state 56
    LOGIC_EXPR             go to state 57
    NUMBER                 go to state 58
    CHARACTOR              go to state 59
    INTEGER                go to state 60
    FLOAT                  go to state 61
    DOT                    go to state 62
    FUNCTION_CALL          go to state 63
    TYPE                   go to state 85
    POINTER                go to state 65


State 172

   31 FUNCTION_DECLARATION: TYPE FUNCTION_CALL ';' .

    $default  reduce using rule 31 (FUNCTION_DECLARATION)


State 173

    7 STATEMENT: STATEMENT .
   61 STRUCT_STATEMENT: T_STRUCT T_IDENTIFIER T_L_BRACE STATEMENT . T_R_BRACE ';'

    T_R_BRACE  shift, and go to state 203

    T_R_BRACE  [reduce using rule 7 (STATEMENT)]


State 174

   91 NUMBER: INTEGER .
   92       | T_OP_MINUS INTEGER .

    T_OP_PLUS   reduce using rule 91 (NUMBER)
    T_OP_PLUS   [reduce using rule 92 (NUMBER)]
    T_OP_MINUS  reduce using rule 91 (NUMBER)
    T_OP_MINUS  [reduce using rule 92 (NUMBER)]
    T_OP_MUL    reduce using rule 91 (NUMBER)
    T_OP_MUL    [reduce using rule 92 (NUMBER)]
    T_OP_LE     reduce using rule 91 (NUMBER)
    T_OP_LE     [reduce using rule 92 (NUMBER)]
    T_OP_EQ     reduce using rule 91 (NUMBER)
    T_OP_EQ     [reduce using rule 92 (NUMBER)]
    T_OP_NE     reduce using rule 91 (NUMBER)
    T_OP_NE     [reduce using rule 92 (NUMBER)]
    T_OP_LT     reduce using rule 91 (NUMBER)
    T_OP_LT     [reduce using rule 92 (NUMBER)]
    T_OP_LAND   reduce using rule 91 (NUMBER)
    T_OP_LAND   [reduce using rule 92 (NUMBER)]
    T_OP_LOR    reduce using rule 91 (NUMBER)
    T_OP_LOR    [reduce using rule 92 (NUMBER)]
    T_OP_BAND   reduce using rule 91 (NUMBER)
    T_OP_BAND   [reduce using rule 92 (NUMBER)]
    T_OP_BOR    reduce using rule 91 (NUMBER)
    T_OP_BOR    [reduce using rule 92 (NUMBER)]
    T_OP_BXOR   reduce using rule 91 (NUMBER)
    T_OP_BXOR   [reduce using rule 92 (NUMBER)]
    ';'         reduce using rule 92 (NUMBER)
    ','         reduce using rule 91 (NUMBER)
    ','         [reduce using rule 92 (NUMBER)]
    '.'         reduce using rule 91 (NUMBER)
    '.'         [reduce using rule 92 (NUMBER)]
    $default    reduce using rule 91 (NUMBER)


State 175

   67 EXPR: EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   70        | EXPR . T_OP_PLUS EXPR
   71        | EXPR . T_OP_MINUS EXPR
   72        | EXPR . T_OP_MUL EXPR
   74        | EXPR . T_OP_BAND EXPR
   75        | EXPR . T_OP_BOR EXPR
   76        | EXPR . T_OP_BXOR EXPR
   77        | EXPR . T_OP_NE EXPR
   78        | EXPR . T_OP_LE EXPR
   79        | EXPR . T_OP_LT EXPR
   79        | EXPR T_OP_LT EXPR .
   80        | EXPR . T_OP_LAND EXPR
   81        | EXPR . T_OP_LOR EXPR
   98 DOT: EXPR . '.' EXPR

    T_OP_PLUS   shift, and go to state 96
    T_OP_MINUS  shift, and go to state 97
    T_OP_MUL    shift, and go to state 98
    T_OP_LE     shift, and go to state 99
    T_OP_EQ     shift, and go to state 100
    T_OP_NE     shift, and go to state 101
    T_OP_LT     shift, and go to state 123
    T_OP_LAND   shift, and go to state 103
    T_OP_LOR    shift, and go to state 104
    T_OP_BAND   shift, and go to state 105
    T_OP_BOR    shift, and go to state 106
    T_OP_BXOR   shift, and go to state 107
    ','         shift, and go to state 114
    '.'         shift, and go to state 115

    $end                  reduce using rule 67 (EXPR)
    $end                  [reduce using rule 79 (OP_EXPR)]
    T_DOUBLE              reduce using rule 67 (EXPR)
    T_DOUBLE              [reduce using rule 79 (OP_EXPR)]
    T_INT                 reduce using rule 67 (EXPR)
    T_INT                 [reduce using rule 79 (OP_EXPR)]
    T_STRUCT              reduce using rule 67 (EXPR)
    T_STRUCT              [reduce using rule 79 (OP_EXPR)]
    T_BREAK               reduce using rule 67 (EXPR)
    T_BREAK               [reduce using rule 79 (OP_EXPR)]
    T_SWITCH              reduce using rule 67 (EXPR)
    T_SWITCH              [reduce using rule 79 (OP_EXPR)]
    T_CASE                reduce using rule 67 (EXPR)
    T_CASE                [reduce using rule 79 (OP_EXPR)]
    T_ENUM                reduce using rule 67 (EXPR)
    T_ENUM                [reduce using rule 79 (OP_EXPR)]
    T_TYPEDEF             reduce using rule 67 (EXPR)
    T_TYPEDEF             [reduce using rule 79 (OP_EXPR)]
    T_RETURN              reduce using rule 67 (EXPR)
    T_RETURN              [reduce using rule 79 (OP_EXPR)]
    T_FLOAT               reduce using rule 67 (EXPR)
    T_FLOAT               [reduce using rule 79 (OP_EXPR)]
    T_FOR                 reduce using rule 67 (EXPR)
    T_FOR                 [reduce using rule 79 (OP_EXPR)]
    T_SIZEOF              reduce using rule 67 (EXPR)
    T_SIZEOF              [reduce using rule 79 (OP_EXPR)]
    T_IF                  reduce using rule 67 (EXPR)
    T_IF                  [reduce using rule 79 (OP_EXPR)]
    T_WHILE               reduce using rule 67 (EXPR)
    T_WHILE               [reduce using rule 79 (OP_EXPR)]
    T_IDENTIFIER          reduce using rule 67 (EXPR)
    T_IDENTIFIER          [reduce using rule 79 (OP_EXPR)]
    T_STRING_LITERAL      reduce using rule 67 (EXPR)
    T_STRING_LITERAL      [reduce using rule 79 (OP_EXPR)]
    T_INT_CONSTANT        reduce using rule 67 (EXPR)
    T_INT_CONSTANT        [reduce using rule 79 (OP_EXPR)]
    T_FLOAT_CONSTANT      reduce using rule 67 (EXPR)
    T_FLOAT_CONSTANT      [reduce using rule 79 (OP_EXPR)]
    T_CHARACTER_CONSTANT  reduce using rule 67 (EXPR)
    T_CHARACTER_CONSTANT  [reduce using rule 79 (OP_EXPR)]
    T_L_BRACE             reduce using rule 67 (EXPR)
    T_L_BRACE             [reduce using rule 79 (OP_EXPR)]
    T_R_BRACE             reduce using rule 67 (EXPR)
    T_R_BRACE             [reduce using rule 79 (OP_EXPR)]
    T_L_BRACKET           reduce using rule 67 (EXPR)
    T_L_BRACKET           [reduce using rule 79 (OP_EXPR)]
    T_R_BRACKET           reduce using rule 67 (EXPR)
    T_R_BRACKET           [reduce using rule 79 (OP_EXPR)]
    T_R_SQUARE            reduce using rule 67 (EXPR)
    T_R_SQUARE            [reduce using rule 79 (OP_EXPR)]
    T_OP_PLUS             [reduce using rule 67 (EXPR)]
    T_OP_PLUS             [reduce using rule 79 (OP_EXPR)]
    T_OP_MINUS            [reduce using rule 67 (EXPR)]
    T_OP_MINUS            [reduce using rule 79 (OP_EXPR)]
    T_OP_MUL              [reduce using rule 67 (EXPR)]
    T_OP_MUL              [reduce using rule 79 (OP_EXPR)]
    T_OP_INC              reduce using rule 67 (EXPR)
    T_OP_INC              [reduce using rule 79 (OP_EXPR)]
    T_OP_DEC              reduce using rule 67 (EXPR)
    T_OP_DEC              [reduce using rule 79 (OP_EXPR)]
    T_OP_LE               [reduce using rule 67 (EXPR)]
    T_OP_LE               [reduce using rule 79 (OP_EXPR)]
    T_OP_EQ               [reduce using rule 67 (EXPR)]
    T_OP_EQ               [reduce using rule 79 (OP_EXPR)]
    T_OP_NE               [reduce using rule 67 (EXPR)]
    T_OP_NE               [reduce using rule 79 (OP_EXPR)]
    T_OP_LT               [reduce using rule 67 (EXPR)]
    T_OP_LT               [reduce using rule 79 (OP_EXPR)]
    T_OP_LAND             [reduce using rule 67 (EXPR)]
    T_OP_LAND             [reduce using rule 79 (OP_EXPR)]
    T_OP_LOR              [reduce using rule 67 (EXPR)]
    T_OP_LOR              [reduce using rule 79 (OP_EXPR)]
    T_OP_LNOT             reduce using rule 67 (EXPR)
    T_OP_LNOT             [reduce using rule 79 (OP_EXPR)]
    T_OP_BAND             [reduce using rule 67 (EXPR)]
    T_OP_BAND             [reduce using rule 79 (OP_EXPR)]
    T_OP_BOR              [reduce using rule 67 (EXPR)]
    T_OP_BOR              [reduce using rule 79 (OP_EXPR)]
    T_OP_BXOR             [reduce using rule 67 (EXPR)]
    T_OP_BXOR             [reduce using rule 79 (OP_EXPR)]
    T_ASSIGN              reduce using rule 67 (EXPR)
    T_ASSIGN              [reduce using rule 79 (OP_EXPR)]
    T_ADD_ASSIGN          reduce using rule 67 (EXPR)
    T_ADD_ASSIGN          [reduce using rule 79 (OP_EXPR)]
    T_SUB_ASSIGN          reduce using rule 67 (EXPR)
    T_SUB_ASSIGN          [reduce using rule 79 (OP_EXPR)]
    T_MUL_ASSIGN          reduce using rule 67 (EXPR)
    T_MUL_ASSIGN          [reduce using rule 79 (OP_EXPR)]
    T_DIV_ASSIGN          reduce using rule 67 (EXPR)
    T_DIV_ASSIGN          [reduce using rule 79 (OP_EXPR)]
    T_MOD_ASSIGN          reduce using rule 67 (EXPR)
    T_MOD_ASSIGN          [reduce using rule 79 (OP_EXPR)]
    ';'                   reduce using rule 67 (EXPR)
    ';'                   [reduce using rule 79 (OP_EXPR)]
    ','                   [reduce using rule 67 (EXPR)]
    ','                   [reduce using rule 79 (OP_EXPR)]
    ':'                   reduce using rule 67 (EXPR)
    ':'                   [reduce using rule 79 (OP_EXPR)]
    '.'                   [reduce using rule 67 (EXPR)]
    '.'                   [reduce using rule 79 (OP_EXPR)]
    $default              reduce using rule 67 (EXPR)


State 176

   67 EXPR: EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   70        | EXPR . T_OP_PLUS EXPR
   71        | EXPR . T_OP_MINUS EXPR
   72        | EXPR . T_OP_MUL EXPR
   74        | EXPR . T_OP_BAND EXPR
   74        | EXPR T_OP_BAND EXPR .
   75        | EXPR . T_OP_BOR EXPR
   76        | EXPR . T_OP_BXOR EXPR
   77        | EXPR . T_OP_NE EXPR
   78        | EXPR . T_OP_LE EXPR
   79        | EXPR . T_OP_LT EXPR
   80        | EXPR . T_OP_LAND EXPR
   81        | EXPR . T_OP_LOR EXPR
   87 SINGLE_EXPR: T_OP_BAND EXPR .
   98 DOT: EXPR . '.' EXPR

    T_OP_PLUS   shift, and go to state 96
    T_OP_MINUS  shift, and go to state 97
    T_OP_MUL    shift, and go to state 98
    T_OP_LE     shift, and go to state 99
    T_OP_EQ     shift, and go to state 100
    T_OP_NE     shift, and go to state 101
    T_OP_LT     shift, and go to state 123
    T_OP_LAND   shift, and go to state 103
    T_OP_LOR    shift, and go to state 104
    T_OP_BAND   shift, and go to state 105
    T_OP_BOR    shift, and go to state 106
    T_OP_BXOR   shift, and go to state 107
    ','         shift, and go to state 114
    '.'         shift, and go to state 115

    T_IDENTIFIER          reduce using rule 67 (EXPR)
    T_IDENTIFIER          [reduce using rule 74 (OP_EXPR)]
    T_STRING_LITERAL      reduce using rule 67 (EXPR)
    T_STRING_LITERAL      [reduce using rule 74 (OP_EXPR)]
    T_INT_CONSTANT        reduce using rule 67 (EXPR)
    T_INT_CONSTANT        [reduce using rule 74 (OP_EXPR)]
    T_FLOAT_CONSTANT      reduce using rule 67 (EXPR)
    T_FLOAT_CONSTANT      [reduce using rule 74 (OP_EXPR)]
    T_CHARACTER_CONSTANT  reduce using rule 67 (EXPR)
    T_CHARACTER_CONSTANT  [reduce using rule 74 (OP_EXPR)]
    T_L_BRACKET           reduce using rule 67 (EXPR)
    T_L_BRACKET           [reduce using rule 74 (OP_EXPR)]
    T_OP_PLUS             [reduce using rule 67 (EXPR)]
    T_OP_PLUS             [reduce using rule 74 (OP_EXPR)]
    T_OP_PLUS             [reduce using rule 87 (SINGLE_EXPR)]
    T_OP_MINUS            [reduce using rule 67 (EXPR)]
    T_OP_MINUS            [reduce using rule 74 (OP_EXPR)]
    T_OP_MINUS            [reduce using rule 87 (SINGLE_EXPR)]
    T_OP_MUL              [reduce using rule 67 (EXPR)]
    T_OP_MUL              [reduce using rule 74 (OP_EXPR)]
    T_OP_MUL              [reduce using rule 87 (SINGLE_EXPR)]
    T_OP_LE               [reduce using rule 67 (EXPR)]
    T_OP_LE               [reduce using rule 74 (OP_EXPR)]
    T_OP_LE               [reduce using rule 87 (SINGLE_EXPR)]
    T_OP_EQ               [reduce using rule 67 (EXPR)]
    T_OP_EQ               [reduce using rule 74 (OP_EXPR)]
    T_OP_EQ               [reduce using rule 87 (SINGLE_EXPR)]
    T_OP_NE               [reduce using rule 67 (EXPR)]
    T_OP_NE               [reduce using rule 74 (OP_EXPR)]
    T_OP_NE               [reduce using rule 87 (SINGLE_EXPR)]
    T_OP_LT               [reduce using rule 67 (EXPR)]
    T_OP_LT               [reduce using rule 74 (OP_EXPR)]
    T_OP_LT               [reduce using rule 87 (SINGLE_EXPR)]
    T_OP_LAND             [reduce using rule 67 (EXPR)]
    T_OP_LAND             [reduce using rule 74 (OP_EXPR)]
    T_OP_LAND             [reduce using rule 87 (SINGLE_EXPR)]
    T_OP_LOR              [reduce using rule 67 (EXPR)]
    T_OP_LOR              [reduce using rule 74 (OP_EXPR)]
    T_OP_LOR              [reduce using rule 87 (SINGLE_EXPR)]
    T_OP_LNOT             reduce using rule 67 (EXPR)
    T_OP_LNOT             [reduce using rule 74 (OP_EXPR)]
    T_OP_BAND             [reduce using rule 67 (EXPR)]
    T_OP_BAND             [reduce using rule 74 (OP_EXPR)]
    T_OP_BAND             [reduce using rule 87 (SINGLE_EXPR)]
    T_OP_BOR              [reduce using rule 67 (EXPR)]
    T_OP_BOR              [reduce using rule 74 (OP_EXPR)]
    T_OP_BOR              [reduce using rule 87 (SINGLE_EXPR)]
    T_OP_BXOR             [reduce using rule 67 (EXPR)]
    T_OP_BXOR             [reduce using rule 74 (OP_EXPR)]
    T_OP_BXOR             [reduce using rule 87 (SINGLE_EXPR)]
    ';'                   reduce using rule 67 (EXPR)
    ';'                   [reduce using rule 87 (SINGLE_EXPR)]
    ','                   [reduce using rule 67 (EXPR)]
    ','                   [reduce using rule 74 (OP_EXPR)]
    ','                   [reduce using rule 87 (SINGLE_EXPR)]
    '.'                   [reduce using rule 67 (EXPR)]
    '.'                   [reduce using rule 74 (OP_EXPR)]
    '.'                   [reduce using rule 87 (SINGLE_EXPR)]
    $default              reduce using rule 67 (EXPR)


State 177

   35 STRUCT_DECLARATION: T_STRUCT EXPR EXPR ';' .

    $default  reduce using rule 35 (STRUCT_DECLARATION)


State 178

   48 SWITCH_STATEMENT: T_SWITCH T_L_BRACKET EXPR T_R_BRACKET . T_L_BRACE CASE_STATEMENT T_R_BRACE

    T_L_BRACE  shift, and go to state 204


State 179

   15 STATEMENT: T_L_BRACE . STATEMENT T_R_BRACE
   49 CASE_STATEMENT: T_CASE EXPR ':' T_L_BRACE . STATEMENT T_R_BRACE

    T_DOUBLE              shift, and go to state 1
    T_INT                 shift, and go to state 2
    T_STRUCT              shift, and go to state 3
    T_BREAK               shift, and go to state 4
    T_SWITCH              shift, and go to state 5
    T_CASE                shift, and go to state 6
    T_ENUM                shift, and go to state 7
    T_TYPEDEF             shift, and go to state 8
    T_RETURN              shift, and go to state 9
    T_FLOAT               shift, and go to state 10
    T_FOR                 shift, and go to state 11
    T_SIZEOF              shift, and go to state 12
    T_IF                  shift, and go to state 13
    T_WHILE               shift, and go to state 14
    T_IDENTIFIER          shift, and go to state 15
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACE             shift, and go to state 20
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_INC              shift, and go to state 24
    T_OP_DEC              shift, and go to state 25
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    STATEMENT              go to state 205
    RETURN_STATEMENT       go to state 33
    DECLARATION_STATEMENT  go to state 34
    ARRAY_DECLARATION      go to state 35
    FUNCTION_DECLARATION   go to state 36
    REGULAR_DECLARATION    go to state 37
    STRUCT_DECLARATION     go to state 38
    ASSIGNMENT_STATEMENT   go to state 39
    ASSIGNMENT_DEFINITION  go to state 40
    COMPARE_STATEMENT      go to state 41
    IF_ELSE_STATEMENT      go to state 42
    WHILE_STATEMENT        go to state 43
    FOR_STATEMENT          go to state 44
    ENUM_STATEMENT         go to state 45
    SWITCH_STATEMENT       go to state 46
    CASE_STATEMENT         go to state 47
    BREAK_STATEMENT        go to state 48
    TYPEDEF_STATEMENT      go to state 49
    TWO_OP_STATEMENT       go to state 50
    INCREASE_STATEMENT     go to state 51
    STRUCT_STATEMENT       go to state 52
    SIZEOF_STATEMENT       go to state 53
    EXPR                   go to state 54
    OP_EXPR                go to state 55
    SINGLE_EXPR            go to state 56
    LOGIC_EXPR             go to state 57
    NUMBER                 go to state 58
    CHARACTOR              go to state 59
    INTEGER                go to state 60
    FLOAT                  go to state 61
    DOT                    go to state 62
    FUNCTION_CALL          go to state 63
    TYPE                   go to state 85
    POINTER                go to state 65


State 180

    7 STATEMENT: STATEMENT .
   50 CASE_STATEMENT: T_CASE EXPR ':' STATEMENT .

    $end                  reduce using rule 7 (STATEMENT)
    $end                  [reduce using rule 50 (CASE_STATEMENT)]
    T_DOUBLE              reduce using rule 7 (STATEMENT)
    T_DOUBLE              [reduce using rule 50 (CASE_STATEMENT)]
    T_INT                 reduce using rule 7 (STATEMENT)
    T_INT                 [reduce using rule 50 (CASE_STATEMENT)]
    T_STRUCT              reduce using rule 7 (STATEMENT)
    T_STRUCT              [reduce using rule 50 (CASE_STATEMENT)]
    T_BREAK               reduce using rule 7 (STATEMENT)
    T_BREAK               [reduce using rule 50 (CASE_STATEMENT)]
    T_SWITCH              reduce using rule 7 (STATEMENT)
    T_SWITCH              [reduce using rule 50 (CASE_STATEMENT)]
    T_CASE                reduce using rule 7 (STATEMENT)
    T_CASE                [reduce using rule 50 (CASE_STATEMENT)]
    T_ENUM                reduce using rule 7 (STATEMENT)
    T_ENUM                [reduce using rule 50 (CASE_STATEMENT)]
    T_TYPEDEF             reduce using rule 7 (STATEMENT)
    T_TYPEDEF             [reduce using rule 50 (CASE_STATEMENT)]
    T_RETURN              reduce using rule 7 (STATEMENT)
    T_RETURN              [reduce using rule 50 (CASE_STATEMENT)]
    T_FLOAT               reduce using rule 7 (STATEMENT)
    T_FLOAT               [reduce using rule 50 (CASE_STATEMENT)]
    T_FOR                 reduce using rule 7 (STATEMENT)
    T_FOR                 [reduce using rule 50 (CASE_STATEMENT)]
    T_SIZEOF              reduce using rule 7 (STATEMENT)
    T_SIZEOF              [reduce using rule 50 (CASE_STATEMENT)]
    T_IF                  reduce using rule 7 (STATEMENT)
    T_IF                  [reduce using rule 50 (CASE_STATEMENT)]
    T_WHILE               reduce using rule 7 (STATEMENT)
    T_WHILE               [reduce using rule 50 (CASE_STATEMENT)]
    T_IDENTIFIER          reduce using rule 7 (STATEMENT)
    T_IDENTIFIER          [reduce using rule 50 (CASE_STATEMENT)]
    T_STRING_LITERAL      reduce using rule 7 (STATEMENT)
    T_STRING_LITERAL      [reduce using rule 50 (CASE_STATEMENT)]
    T_INT_CONSTANT        reduce using rule 7 (STATEMENT)
    T_INT_CONSTANT        [reduce using rule 50 (CASE_STATEMENT)]
    T_FLOAT_CONSTANT      reduce using rule 7 (STATEMENT)
    T_FLOAT_CONSTANT      [reduce using rule 50 (CASE_STATEMENT)]
    T_CHARACTER_CONSTANT  reduce using rule 7 (STATEMENT)
    T_CHARACTER_CONSTANT  [reduce using rule 50 (CASE_STATEMENT)]
    T_L_BRACE             reduce using rule 7 (STATEMENT)
    T_L_BRACE             [reduce using rule 50 (CASE_STATEMENT)]
    T_R_BRACE             reduce using rule 7 (STATEMENT)
    T_R_BRACE             [reduce using rule 50 (CASE_STATEMENT)]
    T_L_BRACKET           reduce using rule 7 (STATEMENT)
    T_L_BRACKET           [reduce using rule 50 (CASE_STATEMENT)]
    T_R_BRACKET           reduce using rule 7 (STATEMENT)
    T_R_BRACKET           [reduce using rule 50 (CASE_STATEMENT)]
    T_OP_MINUS            reduce using rule 7 (STATEMENT)
    T_OP_MINUS            [reduce using rule 50 (CASE_STATEMENT)]
    T_OP_MUL              reduce using rule 7 (STATEMENT)
    T_OP_MUL              [reduce using rule 50 (CASE_STATEMENT)]
    T_OP_INC              reduce using rule 7 (STATEMENT)
    T_OP_INC              [reduce using rule 50 (CASE_STATEMENT)]
    T_OP_DEC              reduce using rule 7 (STATEMENT)
    T_OP_DEC              [reduce using rule 50 (CASE_STATEMENT)]
    T_OP_LNOT             reduce using rule 7 (STATEMENT)
    T_OP_LNOT             [reduce using rule 50 (CASE_STATEMENT)]
    T_OP_BAND             reduce using rule 7 (STATEMENT)
    T_OP_BAND             [reduce using rule 50 (CASE_STATEMENT)]
    $default              reduce using rule 7 (STATEMENT)


State 181

    7 STATEMENT: STATEMENT .
   47 ENUM_STATEMENT: T_ENUM T_IDENTIFIER T_L_BRACE STATEMENT . T_R_BRACE ';'

    T_R_BRACE  shift, and go to state 206

    T_R_BRACE  [reduce using rule 7 (STATEMENT)]


State 182

   53 TYPEDEF_STATEMENT: T_TYPEDEF TYPE POINTER TYPE .
  105 TYPE: TYPE .

    $end                  reduce using rule 53 (TYPEDEF_STATEMENT)
    $end                  [reduce using rule 105 (TYPE)]
    T_DOUBLE              reduce using rule 53 (TYPEDEF_STATEMENT)
    T_DOUBLE              [reduce using rule 105 (TYPE)]
    T_INT                 reduce using rule 53 (TYPEDEF_STATEMENT)
    T_INT                 [reduce using rule 105 (TYPE)]
    T_STRUCT              reduce using rule 53 (TYPEDEF_STATEMENT)
    T_STRUCT              [reduce using rule 105 (TYPE)]
    T_BREAK               reduce using rule 53 (TYPEDEF_STATEMENT)
    T_BREAK               [reduce using rule 105 (TYPE)]
    T_SWITCH              reduce using rule 53 (TYPEDEF_STATEMENT)
    T_SWITCH              [reduce using rule 105 (TYPE)]
    T_CASE                reduce using rule 53 (TYPEDEF_STATEMENT)
    T_CASE                [reduce using rule 105 (TYPE)]
    T_ENUM                reduce using rule 53 (TYPEDEF_STATEMENT)
    T_ENUM                [reduce using rule 105 (TYPE)]
    T_TYPEDEF             reduce using rule 53 (TYPEDEF_STATEMENT)
    T_TYPEDEF             [reduce using rule 105 (TYPE)]
    T_RETURN              reduce using rule 53 (TYPEDEF_STATEMENT)
    T_RETURN              [reduce using rule 105 (TYPE)]
    T_FLOAT               reduce using rule 53 (TYPEDEF_STATEMENT)
    T_FLOAT               [reduce using rule 105 (TYPE)]
    T_FOR                 reduce using rule 53 (TYPEDEF_STATEMENT)
    T_FOR                 [reduce using rule 105 (TYPE)]
    T_SIZEOF              reduce using rule 53 (TYPEDEF_STATEMENT)
    T_SIZEOF              [reduce using rule 105 (TYPE)]
    T_IF                  reduce using rule 53 (TYPEDEF_STATEMENT)
    T_IF                  [reduce using rule 105 (TYPE)]
    T_WHILE               reduce using rule 53 (TYPEDEF_STATEMENT)
    T_WHILE               [reduce using rule 105 (TYPE)]
    T_IDENTIFIER          reduce using rule 53 (TYPEDEF_STATEMENT)
    T_IDENTIFIER          [reduce using rule 105 (TYPE)]
    T_STRING_LITERAL      reduce using rule 53 (TYPEDEF_STATEMENT)
    T_STRING_LITERAL      [reduce using rule 105 (TYPE)]
    T_INT_CONSTANT        reduce using rule 53 (TYPEDEF_STATEMENT)
    T_INT_CONSTANT        [reduce using rule 105 (TYPE)]
    T_FLOAT_CONSTANT      reduce using rule 53 (TYPEDEF_STATEMENT)
    T_FLOAT_CONSTANT      [reduce using rule 105 (TYPE)]
    T_CHARACTER_CONSTANT  reduce using rule 53 (TYPEDEF_STATEMENT)
    T_CHARACTER_CONSTANT  [reduce using rule 105 (TYPE)]
    T_L_BRACE             reduce using rule 53 (TYPEDEF_STATEMENT)
    T_L_BRACE             [reduce using rule 105 (TYPE)]
    T_R_BRACE             reduce using rule 53 (TYPEDEF_STATEMENT)
    T_R_BRACE             [reduce using rule 105 (TYPE)]
    T_L_BRACKET           reduce using rule 53 (TYPEDEF_STATEMENT)
    T_L_BRACKET           [reduce using rule 105 (TYPE)]
    T_R_BRACKET           reduce using rule 53 (TYPEDEF_STATEMENT)
    T_R_BRACKET           [reduce using rule 105 (TYPE)]
    T_OP_MINUS            reduce using rule 53 (TYPEDEF_STATEMENT)
    T_OP_MINUS            [reduce using rule 105 (TYPE)]
    T_OP_MUL              reduce using rule 53 (TYPEDEF_STATEMENT)
    T_OP_MUL              [reduce using rule 105 (TYPE)]
    T_OP_INC              reduce using rule 53 (TYPEDEF_STATEMENT)
    T_OP_INC              [reduce using rule 105 (TYPE)]
    T_OP_DEC              reduce using rule 53 (TYPEDEF_STATEMENT)
    T_OP_DEC              [reduce using rule 105 (TYPE)]
    T_OP_LNOT             reduce using rule 53 (TYPEDEF_STATEMENT)
    T_OP_LNOT             [reduce using rule 105 (TYPE)]
    T_OP_BAND             reduce using rule 53 (TYPEDEF_STATEMENT)
    T_OP_BAND             [reduce using rule 105 (TYPE)]
    $default              reduce using rule 53 (TYPEDEF_STATEMENT)


State 183

   46 FOR_STATEMENT: T_FOR T_L_BRACE LIST T_R_BRACE . T_L_BRACKET STATEMENT T_R_BRACKET

    T_L_BRACKET  shift, and go to state 207


State 184

    7 STATEMENT: STATEMENT .
  110 ARG_LIST: ARG_LIST STATEMENT .

    T_DOUBLE              reduce using rule 7 (STATEMENT)
    T_DOUBLE              [reduce using rule 110 (ARG_LIST)]
    T_INT                 reduce using rule 7 (STATEMENT)
    T_INT                 [reduce using rule 110 (ARG_LIST)]
    T_STRUCT              reduce using rule 7 (STATEMENT)
    T_STRUCT              [reduce using rule 110 (ARG_LIST)]
    T_BREAK               reduce using rule 7 (STATEMENT)
    T_BREAK               [reduce using rule 110 (ARG_LIST)]
    T_SWITCH              reduce using rule 7 (STATEMENT)
    T_SWITCH              [reduce using rule 110 (ARG_LIST)]
    T_CASE                reduce using rule 7 (STATEMENT)
    T_CASE                [reduce using rule 110 (ARG_LIST)]
    T_ENUM                reduce using rule 7 (STATEMENT)
    T_ENUM                [reduce using rule 110 (ARG_LIST)]
    T_TYPEDEF             reduce using rule 7 (STATEMENT)
    T_TYPEDEF             [reduce using rule 110 (ARG_LIST)]
    T_RETURN              reduce using rule 7 (STATEMENT)
    T_RETURN              [reduce using rule 110 (ARG_LIST)]
    T_FLOAT               reduce using rule 7 (STATEMENT)
    T_FLOAT               [reduce using rule 110 (ARG_LIST)]
    T_FOR                 reduce using rule 7 (STATEMENT)
    T_FOR                 [reduce using rule 110 (ARG_LIST)]
    T_SIZEOF              reduce using rule 7 (STATEMENT)
    T_SIZEOF              [reduce using rule 110 (ARG_LIST)]
    T_IF                  reduce using rule 7 (STATEMENT)
    T_IF                  [reduce using rule 110 (ARG_LIST)]
    T_WHILE               reduce using rule 7 (STATEMENT)
    T_WHILE               [reduce using rule 110 (ARG_LIST)]
    T_IDENTIFIER          reduce using rule 7 (STATEMENT)
    T_IDENTIFIER          [reduce using rule 110 (ARG_LIST)]
    T_STRING_LITERAL      reduce using rule 7 (STATEMENT)
    T_STRING_LITERAL      [reduce using rule 110 (ARG_LIST)]
    T_INT_CONSTANT        reduce using rule 7 (STATEMENT)
    T_INT_CONSTANT        [reduce using rule 110 (ARG_LIST)]
    T_FLOAT_CONSTANT      reduce using rule 7 (STATEMENT)
    T_FLOAT_CONSTANT      [reduce using rule 110 (ARG_LIST)]
    T_CHARACTER_CONSTANT  reduce using rule 7 (STATEMENT)
    T_CHARACTER_CONSTANT  [reduce using rule 110 (ARG_LIST)]
    T_L_BRACE             reduce using rule 7 (STATEMENT)
    T_L_BRACE             [reduce using rule 110 (ARG_LIST)]
    T_R_BRACE             reduce using rule 7 (STATEMENT)
    T_R_BRACE             [reduce using rule 110 (ARG_LIST)]
    T_L_BRACKET           reduce using rule 7 (STATEMENT)
    T_L_BRACKET           [reduce using rule 110 (ARG_LIST)]
    T_R_BRACKET           reduce using rule 7 (STATEMENT)
    T_R_BRACKET           [reduce using rule 110 (ARG_LIST)]
    T_OP_MINUS            reduce using rule 7 (STATEMENT)
    T_OP_MINUS            [reduce using rule 110 (ARG_LIST)]
    T_OP_MUL              reduce using rule 7 (STATEMENT)
    T_OP_MUL              [reduce using rule 110 (ARG_LIST)]
    T_OP_INC              reduce using rule 7 (STATEMENT)
    T_OP_INC              [reduce using rule 110 (ARG_LIST)]
    T_OP_DEC              reduce using rule 7 (STATEMENT)
    T_OP_DEC              [reduce using rule 110 (ARG_LIST)]
    T_OP_LNOT             reduce using rule 7 (STATEMENT)
    T_OP_LNOT             [reduce using rule 110 (ARG_LIST)]
    T_OP_BAND             reduce using rule 7 (STATEMENT)
    T_OP_BAND             [reduce using rule 110 (ARG_LIST)]
    $default              reduce using rule 7 (STATEMENT)


State 185

   36 ASSIGNMENT_STATEMENT: EXPR . T_ASSIGN EXPR ';'
   37                     | EXPR . T_ASSIGN EXPR ','
   38                     | EXPR . T_ASSIGN EXPR
   42 COMPARE_STATEMENT: EXPR . T_OP_LT EXPR ';'
   54 TWO_OP_STATEMENT: EXPR . T_ADD_ASSIGN EXPR ';'
   55                 | EXPR . T_MOD_ASSIGN EXPR ';'
   56                 | EXPR . T_MUL_ASSIGN EXPR ';'
   57                 | EXPR . T_SUB_ASSIGN EXPR ';'
   58                 | EXPR . T_DIV_ASSIGN EXPR ';'
   67 EXPR: EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   70        | EXPR . T_OP_PLUS EXPR
   71        | EXPR . T_OP_MINUS EXPR
   72        | EXPR . T_OP_MUL EXPR
   74        | EXPR . T_OP_BAND EXPR
   75        | EXPR . T_OP_BOR EXPR
   76        | EXPR . T_OP_BXOR EXPR
   77        | EXPR . T_OP_NE EXPR
   78        | EXPR . T_OP_LE EXPR
   79        | EXPR . T_OP_LT EXPR
   80        | EXPR . T_OP_LAND EXPR
   81        | EXPR . T_OP_LOR EXPR
   98 DOT: EXPR . '.' EXPR
  112 ARG_LIST: ARG_LIST EXPR .

    T_OP_PLUS     shift, and go to state 96
    T_OP_MINUS    shift, and go to state 97
    T_OP_MUL      shift, and go to state 98
    T_OP_LE       shift, and go to state 99
    T_OP_EQ       shift, and go to state 100
    T_OP_NE       shift, and go to state 101
    T_OP_LT       shift, and go to state 102
    T_OP_LAND     shift, and go to state 103
    T_OP_LOR      shift, and go to state 104
    T_OP_BAND     shift, and go to state 105
    T_OP_BOR      shift, and go to state 106
    T_OP_BXOR     shift, and go to state 107
    T_ASSIGN      shift, and go to state 108
    T_ADD_ASSIGN  shift, and go to state 109
    T_SUB_ASSIGN  shift, and go to state 110
    T_MUL_ASSIGN  shift, and go to state 111
    T_DIV_ASSIGN  shift, and go to state 112
    T_MOD_ASSIGN  shift, and go to state 113
    ','           shift, and go to state 114
    '.'           shift, and go to state 115

    T_DOUBLE              reduce using rule 67 (EXPR)
    T_DOUBLE              [reduce using rule 112 (ARG_LIST)]
    T_INT                 reduce using rule 67 (EXPR)
    T_INT                 [reduce using rule 112 (ARG_LIST)]
    T_STRUCT              reduce using rule 67 (EXPR)
    T_STRUCT              [reduce using rule 112 (ARG_LIST)]
    T_BREAK               reduce using rule 67 (EXPR)
    T_BREAK               [reduce using rule 112 (ARG_LIST)]
    T_SWITCH              reduce using rule 67 (EXPR)
    T_SWITCH              [reduce using rule 112 (ARG_LIST)]
    T_CASE                reduce using rule 67 (EXPR)
    T_CASE                [reduce using rule 112 (ARG_LIST)]
    T_ENUM                reduce using rule 67 (EXPR)
    T_ENUM                [reduce using rule 112 (ARG_LIST)]
    T_TYPEDEF             reduce using rule 67 (EXPR)
    T_TYPEDEF             [reduce using rule 112 (ARG_LIST)]
    T_RETURN              reduce using rule 67 (EXPR)
    T_RETURN              [reduce using rule 112 (ARG_LIST)]
    T_FLOAT               reduce using rule 67 (EXPR)
    T_FLOAT               [reduce using rule 112 (ARG_LIST)]
    T_FOR                 reduce using rule 67 (EXPR)
    T_FOR                 [reduce using rule 112 (ARG_LIST)]
    T_SIZEOF              reduce using rule 67 (EXPR)
    T_SIZEOF              [reduce using rule 112 (ARG_LIST)]
    T_IF                  reduce using rule 67 (EXPR)
    T_IF                  [reduce using rule 112 (ARG_LIST)]
    T_WHILE               reduce using rule 67 (EXPR)
    T_WHILE               [reduce using rule 112 (ARG_LIST)]
    T_IDENTIFIER          reduce using rule 67 (EXPR)
    T_IDENTIFIER          [reduce using rule 112 (ARG_LIST)]
    T_STRING_LITERAL      reduce using rule 67 (EXPR)
    T_STRING_LITERAL      [reduce using rule 112 (ARG_LIST)]
    T_INT_CONSTANT        reduce using rule 67 (EXPR)
    T_INT_CONSTANT        [reduce using rule 112 (ARG_LIST)]
    T_FLOAT_CONSTANT      reduce using rule 67 (EXPR)
    T_FLOAT_CONSTANT      [reduce using rule 112 (ARG_LIST)]
    T_CHARACTER_CONSTANT  reduce using rule 67 (EXPR)
    T_CHARACTER_CONSTANT  [reduce using rule 112 (ARG_LIST)]
    T_L_BRACE             reduce using rule 67 (EXPR)
    T_L_BRACE             [reduce using rule 112 (ARG_LIST)]
    T_R_BRACE             reduce using rule 67 (EXPR)
    T_R_BRACE             [reduce using rule 112 (ARG_LIST)]
    T_L_BRACKET           reduce using rule 67 (EXPR)
    T_L_BRACKET           [reduce using rule 112 (ARG_LIST)]
    T_R_BRACKET           reduce using rule 67 (EXPR)
    T_R_BRACKET           [reduce using rule 112 (ARG_LIST)]
    T_OP_PLUS             [reduce using rule 67 (EXPR)]
    T_OP_MINUS            [reduce using rule 67 (EXPR)]
    T_OP_MINUS            [reduce using rule 112 (ARG_LIST)]
    T_OP_MUL              [reduce using rule 67 (EXPR)]
    T_OP_MUL              [reduce using rule 112 (ARG_LIST)]
    T_OP_INC              reduce using rule 67 (EXPR)
    T_OP_INC              [reduce using rule 112 (ARG_LIST)]
    T_OP_DEC              reduce using rule 67 (EXPR)
    T_OP_DEC              [reduce using rule 112 (ARG_LIST)]
    T_OP_LE               [reduce using rule 67 (EXPR)]
    T_OP_EQ               [reduce using rule 67 (EXPR)]
    T_OP_NE               [reduce using rule 67 (EXPR)]
    T_OP_LT               [reduce using rule 67 (EXPR)]
    T_OP_LAND             [reduce using rule 67 (EXPR)]
    T_OP_LOR              [reduce using rule 67 (EXPR)]
    T_OP_LNOT             reduce using rule 67 (EXPR)
    T_OP_LNOT             [reduce using rule 112 (ARG_LIST)]
    T_OP_BAND             [reduce using rule 67 (EXPR)]
    T_OP_BAND             [reduce using rule 112 (ARG_LIST)]
    T_OP_BOR              [reduce using rule 67 (EXPR)]
    T_OP_BXOR             [reduce using rule 67 (EXPR)]
    T_ASSIGN              [reduce using rule 67 (EXPR)]
    T_ADD_ASSIGN          [reduce using rule 67 (EXPR)]
    T_SUB_ASSIGN          [reduce using rule 67 (EXPR)]
    T_MUL_ASSIGN          [reduce using rule 67 (EXPR)]
    T_DIV_ASSIGN          [reduce using rule 67 (EXPR)]
    T_MOD_ASSIGN          [reduce using rule 67 (EXPR)]
    ','                   [reduce using rule 67 (EXPR)]
    '.'                   [reduce using rule 67 (EXPR)]
    $default              reduce using rule 67 (EXPR)


State 186

    7 STATEMENT: STATEMENT .
  114 FOR_LIST: FOR_LIST STATEMENT .

    T_DOUBLE              reduce using rule 7 (STATEMENT)
    T_DOUBLE              [reduce using rule 114 (FOR_LIST)]
    T_INT                 reduce using rule 7 (STATEMENT)
    T_INT                 [reduce using rule 114 (FOR_LIST)]
    T_STRUCT              reduce using rule 7 (STATEMENT)
    T_STRUCT              [reduce using rule 114 (FOR_LIST)]
    T_BREAK               reduce using rule 7 (STATEMENT)
    T_BREAK               [reduce using rule 114 (FOR_LIST)]
    T_SWITCH              reduce using rule 7 (STATEMENT)
    T_SWITCH              [reduce using rule 114 (FOR_LIST)]
    T_CASE                reduce using rule 7 (STATEMENT)
    T_CASE                [reduce using rule 114 (FOR_LIST)]
    T_ENUM                reduce using rule 7 (STATEMENT)
    T_ENUM                [reduce using rule 114 (FOR_LIST)]
    T_TYPEDEF             reduce using rule 7 (STATEMENT)
    T_TYPEDEF             [reduce using rule 114 (FOR_LIST)]
    T_RETURN              reduce using rule 7 (STATEMENT)
    T_RETURN              [reduce using rule 114 (FOR_LIST)]
    T_FLOAT               reduce using rule 7 (STATEMENT)
    T_FLOAT               [reduce using rule 114 (FOR_LIST)]
    T_FOR                 reduce using rule 7 (STATEMENT)
    T_FOR                 [reduce using rule 114 (FOR_LIST)]
    T_SIZEOF              reduce using rule 7 (STATEMENT)
    T_SIZEOF              [reduce using rule 114 (FOR_LIST)]
    T_IF                  reduce using rule 7 (STATEMENT)
    T_IF                  [reduce using rule 114 (FOR_LIST)]
    T_WHILE               reduce using rule 7 (STATEMENT)
    T_WHILE               [reduce using rule 114 (FOR_LIST)]
    T_IDENTIFIER          reduce using rule 7 (STATEMENT)
    T_IDENTIFIER          [reduce using rule 114 (FOR_LIST)]
    T_STRING_LITERAL      reduce using rule 7 (STATEMENT)
    T_STRING_LITERAL      [reduce using rule 114 (FOR_LIST)]
    T_INT_CONSTANT        reduce using rule 7 (STATEMENT)
    T_INT_CONSTANT        [reduce using rule 114 (FOR_LIST)]
    T_FLOAT_CONSTANT      reduce using rule 7 (STATEMENT)
    T_FLOAT_CONSTANT      [reduce using rule 114 (FOR_LIST)]
    T_CHARACTER_CONSTANT  reduce using rule 7 (STATEMENT)
    T_CHARACTER_CONSTANT  [reduce using rule 114 (FOR_LIST)]
    T_L_BRACE             reduce using rule 7 (STATEMENT)
    T_L_BRACE             [reduce using rule 114 (FOR_LIST)]
    T_R_BRACE             reduce using rule 7 (STATEMENT)
    T_R_BRACE             [reduce using rule 114 (FOR_LIST)]
    T_L_BRACKET           reduce using rule 7 (STATEMENT)
    T_L_BRACKET           [reduce using rule 114 (FOR_LIST)]
    T_R_BRACKET           reduce using rule 7 (STATEMENT)
    T_R_BRACKET           [reduce using rule 114 (FOR_LIST)]
    T_OP_MINUS            reduce using rule 7 (STATEMENT)
    T_OP_MINUS            [reduce using rule 114 (FOR_LIST)]
    T_OP_MUL              reduce using rule 7 (STATEMENT)
    T_OP_MUL              [reduce using rule 114 (FOR_LIST)]
    T_OP_INC              reduce using rule 7 (STATEMENT)
    T_OP_INC              [reduce using rule 114 (FOR_LIST)]
    T_OP_DEC              reduce using rule 7 (STATEMENT)
    T_OP_DEC              [reduce using rule 114 (FOR_LIST)]
    T_OP_LNOT             reduce using rule 7 (STATEMENT)
    T_OP_LNOT             [reduce using rule 114 (FOR_LIST)]
    T_OP_BAND             reduce using rule 7 (STATEMENT)
    T_OP_BAND             [reduce using rule 114 (FOR_LIST)]
    $default              reduce using rule 7 (STATEMENT)


State 187

   62 SIZEOF_STATEMENT: T_SIZEOF T_L_BRACKET EXPR T_R_BRACKET . ';'

    ';'  shift, and go to state 208


State 188

   43 IF_ELSE_STATEMENT: T_IF T_L_BRACKET EXPR T_R_BRACKET . T_L_BRACE STATEMENT T_R_BRACE T_ELSE T_L_BRACE STATEMENT T_R_BRACE
   44                  | T_IF T_L_BRACKET EXPR T_R_BRACKET . T_L_BRACE STATEMENT T_R_BRACE

    T_L_BRACE  shift, and go to state 209


State 189

   45 WHILE_STATEMENT: T_WHILE T_L_BRACKET EXPR T_R_BRACKET . T_L_BRACE STATEMENT T_R_BRACE

    T_L_BRACE  shift, and go to state 210


State 190

   99 FUNCTION_CALL: T_IDENTIFIER T_L_BRACKET LIST T_R_BRACKET .

    $default  reduce using rule 99 (FUNCTION_CALL)


State 191

   84 SINGLE_EXPR: T_IDENTIFIER T_L_SQUARE EXPR T_R_SQUARE .

    $default  reduce using rule 84 (SINGLE_EXPR)


State 192

   42 COMPARE_STATEMENT: EXPR T_OP_LT EXPR ';' .

    $default  reduce using rule 42 (COMPARE_STATEMENT)


State 193

   36 ASSIGNMENT_STATEMENT: EXPR T_ASSIGN EXPR ';' .

    $default  reduce using rule 36 (ASSIGNMENT_STATEMENT)


State 194

   37 ASSIGNMENT_STATEMENT: EXPR T_ASSIGN EXPR ',' .
   68 EXPR: EXPR ',' .

    $end                  reduce using rule 37 (ASSIGNMENT_STATEMENT)
    $end                  [reduce using rule 68 (EXPR)]
    T_DOUBLE              reduce using rule 37 (ASSIGNMENT_STATEMENT)
    T_DOUBLE              [reduce using rule 68 (EXPR)]
    T_INT                 reduce using rule 37 (ASSIGNMENT_STATEMENT)
    T_INT                 [reduce using rule 68 (EXPR)]
    T_STRUCT              reduce using rule 37 (ASSIGNMENT_STATEMENT)
    T_STRUCT              [reduce using rule 68 (EXPR)]
    T_BREAK               reduce using rule 37 (ASSIGNMENT_STATEMENT)
    T_BREAK               [reduce using rule 68 (EXPR)]
    T_SWITCH              reduce using rule 37 (ASSIGNMENT_STATEMENT)
    T_SWITCH              [reduce using rule 68 (EXPR)]
    T_CASE                reduce using rule 37 (ASSIGNMENT_STATEMENT)
    T_CASE                [reduce using rule 68 (EXPR)]
    T_ENUM                reduce using rule 37 (ASSIGNMENT_STATEMENT)
    T_ENUM                [reduce using rule 68 (EXPR)]
    T_TYPEDEF             reduce using rule 37 (ASSIGNMENT_STATEMENT)
    T_TYPEDEF             [reduce using rule 68 (EXPR)]
    T_RETURN              reduce using rule 37 (ASSIGNMENT_STATEMENT)
    T_RETURN              [reduce using rule 68 (EXPR)]
    T_FLOAT               reduce using rule 37 (ASSIGNMENT_STATEMENT)
    T_FLOAT               [reduce using rule 68 (EXPR)]
    T_FOR                 reduce using rule 37 (ASSIGNMENT_STATEMENT)
    T_FOR                 [reduce using rule 68 (EXPR)]
    T_SIZEOF              reduce using rule 37 (ASSIGNMENT_STATEMENT)
    T_SIZEOF              [reduce using rule 68 (EXPR)]
    T_IF                  reduce using rule 37 (ASSIGNMENT_STATEMENT)
    T_IF                  [reduce using rule 68 (EXPR)]
    T_WHILE               reduce using rule 37 (ASSIGNMENT_STATEMENT)
    T_WHILE               [reduce using rule 68 (EXPR)]
    T_IDENTIFIER          reduce using rule 37 (ASSIGNMENT_STATEMENT)
    T_IDENTIFIER          [reduce using rule 68 (EXPR)]
    T_STRING_LITERAL      reduce using rule 37 (ASSIGNMENT_STATEMENT)
    T_STRING_LITERAL      [reduce using rule 68 (EXPR)]
    T_INT_CONSTANT        reduce using rule 37 (ASSIGNMENT_STATEMENT)
    T_INT_CONSTANT        [reduce using rule 68 (EXPR)]
    T_FLOAT_CONSTANT      reduce using rule 37 (ASSIGNMENT_STATEMENT)
    T_FLOAT_CONSTANT      [reduce using rule 68 (EXPR)]
    T_CHARACTER_CONSTANT  reduce using rule 37 (ASSIGNMENT_STATEMENT)
    T_CHARACTER_CONSTANT  [reduce using rule 68 (EXPR)]
    T_L_BRACE             reduce using rule 37 (ASSIGNMENT_STATEMENT)
    T_L_BRACE             [reduce using rule 68 (EXPR)]
    T_R_BRACE             reduce using rule 37 (ASSIGNMENT_STATEMENT)
    T_R_BRACE             [reduce using rule 68 (EXPR)]
    T_L_BRACKET           reduce using rule 37 (ASSIGNMENT_STATEMENT)
    T_L_BRACKET           [reduce using rule 68 (EXPR)]
    T_R_BRACKET           reduce using rule 37 (ASSIGNMENT_STATEMENT)
    T_R_BRACKET           [reduce using rule 68 (EXPR)]
    T_OP_PLUS             reduce using rule 68 (EXPR)
    T_OP_MINUS            reduce using rule 37 (ASSIGNMENT_STATEMENT)
    T_OP_MINUS            [reduce using rule 68 (EXPR)]
    T_OP_MUL              reduce using rule 37 (ASSIGNMENT_STATEMENT)
    T_OP_MUL              [reduce using rule 68 (EXPR)]
    T_OP_INC              reduce using rule 37 (ASSIGNMENT_STATEMENT)
    T_OP_INC              [reduce using rule 68 (EXPR)]
    T_OP_DEC              reduce using rule 37 (ASSIGNMENT_STATEMENT)
    T_OP_DEC              [reduce using rule 68 (EXPR)]
    T_OP_LE               reduce using rule 68 (EXPR)
    T_OP_EQ               reduce using rule 68 (EXPR)
    T_OP_NE               reduce using rule 68 (EXPR)
    T_OP_LT               reduce using rule 68 (EXPR)
    T_OP_LAND             reduce using rule 68 (EXPR)
    T_OP_LOR              reduce using rule 68 (EXPR)
    T_OP_LNOT             reduce using rule 37 (ASSIGNMENT_STATEMENT)
    T_OP_LNOT             [reduce using rule 68 (EXPR)]
    T_OP_BAND             reduce using rule 37 (ASSIGNMENT_STATEMENT)
    T_OP_BAND             [reduce using rule 68 (EXPR)]
    T_OP_BOR              reduce using rule 68 (EXPR)
    T_OP_BXOR             reduce using rule 68 (EXPR)
    ';'                   reduce using rule 68 (EXPR)
    ','                   reduce using rule 68 (EXPR)
    '.'                   reduce using rule 68 (EXPR)
    $default              reduce using rule 37 (ASSIGNMENT_STATEMENT)


State 195

   54 TWO_OP_STATEMENT: EXPR T_ADD_ASSIGN EXPR ';' .

    $default  reduce using rule 54 (TWO_OP_STATEMENT)


State 196

   57 TWO_OP_STATEMENT: EXPR T_SUB_ASSIGN EXPR ';' .

    $default  reduce using rule 57 (TWO_OP_STATEMENT)


State 197

   56 TWO_OP_STATEMENT: EXPR T_MUL_ASSIGN EXPR ';' .

    $default  reduce using rule 56 (TWO_OP_STATEMENT)


State 198

   58 TWO_OP_STATEMENT: EXPR T_DIV_ASSIGN EXPR ';' .

    $default  reduce using rule 58 (TWO_OP_STATEMENT)


State 199

   55 TWO_OP_STATEMENT: EXPR T_MOD_ASSIGN EXPR ';' .

    $default  reduce using rule 55 (TWO_OP_STATEMENT)


State 200

   30 ARRAY_DECLARATION: TYPE T_IDENTIFIER T_L_SQUARE EXPR . T_R_SQUARE ';'
   67 EXPR: EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   70        | EXPR . T_OP_PLUS EXPR
   71        | EXPR . T_OP_MINUS EXPR
   72        | EXPR . T_OP_MUL EXPR
   74        | EXPR . T_OP_BAND EXPR
   75        | EXPR . T_OP_BOR EXPR
   76        | EXPR . T_OP_BXOR EXPR
   77        | EXPR . T_OP_NE EXPR
   78        | EXPR . T_OP_LE EXPR
   79        | EXPR . T_OP_LT EXPR
   80        | EXPR . T_OP_LAND EXPR
   81        | EXPR . T_OP_LOR EXPR
   98 DOT: EXPR . '.' EXPR

    T_R_SQUARE  shift, and go to state 211
    T_OP_PLUS   shift, and go to state 96
    T_OP_MINUS  shift, and go to state 97
    T_OP_MUL    shift, and go to state 98
    T_OP_LE     shift, and go to state 99
    T_OP_EQ     shift, and go to state 100
    T_OP_NE     shift, and go to state 101
    T_OP_LT     shift, and go to state 123
    T_OP_LAND   shift, and go to state 103
    T_OP_LOR    shift, and go to state 104
    T_OP_BAND   shift, and go to state 105
    T_OP_BOR    shift, and go to state 106
    T_OP_BXOR   shift, and go to state 107
    ','         shift, and go to state 114
    '.'         shift, and go to state 115

    T_R_SQUARE  [reduce using rule 67 (EXPR)]
    T_OP_PLUS   [reduce using rule 67 (EXPR)]
    T_OP_MINUS  [reduce using rule 67 (EXPR)]
    T_OP_MUL    [reduce using rule 67 (EXPR)]
    T_OP_LE     [reduce using rule 67 (EXPR)]
    T_OP_EQ     [reduce using rule 67 (EXPR)]
    T_OP_NE     [reduce using rule 67 (EXPR)]
    T_OP_LT     [reduce using rule 67 (EXPR)]
    T_OP_LAND   [reduce using rule 67 (EXPR)]
    T_OP_LOR    [reduce using rule 67 (EXPR)]
    T_OP_BAND   [reduce using rule 67 (EXPR)]
    T_OP_BOR    [reduce using rule 67 (EXPR)]
    T_OP_BXOR   [reduce using rule 67 (EXPR)]
    ','         [reduce using rule 67 (EXPR)]
    '.'         [reduce using rule 67 (EXPR)]


State 201

   41 ASSIGNMENT_DEFINITION: TYPE T_IDENTIFIER T_ASSIGN EXPR .
   67 EXPR: EXPR .
   68     | EXPR . ','
   69 OP_EXPR: EXPR . T_OP_EQ EXPR
   70        | EXPR . T_OP_PLUS EXPR
   71        | EXPR . T_OP_MINUS EXPR
   72        | EXPR . T_OP_MUL EXPR
   74        | EXPR . T_OP_BAND EXPR
   75        | EXPR . T_OP_BOR EXPR
   76        | EXPR . T_OP_BXOR EXPR
   77        | EXPR . T_OP_NE EXPR
   78        | EXPR . T_OP_LE EXPR
   79        | EXPR . T_OP_LT EXPR
   80        | EXPR . T_OP_LAND EXPR
   81        | EXPR . T_OP_LOR EXPR
   98 DOT: EXPR . '.' EXPR

    T_OP_PLUS   shift, and go to state 96
    T_OP_MINUS  shift, and go to state 97
    T_OP_MUL    shift, and go to state 98
    T_OP_LE     shift, and go to state 99
    T_OP_EQ     shift, and go to state 100
    T_OP_NE     shift, and go to state 101
    T_OP_LT     shift, and go to state 123
    T_OP_LAND   shift, and go to state 103
    T_OP_LOR    shift, and go to state 104
    T_OP_BAND   shift, and go to state 105
    T_OP_BOR    shift, and go to state 106
    T_OP_BXOR   shift, and go to state 107
    ','         shift, and go to state 114
    '.'         shift, and go to state 115

    $end                  reduce using rule 41 (ASSIGNMENT_DEFINITION)
    $end                  [reduce using rule 67 (EXPR)]
    T_DOUBLE              reduce using rule 41 (ASSIGNMENT_DEFINITION)
    T_DOUBLE              [reduce using rule 67 (EXPR)]
    T_INT                 reduce using rule 41 (ASSIGNMENT_DEFINITION)
    T_INT                 [reduce using rule 67 (EXPR)]
    T_STRUCT              reduce using rule 41 (ASSIGNMENT_DEFINITION)
    T_STRUCT              [reduce using rule 67 (EXPR)]
    T_BREAK               reduce using rule 41 (ASSIGNMENT_DEFINITION)
    T_BREAK               [reduce using rule 67 (EXPR)]
    T_SWITCH              reduce using rule 41 (ASSIGNMENT_DEFINITION)
    T_SWITCH              [reduce using rule 67 (EXPR)]
    T_CASE                reduce using rule 41 (ASSIGNMENT_DEFINITION)
    T_CASE                [reduce using rule 67 (EXPR)]
    T_ENUM                reduce using rule 41 (ASSIGNMENT_DEFINITION)
    T_ENUM                [reduce using rule 67 (EXPR)]
    T_TYPEDEF             reduce using rule 41 (ASSIGNMENT_DEFINITION)
    T_TYPEDEF             [reduce using rule 67 (EXPR)]
    T_RETURN              reduce using rule 41 (ASSIGNMENT_DEFINITION)
    T_RETURN              [reduce using rule 67 (EXPR)]
    T_FLOAT               reduce using rule 41 (ASSIGNMENT_DEFINITION)
    T_FLOAT               [reduce using rule 67 (EXPR)]
    T_FOR                 reduce using rule 41 (ASSIGNMENT_DEFINITION)
    T_FOR                 [reduce using rule 67 (EXPR)]
    T_SIZEOF              reduce using rule 41 (ASSIGNMENT_DEFINITION)
    T_SIZEOF              [reduce using rule 67 (EXPR)]
    T_IF                  reduce using rule 41 (ASSIGNMENT_DEFINITION)
    T_IF                  [reduce using rule 67 (EXPR)]
    T_WHILE               reduce using rule 41 (ASSIGNMENT_DEFINITION)
    T_WHILE               [reduce using rule 67 (EXPR)]
    T_IDENTIFIER          reduce using rule 41 (ASSIGNMENT_DEFINITION)
    T_IDENTIFIER          [reduce using rule 67 (EXPR)]
    T_STRING_LITERAL      reduce using rule 41 (ASSIGNMENT_DEFINITION)
    T_STRING_LITERAL      [reduce using rule 67 (EXPR)]
    T_INT_CONSTANT        reduce using rule 41 (ASSIGNMENT_DEFINITION)
    T_INT_CONSTANT        [reduce using rule 67 (EXPR)]
    T_FLOAT_CONSTANT      reduce using rule 41 (ASSIGNMENT_DEFINITION)
    T_FLOAT_CONSTANT      [reduce using rule 67 (EXPR)]
    T_CHARACTER_CONSTANT  reduce using rule 41 (ASSIGNMENT_DEFINITION)
    T_CHARACTER_CONSTANT  [reduce using rule 67 (EXPR)]
    T_L_BRACE             reduce using rule 41 (ASSIGNMENT_DEFINITION)
    T_L_BRACE             [reduce using rule 67 (EXPR)]
    T_R_BRACE             reduce using rule 41 (ASSIGNMENT_DEFINITION)
    T_R_BRACE             [reduce using rule 67 (EXPR)]
    T_L_BRACKET           reduce using rule 41 (ASSIGNMENT_DEFINITION)
    T_L_BRACKET           [reduce using rule 67 (EXPR)]
    T_R_BRACKET           reduce using rule 41 (ASSIGNMENT_DEFINITION)
    T_R_BRACKET           [reduce using rule 67 (EXPR)]
    T_OP_PLUS             [reduce using rule 67 (EXPR)]
    T_OP_MINUS            [reduce using rule 41 (ASSIGNMENT_DEFINITION)]
    T_OP_MINUS            [reduce using rule 67 (EXPR)]
    T_OP_MUL              [reduce using rule 41 (ASSIGNMENT_DEFINITION)]
    T_OP_MUL              [reduce using rule 67 (EXPR)]
    T_OP_INC              reduce using rule 41 (ASSIGNMENT_DEFINITION)
    T_OP_INC              [reduce using rule 67 (EXPR)]
    T_OP_DEC              reduce using rule 41 (ASSIGNMENT_DEFINITION)
    T_OP_DEC              [reduce using rule 67 (EXPR)]
    T_OP_LE               [reduce using rule 67 (EXPR)]
    T_OP_EQ               [reduce using rule 67 (EXPR)]
    T_OP_NE               [reduce using rule 67 (EXPR)]
    T_OP_LT               [reduce using rule 67 (EXPR)]
    T_OP_LAND             [reduce using rule 67 (EXPR)]
    T_OP_LOR              [reduce using rule 67 (EXPR)]
    T_OP_LNOT             reduce using rule 41 (ASSIGNMENT_DEFINITION)
    T_OP_LNOT             [reduce using rule 67 (EXPR)]
    T_OP_BAND             [reduce using rule 41 (ASSIGNMENT_DEFINITION)]
    T_OP_BAND             [reduce using rule 67 (EXPR)]
    T_OP_BOR              [reduce using rule 67 (EXPR)]
    T_OP_BXOR             [reduce using rule 67 (EXPR)]
    ','                   [reduce using rule 67 (EXPR)]
    '.'                   [reduce using rule 67 (EXPR)]
    $default              reduce using rule 41 (ASSIGNMENT_DEFINITION)


State 202

    6 FUNCTION: TYPE FUNCTION_CALL T_L_BRACE STATEMENT . T_R_BRACE
    7 STATEMENT: STATEMENT .

    T_R_BRACE  shift, and go to state 212

    T_R_BRACE  [reduce using rule 7 (STATEMENT)]


State 203

   61 STRUCT_STATEMENT: T_STRUCT T_IDENTIFIER T_L_BRACE STATEMENT T_R_BRACE . ';'

    ';'  shift, and go to state 213


State 204

   48 SWITCH_STATEMENT: T_SWITCH T_L_BRACKET EXPR T_R_BRACKET T_L_BRACE . CASE_STATEMENT T_R_BRACE

    T_CASE  shift, and go to state 6

    CASE_STATEMENT  go to state 214


State 205

    7 STATEMENT: STATEMENT .
   15          | T_L_BRACE STATEMENT . T_R_BRACE
   49 CASE_STATEMENT: T_CASE EXPR ':' T_L_BRACE STATEMENT . T_R_BRACE

    T_R_BRACE  shift, and go to state 215

    T_R_BRACE  [reduce using rule 7 (STATEMENT)]


State 206

   47 ENUM_STATEMENT: T_ENUM T_IDENTIFIER T_L_BRACE STATEMENT T_R_BRACE . ';'

    ';'  shift, and go to state 216


State 207

   46 FOR_STATEMENT: T_FOR T_L_BRACE LIST T_R_BRACE T_L_BRACKET . STATEMENT T_R_BRACKET

    T_DOUBLE              shift, and go to state 1
    T_INT                 shift, and go to state 2
    T_STRUCT              shift, and go to state 3
    T_BREAK               shift, and go to state 4
    T_SWITCH              shift, and go to state 5
    T_CASE                shift, and go to state 6
    T_ENUM                shift, and go to state 7
    T_TYPEDEF             shift, and go to state 8
    T_RETURN              shift, and go to state 9
    T_FLOAT               shift, and go to state 10
    T_FOR                 shift, and go to state 11
    T_SIZEOF              shift, and go to state 12
    T_IF                  shift, and go to state 13
    T_WHILE               shift, and go to state 14
    T_IDENTIFIER          shift, and go to state 15
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACE             shift, and go to state 20
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_INC              shift, and go to state 24
    T_OP_DEC              shift, and go to state 25
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    STATEMENT              go to state 217
    RETURN_STATEMENT       go to state 33
    DECLARATION_STATEMENT  go to state 34
    ARRAY_DECLARATION      go to state 35
    FUNCTION_DECLARATION   go to state 36
    REGULAR_DECLARATION    go to state 37
    STRUCT_DECLARATION     go to state 38
    ASSIGNMENT_STATEMENT   go to state 39
    ASSIGNMENT_DEFINITION  go to state 40
    COMPARE_STATEMENT      go to state 41
    IF_ELSE_STATEMENT      go to state 42
    WHILE_STATEMENT        go to state 43
    FOR_STATEMENT          go to state 44
    ENUM_STATEMENT         go to state 45
    SWITCH_STATEMENT       go to state 46
    CASE_STATEMENT         go to state 47
    BREAK_STATEMENT        go to state 48
    TYPEDEF_STATEMENT      go to state 49
    TWO_OP_STATEMENT       go to state 50
    INCREASE_STATEMENT     go to state 51
    STRUCT_STATEMENT       go to state 52
    SIZEOF_STATEMENT       go to state 53
    EXPR                   go to state 54
    OP_EXPR                go to state 55
    SINGLE_EXPR            go to state 56
    LOGIC_EXPR             go to state 57
    NUMBER                 go to state 58
    CHARACTOR              go to state 59
    INTEGER                go to state 60
    FLOAT                  go to state 61
    DOT                    go to state 62
    FUNCTION_CALL          go to state 63
    TYPE                   go to state 85
    POINTER                go to state 65


State 208

   62 SIZEOF_STATEMENT: T_SIZEOF T_L_BRACKET EXPR T_R_BRACKET ';' .

    $default  reduce using rule 62 (SIZEOF_STATEMENT)


State 209

   43 IF_ELSE_STATEMENT: T_IF T_L_BRACKET EXPR T_R_BRACKET T_L_BRACE . STATEMENT T_R_BRACE T_ELSE T_L_BRACE STATEMENT T_R_BRACE
   44                  | T_IF T_L_BRACKET EXPR T_R_BRACKET T_L_BRACE . STATEMENT T_R_BRACE

    T_DOUBLE              shift, and go to state 1
    T_INT                 shift, and go to state 2
    T_STRUCT              shift, and go to state 3
    T_BREAK               shift, and go to state 4
    T_SWITCH              shift, and go to state 5
    T_CASE                shift, and go to state 6
    T_ENUM                shift, and go to state 7
    T_TYPEDEF             shift, and go to state 8
    T_RETURN              shift, and go to state 9
    T_FLOAT               shift, and go to state 10
    T_FOR                 shift, and go to state 11
    T_SIZEOF              shift, and go to state 12
    T_IF                  shift, and go to state 13
    T_WHILE               shift, and go to state 14
    T_IDENTIFIER          shift, and go to state 15
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACE             shift, and go to state 20
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_INC              shift, and go to state 24
    T_OP_DEC              shift, and go to state 25
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    STATEMENT              go to state 218
    RETURN_STATEMENT       go to state 33
    DECLARATION_STATEMENT  go to state 34
    ARRAY_DECLARATION      go to state 35
    FUNCTION_DECLARATION   go to state 36
    REGULAR_DECLARATION    go to state 37
    STRUCT_DECLARATION     go to state 38
    ASSIGNMENT_STATEMENT   go to state 39
    ASSIGNMENT_DEFINITION  go to state 40
    COMPARE_STATEMENT      go to state 41
    IF_ELSE_STATEMENT      go to state 42
    WHILE_STATEMENT        go to state 43
    FOR_STATEMENT          go to state 44
    ENUM_STATEMENT         go to state 45
    SWITCH_STATEMENT       go to state 46
    CASE_STATEMENT         go to state 47
    BREAK_STATEMENT        go to state 48
    TYPEDEF_STATEMENT      go to state 49
    TWO_OP_STATEMENT       go to state 50
    INCREASE_STATEMENT     go to state 51
    STRUCT_STATEMENT       go to state 52
    SIZEOF_STATEMENT       go to state 53
    EXPR                   go to state 54
    OP_EXPR                go to state 55
    SINGLE_EXPR            go to state 56
    LOGIC_EXPR             go to state 57
    NUMBER                 go to state 58
    CHARACTOR              go to state 59
    INTEGER                go to state 60
    FLOAT                  go to state 61
    DOT                    go to state 62
    FUNCTION_CALL          go to state 63
    TYPE                   go to state 85
    POINTER                go to state 65


State 210

   45 WHILE_STATEMENT: T_WHILE T_L_BRACKET EXPR T_R_BRACKET T_L_BRACE . STATEMENT T_R_BRACE

    T_DOUBLE              shift, and go to state 1
    T_INT                 shift, and go to state 2
    T_STRUCT              shift, and go to state 3
    T_BREAK               shift, and go to state 4
    T_SWITCH              shift, and go to state 5
    T_CASE                shift, and go to state 6
    T_ENUM                shift, and go to state 7
    T_TYPEDEF             shift, and go to state 8
    T_RETURN              shift, and go to state 9
    T_FLOAT               shift, and go to state 10
    T_FOR                 shift, and go to state 11
    T_SIZEOF              shift, and go to state 12
    T_IF                  shift, and go to state 13
    T_WHILE               shift, and go to state 14
    T_IDENTIFIER          shift, and go to state 15
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACE             shift, and go to state 20
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_INC              shift, and go to state 24
    T_OP_DEC              shift, and go to state 25
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    STATEMENT              go to state 219
    RETURN_STATEMENT       go to state 33
    DECLARATION_STATEMENT  go to state 34
    ARRAY_DECLARATION      go to state 35
    FUNCTION_DECLARATION   go to state 36
    REGULAR_DECLARATION    go to state 37
    STRUCT_DECLARATION     go to state 38
    ASSIGNMENT_STATEMENT   go to state 39
    ASSIGNMENT_DEFINITION  go to state 40
    COMPARE_STATEMENT      go to state 41
    IF_ELSE_STATEMENT      go to state 42
    WHILE_STATEMENT        go to state 43
    FOR_STATEMENT          go to state 44
    ENUM_STATEMENT         go to state 45
    SWITCH_STATEMENT       go to state 46
    CASE_STATEMENT         go to state 47
    BREAK_STATEMENT        go to state 48
    TYPEDEF_STATEMENT      go to state 49
    TWO_OP_STATEMENT       go to state 50
    INCREASE_STATEMENT     go to state 51
    STRUCT_STATEMENT       go to state 52
    SIZEOF_STATEMENT       go to state 53
    EXPR                   go to state 54
    OP_EXPR                go to state 55
    SINGLE_EXPR            go to state 56
    LOGIC_EXPR             go to state 57
    NUMBER                 go to state 58
    CHARACTOR              go to state 59
    INTEGER                go to state 60
    FLOAT                  go to state 61
    DOT                    go to state 62
    FUNCTION_CALL          go to state 63
    TYPE                   go to state 85
    POINTER                go to state 65


State 211

   30 ARRAY_DECLARATION: TYPE T_IDENTIFIER T_L_SQUARE EXPR T_R_SQUARE . ';'

    ';'  shift, and go to state 220


State 212

    6 FUNCTION: TYPE FUNCTION_CALL T_L_BRACE STATEMENT T_R_BRACE .

    $default  reduce using rule 6 (FUNCTION)


State 213

   61 STRUCT_STATEMENT: T_STRUCT T_IDENTIFIER T_L_BRACE STATEMENT T_R_BRACE ';' .

    $default  reduce using rule 61 (STRUCT_STATEMENT)


State 214

   48 SWITCH_STATEMENT: T_SWITCH T_L_BRACKET EXPR T_R_BRACKET T_L_BRACE CASE_STATEMENT . T_R_BRACE

    T_R_BRACE  shift, and go to state 221


State 215

   15 STATEMENT: T_L_BRACE STATEMENT T_R_BRACE .
   49 CASE_STATEMENT: T_CASE EXPR ':' T_L_BRACE STATEMENT T_R_BRACE .

    $end                  reduce using rule 15 (STATEMENT)
    $end                  [reduce using rule 49 (CASE_STATEMENT)]
    T_DOUBLE              reduce using rule 15 (STATEMENT)
    T_DOUBLE              [reduce using rule 49 (CASE_STATEMENT)]
    T_INT                 reduce using rule 15 (STATEMENT)
    T_INT                 [reduce using rule 49 (CASE_STATEMENT)]
    T_STRUCT              reduce using rule 15 (STATEMENT)
    T_STRUCT              [reduce using rule 49 (CASE_STATEMENT)]
    T_BREAK               reduce using rule 15 (STATEMENT)
    T_BREAK               [reduce using rule 49 (CASE_STATEMENT)]
    T_SWITCH              reduce using rule 15 (STATEMENT)
    T_SWITCH              [reduce using rule 49 (CASE_STATEMENT)]
    T_CASE                reduce using rule 15 (STATEMENT)
    T_CASE                [reduce using rule 49 (CASE_STATEMENT)]
    T_ENUM                reduce using rule 15 (STATEMENT)
    T_ENUM                [reduce using rule 49 (CASE_STATEMENT)]
    T_TYPEDEF             reduce using rule 15 (STATEMENT)
    T_TYPEDEF             [reduce using rule 49 (CASE_STATEMENT)]
    T_RETURN              reduce using rule 15 (STATEMENT)
    T_RETURN              [reduce using rule 49 (CASE_STATEMENT)]
    T_FLOAT               reduce using rule 15 (STATEMENT)
    T_FLOAT               [reduce using rule 49 (CASE_STATEMENT)]
    T_FOR                 reduce using rule 15 (STATEMENT)
    T_FOR                 [reduce using rule 49 (CASE_STATEMENT)]
    T_SIZEOF              reduce using rule 15 (STATEMENT)
    T_SIZEOF              [reduce using rule 49 (CASE_STATEMENT)]
    T_IF                  reduce using rule 15 (STATEMENT)
    T_IF                  [reduce using rule 49 (CASE_STATEMENT)]
    T_WHILE               reduce using rule 15 (STATEMENT)
    T_WHILE               [reduce using rule 49 (CASE_STATEMENT)]
    T_IDENTIFIER          reduce using rule 15 (STATEMENT)
    T_IDENTIFIER          [reduce using rule 49 (CASE_STATEMENT)]
    T_STRING_LITERAL      reduce using rule 15 (STATEMENT)
    T_STRING_LITERAL      [reduce using rule 49 (CASE_STATEMENT)]
    T_INT_CONSTANT        reduce using rule 15 (STATEMENT)
    T_INT_CONSTANT        [reduce using rule 49 (CASE_STATEMENT)]
    T_FLOAT_CONSTANT      reduce using rule 15 (STATEMENT)
    T_FLOAT_CONSTANT      [reduce using rule 49 (CASE_STATEMENT)]
    T_CHARACTER_CONSTANT  reduce using rule 15 (STATEMENT)
    T_CHARACTER_CONSTANT  [reduce using rule 49 (CASE_STATEMENT)]
    T_L_BRACE             reduce using rule 15 (STATEMENT)
    T_L_BRACE             [reduce using rule 49 (CASE_STATEMENT)]
    T_R_BRACE             reduce using rule 15 (STATEMENT)
    T_R_BRACE             [reduce using rule 49 (CASE_STATEMENT)]
    T_L_BRACKET           reduce using rule 15 (STATEMENT)
    T_L_BRACKET           [reduce using rule 49 (CASE_STATEMENT)]
    T_R_BRACKET           reduce using rule 15 (STATEMENT)
    T_R_BRACKET           [reduce using rule 49 (CASE_STATEMENT)]
    T_OP_MINUS            reduce using rule 15 (STATEMENT)
    T_OP_MINUS            [reduce using rule 49 (CASE_STATEMENT)]
    T_OP_MUL              reduce using rule 15 (STATEMENT)
    T_OP_MUL              [reduce using rule 49 (CASE_STATEMENT)]
    T_OP_INC              reduce using rule 15 (STATEMENT)
    T_OP_INC              [reduce using rule 49 (CASE_STATEMENT)]
    T_OP_DEC              reduce using rule 15 (STATEMENT)
    T_OP_DEC              [reduce using rule 49 (CASE_STATEMENT)]
    T_OP_LNOT             reduce using rule 15 (STATEMENT)
    T_OP_LNOT             [reduce using rule 49 (CASE_STATEMENT)]
    T_OP_BAND             reduce using rule 15 (STATEMENT)
    T_OP_BAND             [reduce using rule 49 (CASE_STATEMENT)]
    $default              reduce using rule 15 (STATEMENT)


State 216

   47 ENUM_STATEMENT: T_ENUM T_IDENTIFIER T_L_BRACE STATEMENT T_R_BRACE ';' .

    $default  reduce using rule 47 (ENUM_STATEMENT)


State 217

    7 STATEMENT: STATEMENT .
   46 FOR_STATEMENT: T_FOR T_L_BRACE LIST T_R_BRACE T_L_BRACKET STATEMENT . T_R_BRACKET

    T_R_BRACKET  shift, and go to state 222

    T_R_BRACKET  [reduce using rule 7 (STATEMENT)]


State 218

    7 STATEMENT: STATEMENT .
   43 IF_ELSE_STATEMENT: T_IF T_L_BRACKET EXPR T_R_BRACKET T_L_BRACE STATEMENT . T_R_BRACE T_ELSE T_L_BRACE STATEMENT T_R_BRACE
   44                  | T_IF T_L_BRACKET EXPR T_R_BRACKET T_L_BRACE STATEMENT . T_R_BRACE

    T_R_BRACE  shift, and go to state 223

    T_R_BRACE  [reduce using rule 7 (STATEMENT)]


State 219

    7 STATEMENT: STATEMENT .
   45 WHILE_STATEMENT: T_WHILE T_L_BRACKET EXPR T_R_BRACKET T_L_BRACE STATEMENT . T_R_BRACE

    T_R_BRACE  shift, and go to state 224

    T_R_BRACE  [reduce using rule 7 (STATEMENT)]


State 220

   30 ARRAY_DECLARATION: TYPE T_IDENTIFIER T_L_SQUARE EXPR T_R_SQUARE ';' .

    $default  reduce using rule 30 (ARRAY_DECLARATION)


State 221

   48 SWITCH_STATEMENT: T_SWITCH T_L_BRACKET EXPR T_R_BRACKET T_L_BRACE CASE_STATEMENT T_R_BRACE .

    $default  reduce using rule 48 (SWITCH_STATEMENT)


State 222

   46 FOR_STATEMENT: T_FOR T_L_BRACE LIST T_R_BRACE T_L_BRACKET STATEMENT T_R_BRACKET .

    $default  reduce using rule 46 (FOR_STATEMENT)


State 223

   43 IF_ELSE_STATEMENT: T_IF T_L_BRACKET EXPR T_R_BRACKET T_L_BRACE STATEMENT T_R_BRACE . T_ELSE T_L_BRACE STATEMENT T_R_BRACE
   44                  | T_IF T_L_BRACKET EXPR T_R_BRACKET T_L_BRACE STATEMENT T_R_BRACE .

    T_ELSE  shift, and go to state 225

    $default  reduce using rule 44 (IF_ELSE_STATEMENT)


State 224

   45 WHILE_STATEMENT: T_WHILE T_L_BRACKET EXPR T_R_BRACKET T_L_BRACE STATEMENT T_R_BRACE .

    $default  reduce using rule 45 (WHILE_STATEMENT)


State 225

   43 IF_ELSE_STATEMENT: T_IF T_L_BRACKET EXPR T_R_BRACKET T_L_BRACE STATEMENT T_R_BRACE T_ELSE . T_L_BRACE STATEMENT T_R_BRACE

    T_L_BRACE  shift, and go to state 226


State 226

   43 IF_ELSE_STATEMENT: T_IF T_L_BRACKET EXPR T_R_BRACKET T_L_BRACE STATEMENT T_R_BRACE T_ELSE T_L_BRACE . STATEMENT T_R_BRACE

    T_DOUBLE              shift, and go to state 1
    T_INT                 shift, and go to state 2
    T_STRUCT              shift, and go to state 3
    T_BREAK               shift, and go to state 4
    T_SWITCH              shift, and go to state 5
    T_CASE                shift, and go to state 6
    T_ENUM                shift, and go to state 7
    T_TYPEDEF             shift, and go to state 8
    T_RETURN              shift, and go to state 9
    T_FLOAT               shift, and go to state 10
    T_FOR                 shift, and go to state 11
    T_SIZEOF              shift, and go to state 12
    T_IF                  shift, and go to state 13
    T_WHILE               shift, and go to state 14
    T_IDENTIFIER          shift, and go to state 15
    T_STRING_LITERAL      shift, and go to state 16
    T_INT_CONSTANT        shift, and go to state 17
    T_FLOAT_CONSTANT      shift, and go to state 18
    T_CHARACTER_CONSTANT  shift, and go to state 19
    T_L_BRACE             shift, and go to state 20
    T_L_BRACKET           shift, and go to state 21
    T_OP_MINUS            shift, and go to state 22
    T_OP_MUL              shift, and go to state 23
    T_OP_INC              shift, and go to state 24
    T_OP_DEC              shift, and go to state 25
    T_OP_LNOT             shift, and go to state 26
    T_OP_BAND             shift, and go to state 27

    STATEMENT              go to state 227
    RETURN_STATEMENT       go to state 33
    DECLARATION_STATEMENT  go to state 34
    ARRAY_DECLARATION      go to state 35
    FUNCTION_DECLARATION   go to state 36
    REGULAR_DECLARATION    go to state 37
    STRUCT_DECLARATION     go to state 38
    ASSIGNMENT_STATEMENT   go to state 39
    ASSIGNMENT_DEFINITION  go to state 40
    COMPARE_STATEMENT      go to state 41
    IF_ELSE_STATEMENT      go to state 42
    WHILE_STATEMENT        go to state 43
    FOR_STATEMENT          go to state 44
    ENUM_STATEMENT         go to state 45
    SWITCH_STATEMENT       go to state 46
    CASE_STATEMENT         go to state 47
    BREAK_STATEMENT        go to state 48
    TYPEDEF_STATEMENT      go to state 49
    TWO_OP_STATEMENT       go to state 50
    INCREASE_STATEMENT     go to state 51
    STRUCT_STATEMENT       go to state 52
    SIZEOF_STATEMENT       go to state 53
    EXPR                   go to state 54
    OP_EXPR                go to state 55
    SINGLE_EXPR            go to state 56
    LOGIC_EXPR             go to state 57
    NUMBER                 go to state 58
    CHARACTOR              go to state 59
    INTEGER                go to state 60
    FLOAT                  go to state 61
    DOT                    go to state 62
    FUNCTION_CALL          go to state 63
    TYPE                   go to state 85
    POINTER                go to state 65


State 227

    7 STATEMENT: STATEMENT .
   43 IF_ELSE_STATEMENT: T_IF T_L_BRACKET EXPR T_R_BRACKET T_L_BRACE STATEMENT T_R_BRACE T_ELSE T_L_BRACE STATEMENT . T_R_BRACE

    T_R_BRACE  shift, and go to state 228

    T_R_BRACE  [reduce using rule 7 (STATEMENT)]


State 228

   43 IF_ELSE_STATEMENT: T_IF T_L_BRACKET EXPR T_R_BRACKET T_L_BRACE STATEMENT T_R_BRACE T_ELSE T_L_BRACE STATEMENT T_R_BRACE .

    $default  reduce using rule 43 (IF_ELSE_STATEMENT)
